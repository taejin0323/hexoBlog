{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/attackOnNunu.png","path":"img/attackOnNunu.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/attackOn.png","path":"img/attackOn.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/default_cover.png","path":"img/default_cover.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/quotes.png","path":"img/quotes.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/md5.min.js","path":"js/md5.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/history.png","path":"img/history.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/componentsOfCDA.png","path":"img/componentsOfCDA.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/animation.js","path":"js/common/animation.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/pack.js","path":"js/common/pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/back-top.js","path":"js/layout/back-top.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/loading.js","path":"js/layout/loading.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/utils.js","path":"js/common/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/header.js","path":"js/layout/header.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/post.js","path":"js/layout/post.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/libs/axios.min.js","path":"js/libs/axios.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/libs/lunr.min.js","path":"js/libs/lunr.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/page/search.js","path":"js/page/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/header-bg.jpg","path":"img/header-bg.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/page/post.js","path":"js/page/post.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/base/index.scss","path":"scss/base/index.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/c-cda.png","path":"img/c-cda.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/error.scss","path":"scss/views/page/error.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/archive.scss","path":"scss/views/page/archive.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/about.scss","path":"scss/views/page/about.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/index.scss","path":"scss/views/page/index.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/search.scss","path":"scss/views/page/search.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/category.scss","path":"scss/views/page/category.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/post.scss","path":"scss/views/page/post.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/tag.scss","path":"scss/views/page/tag.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/c-cda2.png","path":"img/c-cda2.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-skapp/.gitignore","hash":"c996c55a53a02302d5b5db8082b0a2d525cc1007","modified":1547618521030},{"_id":"themes/hexo-theme-skapp/LICENSE","hash":"348ad688e145bb442f07e6e5b762d3e8ba66190e","modified":1547618521031},{"_id":"themes/hexo-theme-skapp/.DS_Store","hash":"6022f35abe682bc38d98e463558212e409add27f","modified":1547625673433},{"_id":"themes/hexo-theme-skapp/README-cn.md","hash":"043170db32e43b4189084afecc3c06ec952878ae","modified":1547618521031},{"_id":"source/404.md","hash":"d8a97e61267de195dde6702531b9706fa06137da","modified":1547624174038},{"_id":"themes/hexo-theme-skapp/_config.yml","hash":"3804869a5c599ade3c6c3eb62d310f5d1c22f10e","modified":1547618521032},{"_id":"themes/hexo-theme-skapp/README.md","hash":"f113648cf634ec86fed6cc887d3b8050a4b5c307","modified":1547618521032},{"_id":"themes/hexo-theme-skapp/package.json","hash":"46ab781f3d3b8937b0868593293e0ab24b6ea919","modified":1547618521049},{"_id":"source/_data/contact.yml","hash":"c4a1143bcd33e9e98c0f6d60e05a53a7270c01fb","modified":1548066491704},{"_id":"source/_posts/20190117-markdown-basic.md","hash":"97c1c6011534d5f6d97d3acd67b53a5a2d852bf0","modified":1548228638842},{"_id":"source/_posts/20190123-blog-issues.md","hash":"c8a1de1feffe0879c8071b13f53afdd46c0abf9c","modified":1548918106810},{"_id":"source/_posts/20190119-cda-tutorial.md","hash":"edcb92658f4b3b51f753067e5aa4a071dce7b101","modified":1548753945744},{"_id":"source/_posts/20190122-spring.md","hash":"abcf21df2ee91ecc7894009f9f4c4a80522bc559","modified":1549092093524},{"_id":"source/_posts/20190202-spring-keywords.md","hash":"c736cb18c03f6f310700d7f1fff3721235c79b56","modified":1549285904273},{"_id":"source/_posts/20190123-markdown-plugin.md","hash":"17d60b9a804a01615c10ab6dcd75e4e4dc08460e","modified":1548230988810},{"_id":"source/_posts/20190128-cda-tutorial-1.md","hash":"f1e1e4c52d916497c1abb432e945b4dba9e9d82c","modified":1548917670013},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1547618311302},{"_id":"source/about/index.md","hash":"50ece33a51459fefc0c77be81a7801033b5d0db0","modified":1547892262259},{"_id":"source/_posts/20190131-spring-module.md","hash":"e1948248d8ad1de23ef5c1ae231efb68d0eb0cd0","modified":1549092094659},{"_id":"source/_posts/20190204-spring-pojo.md","hash":"68e7fbb46478a5d1a8df62d74fb4b89b8fb76df6","modified":1549287449471},{"_id":"themes/hexo-theme-skapp/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1547618521012},{"_id":"themes/hexo-theme-skapp/.git/config","hash":"02d802bf33eee6e7f1e028caccfd5f0a0b8fd995","modified":1547618521021},{"_id":"themes/hexo-theme-skapp/.git/index","hash":"f0c87d1b2fec9bc283b1570a3b0dc6f24a858196","modified":1547620085968},{"_id":"source/search/index.md","hash":"59d3bc1d7ab1f7255b1bb044a4644ba7ef07f44a","modified":1547622706504},{"_id":"themes/hexo-theme-skapp/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1547618519026},{"_id":"themes/hexo-theme-skapp/.git/packed-refs","hash":"a3b2adef5b133d99d9a3d5d520ced47e75bb0d59","modified":1547618521007},{"_id":"themes/hexo-theme-skapp/languages/en.yml","hash":"cbaf9014ca3cfaadde48e87b118a596b41897603","modified":1547618521033},{"_id":"themes/hexo-theme-skapp/languages/zh-cn.yml","hash":"38340969c1e11c3bcde7439dc88862d0eb6d0be0","modified":1547618521034},{"_id":"themes/hexo-theme-skapp/layout/_layout.swig","hash":"498edbaea871d4df4f904d3de6ac6ee10b3c975e","modified":1547618521034},{"_id":"themes/hexo-theme-skapp/layout/archive.swig","hash":"c8548b3f82cec7ef6d434b077e2605504c3c1005","modified":1547618521046},{"_id":"themes/hexo-theme-skapp/layout/category.swig","hash":"76011b6dfd36b0463f2fd889502d66a5ffe4dd47","modified":1547618521048},{"_id":"themes/hexo-theme-skapp/layout/error.swig","hash":"8d25b0d25ea70d86663f6f79c3506b7487bd98d5","modified":1547618521048},{"_id":"themes/hexo-theme-skapp/layout/post.swig","hash":"2a946e9a7503accf6b1621a7ff22ef1d94f953a9","modified":1547618521048},{"_id":"themes/hexo-theme-skapp/layout/index.swig","hash":"d902a5515ff3e8a7aa24a7f19b453daa30d0de99","modified":1547618521048},{"_id":"themes/hexo-theme-skapp/scripts/helper.js","hash":"cf740e4f99d1bbbdc43c6e810912d7a11dd7aedf","modified":1547618521050},{"_id":"themes/hexo-theme-skapp/scripts/renderer.js","hash":"43ce72af45211296e26d977b250f4c030ac00445","modified":1547618521050},{"_id":"themes/hexo-theme-skapp/layout/search.swig","hash":"c1e34b81bacb0c9565779b51ab1fe6559c1ef566","modified":1547618521048},{"_id":"themes/hexo-theme-skapp/layout/tag.swig","hash":"5d22856055faee9fa3c2f12516855b823c5630e8","modified":1547618521049},{"_id":"themes/hexo-theme-skapp/source/.DS_Store","hash":"9aab961db1ecd7d178308a281253dbb86f4f3a17","modified":1547629283419},{"_id":"themes/hexo-theme-skapp/layout/about.swig","hash":"83626cbda47aabc3f7ee4f008bad300eb1e37aba","modified":1547618521045},{"_id":"themes/hexo-theme-skapp/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1547618519025},{"_id":"themes/hexo-theme-skapp/.git/logs/HEAD","hash":"47448b7f1b115ca6575497b423f71daeb54c10ac","modified":1547618521015},{"_id":"themes/hexo-theme-skapp/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1547618519029},{"_id":"themes/hexo-theme-skapp/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1547618519027},{"_id":"themes/hexo-theme-skapp/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1547618519031},{"_id":"themes/hexo-theme-skapp/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1547618519030},{"_id":"themes/hexo-theme-skapp/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1547618519032},{"_id":"themes/hexo-theme-skapp/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1547618519028},{"_id":"themes/hexo-theme-skapp/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1547618519032},{"_id":"themes/hexo-theme-skapp/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1547618519027},{"_id":"themes/hexo-theme-skapp/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1547618519030},{"_id":"themes/hexo-theme-skapp/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1547618519030},{"_id":"themes/hexo-theme-skapp/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1547618519033},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.eot","hash":"87bd2f3e4f3b26d80fe97943b8deec98168affc2","modified":1547618521053},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.svg","hash":"88c42c2bd4256f13a0f885abe01a4cc65b2c5a45","modified":1547618521056},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.ttf","hash":"cbe6cffb573ef986e91c6705c9839a9c53edb1c8","modified":1547618521057},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.woff","hash":"37b11e65abc366b2b4a212a302b36f7152921625","modified":1547618521058},{"_id":"themes/hexo-theme-skapp/source/img/.DS_Store","hash":"a2b65835a2f80d6ad671efc99dbaa52192e95659","modified":1547629233435},{"_id":"themes/hexo-theme-skapp/source/img/attackOnNunu.png","hash":"70201c23ebbcfac268cfbb6059fc4ccafd7036ca","modified":1547629203141},{"_id":"themes/hexo-theme-skapp/source/img/attackOn.png","hash":"1fbabfe5a485dd7b4a3d3a930e7948efaa669897","modified":1547631108638},{"_id":"themes/hexo-theme-skapp/source/img/default_cover.png","hash":"a10a747bb6776ec0083d106ddec6cfaed87c589c","modified":1547630623977},{"_id":"themes/hexo-theme-skapp/source/img/quotes.png","hash":"4510107c2b0ea522ac2dc2048cb7471b468af5ff","modified":1547618521059},{"_id":"themes/hexo-theme-skapp/source/js/md5.min.js","hash":"9e95b3d2fad05cd68bbe721bd9fe79e524c47e71","modified":1547618521063},{"_id":"themes/hexo-theme-skapp/source/scss/_theme.scss","hash":"da926b75a47f325cc4dca9a205fbbfea96ee533d","modified":1548655582975},{"_id":"themes/hexo-theme-skapp/source/img/logo.png","hash":"dad12b3d3e8fcdb0bb74b1f57ecaf45d9b99cf95","modified":1547629217942},{"_id":"themes/hexo-theme-skapp/source/img/history.png","hash":"91a7ca49b27afa4e1d538174424f2ba9a05aa60a","modified":1548922647325},{"_id":"themes/hexo-theme-skapp/source/scss/base/_input.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547618521066},{"_id":"themes/hexo-theme-skapp/.git/objects/pack/pack-a377e7c78ef8411978d3f4134e4a7f6dffaa9dce.idx","hash":"6d2cf33be99fab9e768846450a67d5c9e93ef65c","modified":1547618520984},{"_id":"themes/hexo-theme-skapp/layout/_partial/category/main.swig","hash":"eea7cafb4a8f83d89fa10312bd65f172716b10cf","modified":1547618521038},{"_id":"themes/hexo-theme-skapp/layout/_partial/archive/main.swig","hash":"c33edd2ed0e25ec4a42a8ccb3de19d7b98b40b17","modified":1547618521036},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/comment.swig","hash":"29c7a31191a296e4f4c89bee873d37ba31ff3b67","modified":1547618521039},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/analytics.swig","hash":"2c1f77dabe54f04c4a9a2865fac65a8f32d6aa98","modified":1547618521038},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/error-header.swig","hash":"7468ed219619f89ed1331da6b8faf4e74af9bbd7","modified":1547618521039},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/back-top.swig","hash":"431866aacaab8805590b0e09de1c908f67a5f54d","modified":1547618521038},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/head.swig","hash":"03e43adefe260dd3a38661989264280f504beabe","modified":1547618521040},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/footer.swig","hash":"3cb633f8a738aaad3fa3c7d25c392e49983f67af","modified":1547618521039},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/loader.swig","hash":"e8b7c60f6186d6309d35e321bdbb486ef11d3e97","modified":1547618521040},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/header.swig","hash":"eda9abd3b086f9084ae1f21a1ebe55194a2419ab","modified":1547618521040},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/math.swig","hash":"07d9cc16965fbaa0972ba9c349db1500dfc1fb76","modified":1547618521041},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/sidebar.swig","hash":"756ba972946317406f1b1be97196cafd5d577666","modified":1547618521041},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/prefetch.swig","hash":"9a28af3878333cc843f073909c9180e1eab83ba9","modified":1547618521041},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/small-header.swig","hash":"5222d7d76ef0f89181a442b66008b8d23d5e8d74","modified":1547618521042},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/content.swig","hash":"c76b75355a9233ed05c8347aeacb3c09338e6cd6","modified":1547618521043},{"_id":"themes/hexo-theme-skapp/layout/_partial/error/main.swig","hash":"07bc5bc17756e428235fba0e820b77bb9705e627","modified":1547618521042},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/mini.swig","hash":"d9d1c45a62e7e12fd5048e2e2dbeba0cb84d0656","modified":1547618521044},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/main.swig","hash":"97b21ffbfebe31444acb02109e19a27677b3e98a","modified":1547618521043},{"_id":"themes/hexo-theme-skapp/layout/_partial/search/main.swig","hash":"88216dfef45a4c8b3d9697bccc30d1da3f9fbee4","modified":1547618521044},{"_id":"themes/hexo-theme-skapp/layout/_partial/index/main.swig","hash":"eea7cafb4a8f83d89fa10312bd65f172716b10cf","modified":1547618521043},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/post-statistical.swig","hash":"fc0a4d9ad929924b8beb39d8234b4b410df57e2d","modified":1547618521044},{"_id":"themes/hexo-theme-skapp/layout/_partial/tag/main.swig","hash":"eea7cafb4a8f83d89fa10312bd65f172716b10cf","modified":1547618521044},{"_id":"themes/hexo-theme-skapp/.git/refs/heads/master","hash":"cf9be7b7e8fec2362d424cccf6802c54e26a31a0","modified":1547618521014},{"_id":"themes/hexo-theme-skapp/source/img/componentsOfCDA.png","hash":"dd294be69fc566ad92f627a84cf8ab12ee64736d","modified":1548024512699},{"_id":"themes/hexo-theme-skapp/layout/_partial/about/main.swig","hash":"6d532834ecc639ff61ecba6109921193a6ebc8c9","modified":1547618521035},{"_id":"themes/hexo-theme-skapp/source/js/common/animation.js","hash":"4d360fdde4bf2a891e9b921dd10c34e137447e47","modified":1547618521059},{"_id":"themes/hexo-theme-skapp/source/js/common/pack.js","hash":"00b906b3d2ab92f8a169ad9e495a83733188d3f7","modified":1547618521060},{"_id":"themes/hexo-theme-skapp/source/js/layout/back-top.js","hash":"ada2d0ac7b4d7cf8e755572ffa2505ea84063917","modified":1547618521061},{"_id":"themes/hexo-theme-skapp/source/js/layout/loading.js","hash":"653bd858627880d87a2481660ea6f7b35780aa7b","modified":1547618521061},{"_id":"themes/hexo-theme-skapp/source/js/common/utils.js","hash":"9c0e7a01f07a332e69fdd3ae6a7d6b14c217e4b8","modified":1547618521060},{"_id":"themes/hexo-theme-skapp/source/js/layout/header.js","hash":"9e013fa56d999c669ea62d22220b624c56511b36","modified":1547618521061},{"_id":"themes/hexo-theme-skapp/source/js/layout/post.js","hash":"e80ab1ff01783b018fa7d2c63591603e53345e23","modified":1547618521062},{"_id":"themes/hexo-theme-skapp/source/js/libs/axios.min.js","hash":"466d49238fad59ff522440c609502e01ca000558","modified":1547618521062},{"_id":"themes/hexo-theme-skapp/source/js/libs/lunr.min.js","hash":"6af45288bd3cf5d3be1e595eb544fe84ea5900aa","modified":1547618521063},{"_id":"themes/hexo-theme-skapp/source/scss/base/_element.scss","hash":"2731e14c5447a5d0b620c85598b69dba56c05f03","modified":1547618521066},{"_id":"themes/hexo-theme-skapp/source/js/page/search.js","hash":"f6356a8e892cce3bd637db92592bf2ca3db4c766","modified":1547618521064},{"_id":"themes/hexo-theme-skapp/source/img/header-bg.jpg","hash":"5edbc7687d48e9a82034d237fdd5f1e86ecb2c73","modified":1547630339868},{"_id":"themes/hexo-theme-skapp/source/js/page/post.js","hash":"691de1e5863ba863b6cf015af6dd0de4ea51192c","modified":1547618521064},{"_id":"themes/hexo-theme-skapp/source/scss/base/_js-toggle.scss","hash":"0d1e23f1775a7696d98924606379273f79eba0d1","modified":1547618521067},{"_id":"themes/hexo-theme-skapp/source/scss/base/_mixins.scss","hash":"5da8755017aee88b229dd78255636960ce6f36fc","modified":1547618521067},{"_id":"themes/hexo-theme-skapp/source/scss/base/_font.scss","hash":"9886f69ef10beb3c7f2c3efd652a4b6d21dc069d","modified":1547618521066},{"_id":"themes/hexo-theme-skapp/source/scss/base/index.scss","hash":"c95bdb29c2b1e1a9ac67e626d1e4e2d38f509b63","modified":1547618521068},{"_id":"themes/hexo-theme-skapp/.git/logs/refs/heads/master","hash":"47448b7f1b115ca6575497b423f71daeb54c10ac","modified":1547618521015},{"_id":"themes/hexo-theme-skapp/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1547618521012},{"_id":"themes/hexo-theme-skapp/source/img/c-cda.png","hash":"f4771e30cbfae2e4ef595277238b60629af1add3","modified":1548915778892},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_back-top.scss","hash":"5fa2593f9d6875c8e0780d889e6bb6b3183aa8bb","modified":1547618521068},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_container.scss","hash":"5be8d3f29aed5b308fe207e6296e22fa4f24ddfb","modified":1547618521069},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_footer.scss","hash":"6be99d8932e0e8f60e5b8b5c657abeb8876ec572","modified":1547618521069},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_index.scss","hash":"419ca53eaffc9a7e20fbce92a9c6e276008b707a","modified":1547618521070},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_loading.scss","hash":"833010d3f05fa5b8620471d8f7361db679398f55","modified":1547618521070},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_header.scss","hash":"9878b45930090b7b4356564ce13d4a833729f8e2","modified":1547618521069},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_paginator.scss","hash":"1d4ceeb90de6f218dcc955eee5631c0b0bf298c9","modified":1547618521071},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_mini-post.scss","hash":"f2602bb792a65c5dca7ec40622766bacb0bb8dae","modified":1547618521070},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_sidebar.scss","hash":"f9db4b44731ca409db3a319b22ccf39ed06c44dc","modified":1547618521071},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/error.scss","hash":"00f58a708061bdca7be9f46ce31fb901dfabe704","modified":1547618521072},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/archive.scss","hash":"bd5980bd667ff1a099ea3dbaa7e0a307da8eedaf","modified":1547618521072},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/about.scss","hash":"bb45079d117def23f5f8e90c0afec36e8d157f3c","modified":1547618521071},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/index.scss","hash":"8fa3cfcecc08182de1005554e7f88c57bb8ac898","modified":1547618521072},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/search.scss","hash":"a30023f0023a4de288cf359157eca4867e8bcc5f","modified":1547618521073},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/category.scss","hash":"060931308b8ac3740ca3928afeb6246041cf9a84","modified":1547618521072},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/post.scss","hash":"ff2eb070c17b4c2029c110c53e2658e7fa1c222a","modified":1547618521072},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/tag.scss","hash":"060931308b8ac3740ca3928afeb6246041cf9a84","modified":1547618521073},{"_id":"themes/hexo-theme-skapp/.git/logs/refs/remotes/origin/HEAD","hash":"47448b7f1b115ca6575497b423f71daeb54c10ac","modified":1547618521012},{"_id":"themes/hexo-theme-skapp/source/img/c-cda2.png","hash":"b9dc4cada91a2f2ad8c0088f54877622630b4936","modified":1548916110036},{"_id":"themes/hexo-theme-skapp/.git/objects/pack/pack-a377e7c78ef8411978d3f4134e4a7f6dffaa9dce.pack","hash":"9456fa857e7327fe22cf1c83299dcb9aa034e89b","modified":1547618520983},{"_id":"public/fonts/iconfont.svg","hash":"3cac0ba4e321c3927d7f78b93e873c04a97f72f8","modified":1549212075206},{"_id":"public/img/attackOnNunu.png","hash":"bf2f119f1f1cfa20c76d9d030af237b04783f22f","modified":1549212075206},{"_id":"public/img/attackOn.png","hash":"ddc3c0ffc3e73474898769126faa2ded80404675","modified":1549212075206},{"_id":"public/img/quotes.png","hash":"d971044cf4d14bc81e63c5a9f9528832fab378cf","modified":1549212075207},{"_id":"public/img/logo.png","hash":"7b0144f1614f5365683b6a93f64f8c57269e12db","modified":1549212075207},{"_id":"public/img/history.png","hash":"55d59fa57cb5cc3b06a1b57a4db5f9d23ee714d8","modified":1549212075207},{"_id":"public/img/componentsOfCDA.png","hash":"f495b07830a46e5c464c90f6b0059ea5b2442b9a","modified":1549212075207},{"_id":"public/img/c-cda.png","hash":"c94241395ddcebab80525c63752f1ec3f9edd539","modified":1549212075207},{"_id":"public/img/c-cda2.png","hash":"1c822f9abf652457b531948328d6842d174194d3","modified":1549212075207},{"_id":"public/atom.xml","hash":"012f523fde0c4ca813fb4563e0f52d854ad409f8","modified":1549287496189},{"_id":"public/sitemap.xml","hash":"4ace627cb17b6f3ebd4852da3f71d1843925e4d4","modified":1549287496189},{"_id":"public/assets/lunr/192019.json","hash":"6420771958b8d8b0d27a3c561534e3b6a55ae346","modified":1549212075207},{"_id":"public/assets/lunr/all.json","hash":"6420771958b8d8b0d27a3c561534e3b6a55ae346","modified":1549212075207},{"_id":"public/404.html","hash":"20b29c3822f13a0b992516858dbce35196fcae2b","modified":1549212075208},{"_id":"public/about/index.html","hash":"12595857666f883d9142dc2ceb741254e7cc5f17","modified":1549212075208},{"_id":"public/search/index.html","hash":"0086e33f6ea1b902c2a2e41074e42924b55768f1","modified":1549212075208},{"_id":"public/2019/02/02/spring-keywords/index.html","hash":"e5a01bf2d8a569c66b7bff93a27f4168fabaaedc","modified":1549287496190},{"_id":"public/2019/01/31/spring-module/index.html","hash":"b22608d2c82390b65c9e6a834aefb26551ef2a13","modified":1549212075208},{"_id":"public/2019/01/28/cda-tutorial-1/index.html","hash":"3d1a3022dee0ccb2a8abb72e0afdb23ae7f8d172","modified":1549212075208},{"_id":"public/2019/01/23/blog-issues/index.html","hash":"4b319b739ea3e4b3147553225466cf1e5506ed3c","modified":1549212075208},{"_id":"public/2019/01/23/markdown-plugin/index.html","hash":"10dd0f1f790e752204aaf22aac47bfbb1976a06c","modified":1549212075208},{"_id":"public/2019/01/22/spring/index.html","hash":"3e997f0fe5b2da05074a29a6f9d931645b965a35","modified":1549212075208},{"_id":"public/2019/01/19/cda-tutorial/index.html","hash":"067a594469d685f194cdd919e7ce7ab9f8ba9cdf","modified":1549212075208},{"_id":"public/2019/01/17/markdown-basic/index.html","hash":"ab7c62045ce684951270db525d6b7516bec71f6c","modified":1549212075209},{"_id":"public/2019/01/16/hello-world/index.html","hash":"19c1cf225e536e386a0d71b0cc6a54ac174cdd64","modified":1549212075209},{"_id":"public/archives/index.html","hash":"525deed40a0906cac04f32ce65311c6b69c85e0a","modified":1549212075209},{"_id":"public/archives/2019/index.html","hash":"7b24afe5a6725bcdb851d0197491e388b8b6e906","modified":1549212075209},{"_id":"public/archives/2019/01/index.html","hash":"5868fb5833e5c398e963ecedd97fe37fa6f80d25","modified":1549212075209},{"_id":"public/archives/2019/02/index.html","hash":"a61ad55820ffe3e3478951d191694fe46e69eaee","modified":1549212075209},{"_id":"public/index.html","hash":"9d40a123ebf7381fa14c8061b4baaf6941222332","modified":1549212075209},{"_id":"public/categories/BLOG/index.html","hash":"028882677efa9980e35737abadb2448cca18022f","modified":1549212075209},{"_id":"public/categories/IHIS/index.html","hash":"43964551c7ff2b65161aa28b662935f310ae7c9d","modified":1549212075209},{"_id":"public/categories/ETC/index.html","hash":"7f251e2790db4eceddd8b2db165089157a28bb09","modified":1549212075209},{"_id":"public/categories/WEB/index.html","hash":"86a3682f6b4cbf92353aae81fbd9f0d963a2227b","modified":1549212075209},{"_id":"public/categories/BLOG/MARKDOWN/index.html","hash":"c7ef3a64de723bace43e051548d7896957d1dec6","modified":1549212075209},{"_id":"public/categories/BLOG/HEXO/index.html","hash":"0cb01b6974d50c4f72e19d4087b5932334d28f99","modified":1549212075210},{"_id":"public/categories/IHIS/HL7/index.html","hash":"ba312b0f566d2b74deb99cf36c641bccc3edcfd4","modified":1549212075210},{"_id":"public/categories/WEB/SPRING/index.html","hash":"24f4f62bba57d489222b15c32327aec9a786e96c","modified":1549212075210},{"_id":"public/tags/markup/index.html","hash":"e66f7a14ce07d2c5beea263acc01fd3bf1a4a0e4","modified":1549212075210},{"_id":"public/tags/markdown/index.html","hash":"15882d107ace5a25c5ced97d0faedad2ca3cf09c","modified":1549212075210},{"_id":"public/tags/HL7/index.html","hash":"513e8c82cf86e9b767bfe36cda019adf663d52d1","modified":1549212075210},{"_id":"public/tags/cda/index.html","hash":"1e6b129f10eb06c448c511299d377d8510b70fe9","modified":1549212075210},{"_id":"public/tags/잡다한/index.html","hash":"2a43c4efb975305cb48a85987d0c03f6e1b49a15","modified":1549212075210},{"_id":"public/tags/spring/index.html","hash":"f836ae5842ac68a3f8470f405db95e3f85727ae2","modified":1549212075210},{"_id":"public/tags/스프링/index.html","hash":"e045e8fd9dc4f67dcac30f3be3e51dfe144dca5b","modified":1549212075210},{"_id":"public/tags/SPRING/index.html","hash":"786b94f3ce14b43690e11f50a1b33f09897ca835","modified":1549212075210},{"_id":"public/tags/hexo/index.html","hash":"fb2ed7c909eaad5663e065912dd8b23edf922ea3","modified":1549212075210},{"_id":"public/tags/plugins/index.html","hash":"0bec1470f5db0ea418e8b299892bb70a205fe34e","modified":1549212075210},{"_id":"public/tags/헥소/index.html","hash":"a91a8cdf46a8143158f516806d623a71e9ea99b3","modified":1549212075211},{"_id":"public/tags/플러그인/index.html","hash":"7fd1558bd21101c368c7de206e15447ded5d67a2","modified":1549212075211},{"_id":"public/tags/CDA/index.html","hash":"fee2e6c4f4c8ce3646005dd380b42074e838e754","modified":1549212075211},{"_id":"public/tags/C-CDA/index.html","hash":"73d366fecc13a2eb8b5a0fe04cc7526217e37d4d","modified":1549212075211},{"_id":"public/tags/FRAMEWORK/index.html","hash":"c0b5a104de10b0cdce72ecb6c3b04d6ade09edfd","modified":1549212075211},{"_id":"public/tags/MODULES/index.html","hash":"2a6d07ad6fd7a2222ec7352fbbf890a86de380b5","modified":1549212075211},{"_id":"public/img/apple-touch-icon-57x57.png","hash":"655c476e2a0e2beb7e49e508d9a960233d47b1fc","modified":1549212075211},{"_id":"public/img/apple-touch-icon-60x60.png","hash":"6ad578fb52244062c798e9e974d6eb58b5b447cd","modified":1549212075211},{"_id":"public/img/apple-touch-icon-72x72.png","hash":"5458d18dd3eda03376bce987574d32b2f2f1c6dd","modified":1549212075211},{"_id":"public/img/apple-touch-icon-114x114.png","hash":"e582929672ea9cc80bd0fd9d4524202213c8cf6f","modified":1549212075211},{"_id":"public/img/apple-touch-icon-76x76.png","hash":"8fc4b2b64cdd64e1e26132984534f85a94530073","modified":1549212075211},{"_id":"public/img/apple-touch-icon-144x144.png","hash":"6c036083ca9fbf40c269f1ed8596ad08530b99ec","modified":1549212075212},{"_id":"public/img/apple-touch-icon-120x120.png","hash":"317f05bddb4b5fef44db4a58bb72e678e227e09c","modified":1549212075212},{"_id":"public/img/apple-touch-icon-152x152.png","hash":"7e17663da70b2444809ac06aea0379dc6cc52e9c","modified":1549212075212},{"_id":"public/img/apple-touch-icon-167x167.png","hash":"8dc7d3819c56e24cf7088d477154d3286948cafc","modified":1549212075212},{"_id":"public/img/apple-touch-icon-180x180.png","hash":"1385c6fd904db51b92f5ddbdd93e5eee4b6b3b7f","modified":1549212075212},{"_id":"public/img/apple-touch-icon.png","hash":"1385c6fd904db51b92f5ddbdd93e5eee4b6b3b7f","modified":1549212075212},{"_id":"public/img/apple-touch-icon-precomposed.png","hash":"1385c6fd904db51b92f5ddbdd93e5eee4b6b3b7f","modified":1549212075212},{"_id":"public/img/favicon-16x16.png","hash":"b47ed2baad16cd82f8a03d1b4ef1308e7ad7223e","modified":1549212075212},{"_id":"public/img/favicon-32x32.png","hash":"866c8e42277046a6d82574bafe61e46817f15996","modified":1549212075213},{"_id":"public/img/favicon.ico","hash":"880fd3373d8892a4eb5da38b03bc365c07c89a93","modified":1549212075213},{"_id":"public/img/android-chrome-36x36.png","hash":"8df4e9d49fa831d68b77e9c1e86ab65b1bebcba5","modified":1549212075213},{"_id":"public/img/android-chrome-48x48.png","hash":"247c663965bdacbfb8c103dccedbcb6bdcb18556","modified":1549212075213},{"_id":"public/img/android-chrome-72x72.png","hash":"5c933c5ab5d76d182676469bf42d895ade1a6f2f","modified":1549212075213},{"_id":"public/img/android-chrome-96x96.png","hash":"7b0144f1614f5365683b6a93f64f8c57269e12db","modified":1549212075213},{"_id":"public/img/android-chrome-144x144.png","hash":"1bac522fd8937085a2fecb482985d9afa4fdcb9b","modified":1549212075213},{"_id":"public/img/android-chrome-192x192.png","hash":"002c2bf6845c7f3f8ab04e5eb0621624e3dffafd","modified":1549212075213},{"_id":"public/img/android-chrome-256x256.png","hash":"26364ad6e43a589d61ea4c8efc1e27e1d9e6ae38","modified":1549212075213},{"_id":"public/img/android-chrome-384x384.png","hash":"c7d19e503842350d4d30f7708bb96ca84eafd24a","modified":1549212075213},{"_id":"public/img/android-chrome-512x512.png","hash":"8ee3d6a6569757c350bd89440e5bf98a02240c34","modified":1549212075214},{"_id":"public/img/mstile-144x144.png","hash":"1bac522fd8937085a2fecb482985d9afa4fdcb9b","modified":1549212075214},{"_id":"public/img/mstile-70x70.png","hash":"71f01bf8e290c0b829dde2e7e0d8f888af755f55","modified":1549212075214},{"_id":"public/img/mstile-310x150.png","hash":"c517424efb4f1fba32fb2fcaab1bccdb22bd22f7","modified":1549212075214},{"_id":"public/img/mstile-150x150.png","hash":"3c748539a98d940554e7784bfcc0091a7d26e1ad","modified":1549212075214},{"_id":"public/img/mstile-310x310.png","hash":"57a5e960905f3fae13dcae152dd67d97232bb109","modified":1549212075214},{"_id":"public/js/common.js","hash":"a83403f50595296f05ebef8fc950c3cac2fb14ce","modified":1549212075214},{"_id":"public/js/search.js","hash":"1d56c7e32ef49409c4ffb23eb4a55346befd8517","modified":1549212075215},{"_id":"public/2019/02/04/spring-pojo/index.html","hash":"ebd098d50c00a92a5685c165ea98a07f2461fce9","modified":1549287496190},{"_id":"public/tags/POJO/index.html","hash":"138e3d5f685c8964dfa52b90bda7ff102d389bf1","modified":1549212075218},{"_id":"public/fonts/iconfont.eot","hash":"87bd2f3e4f3b26d80fe97943b8deec98168affc2","modified":1549212075228},{"_id":"public/fonts/iconfont.ttf","hash":"cbe6cffb573ef986e91c6705c9839a9c53edb1c8","modified":1549212075228},{"_id":"public/fonts/iconfont.woff","hash":"37b11e65abc366b2b4a212a302b36f7152921625","modified":1549212075228},{"_id":"public/img/default_cover.png","hash":"a10a747bb6776ec0083d106ddec6cfaed87c589c","modified":1549212075229},{"_id":"public/img/header-bg.jpg","hash":"5edbc7687d48e9a82034d237fdd5f1e86ecb2c73","modified":1549212076140},{"_id":"public/scss/base/index.css","hash":"d247bdbb8a51eeea7b3532e45dd58cf93ec7fbd7","modified":1549212076224},{"_id":"public/scss/views/page/error.css","hash":"c7bf6533a85a07f6d2b7142f7575e6f7d52b296e","modified":1549212076224},{"_id":"public/scss/views/page/archive.css","hash":"35931b42f3affc254255063ab957e70b384dde62","modified":1549212076224},{"_id":"public/scss/views/page/about.css","hash":"cebeda54ec01cd38b3d1f6c617fe482539f79646","modified":1549212076225},{"_id":"public/scss/views/page/index.css","hash":"b3e342ed27d70afb30d10922153ca564c78d2bf7","modified":1549212076225},{"_id":"public/scss/views/page/search.css","hash":"2d473bc691256e25e76373582ce551a7ba8093bf","modified":1549212076225},{"_id":"public/scss/views/page/category.css","hash":"b3e342ed27d70afb30d10922153ca564c78d2bf7","modified":1549212076225},{"_id":"public/scss/views/page/post.css","hash":"4504c8d0e569b023e48fb1ec97f081c9645fc1ac","modified":1549212076225},{"_id":"public/scss/views/page/tag.css","hash":"b3e342ed27d70afb30d10922153ca564c78d2bf7","modified":1549212076225},{"_id":"public/js/md5.min.js","hash":"794c3fc5f481907415dc196891c1814c36170886","modified":1549212076550},{"_id":"public/js/common/pack.js","hash":"7e59daf725f6b324d45fcdc04bb32ae73e553a65","modified":1549212076550},{"_id":"public/js/layout/back-top.js","hash":"9228f4a4dd49486090b9c5943b1f28a75aa74c68","modified":1549212076550},{"_id":"public/js/common/animation.js","hash":"2d46a1275b21e9a39595aa75af5b61e341da612e","modified":1549212076551},{"_id":"public/js/layout/loading.js","hash":"4678f71ab17f627c14df93d64876ec6256a62890","modified":1549212076551},{"_id":"public/js/common/utils.js","hash":"39162db90c091127d796a3b7df7c7754ec49233b","modified":1549212076551},{"_id":"public/js/layout/post.js","hash":"d283b30fec045c8f597122ef1188f192061663d6","modified":1549212076551},{"_id":"public/js/layout/header.js","hash":"15c354ac06c2886f0ef80c1fa0a037d7086e8278","modified":1549212076551},{"_id":"public/js/page/search.js","hash":"408f84470f774c90db99408db22571b53474fad6","modified":1549212076551},{"_id":"public/js/page/post.js","hash":"d7f9aab4ace1a8090872bf15c71ae7e37218d360","modified":1549212076551},{"_id":"public/js/libs/axios.min.js","hash":"dc10b0025b8b5abcdd67531c6beb9f51d049eef4","modified":1549212076551},{"_id":"public/js/libs/lunr.min.js","hash":"0e231d538c0127b6d78a48b3694ffa23be4f104f","modified":1549212076551}],"Category":[{"name":"BLOG","_id":"cjrp4uzz90005nf46rerf17q9"},{"name":"IHIS","_id":"cjrp4uzzh000anf46pnea5cu0"},{"name":"ETC","_id":"cjrp4uzzn000enf46isv7a7uc"},{"name":"WEB","_id":"cjrp4uzzt000knf46fy3x477g"},{"name":"MARKDOWN","parent":"cjrp4uzz90005nf46rerf17q9","_id":"cjrp4uzzx000onf46hh9ov0bq"},{"name":"HEXO","parent":"cjrp4uzz90005nf46rerf17q9","_id":"cjrp4v006000vnf46nyx5e3v2"},{"name":"HL7","parent":"cjrp4uzzh000anf46pnea5cu0","_id":"cjrp4v007000znf46ylatz6zq"},{"name":"SPRING","parent":"cjrp4uzzt000knf46fy3x477g","_id":"cjrp4v00m001cnf46azdspj2o"}],"Data":[{"_id":"contact","data":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}],"Page":[{"title":"404 Page Not Found","date":"2019-01-16T07:05:30.000Z","type":"error","layout":"error","_content":"","source":"404.md","raw":"---\ntitle: 404 Page Not Found\ndate: 2019-01-16 16:05:30\ntype: error\nlayout: error\n---\n","updated":"2019-01-16T07:36:14.038Z","path":"404.html","comments":1,"_id":"cjrp4uzxa0000nf46tslhkpcc","content":"","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":""},{"title":"about","date":"2019-01-16T07:02:33.000Z","type":"about","layout":"about","_content":"\n\n##소개\n\n여기를 어떻게 꾸며나갈지 조금 더 고민해보고 작성...\n\n이미지, 연락처, 음....ㅠ\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-01-16 16:02:33\ntype: about\nlayout: about\n---\n\n\n##소개\n\n여기를 어떻게 꾸며나갈지 조금 더 고민해보고 작성...\n\n이미지, 연락처, 음....ㅠ\n","updated":"2019-01-19T10:04:22.259Z","path":"about/index.html","comments":1,"_id":"cjrp4uzyz0002nf46430ou361","content":"<p>##소개</p>\n<p>여기를 어떻게 꾸며나갈지 조금 더 고민해보고 작성…</p>\n<p>이미지, 연락처, 음…ㅠ</p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<p>##소개</p>\n<p>여기를 어떻게 꾸며나갈지 조금 더 고민해보고 작성…</p>\n<p>이미지, 연락처, 음…ㅠ</p>\n"},{"title":"search","date":"2019-01-16T07:02:55.000Z","type":"search","layout":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2019-01-16 16:02:55\ntype: search\nlayout: search\n---\n","updated":"2019-01-16T07:11:46.504Z","path":"search/index.html","comments":1,"_id":"cjrp4uzz50004nf46no9wylkx","content":"","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":""}],"Post":[{"title":"Markup? Markdown!","author":{"nick":"TAEJIN","link":"https://www.github.com/taejin0323"},"date":"2019-01-17T07:31:42.000Z","subtitle":"첫 포스팅","cover":"https://www.mcdwayne.com/wp-content/uploads/2018/05/I-love-markdown-syntax-language.png","_content":"\nGithub Page를 시작 하면서 처음으로 Markdown 언어를 사용하게 되었습니다.\n처음 웹 프로그래밍을 배울 때 HTML부터 배우면서 Hyper Text Markup Language(HTML)의 정확한 의미와 뜻은 알지 못한체 그저 태그로 구성된 문서(!)라는 정도로만 이해하고 넘겼습니다.\n\n뜬금없이 HTML과 Markup에 대해 언급해서 의아하실 수 있지만, [Markdown](https://en.wikipedia.org/wiki/Markdown)에 대한 위키피디아 정의를 보면 'Markdown is a lightweight markup language'라고 언급되어 있습니다.\n여기서 HTML에 대한 정의를 깊게 이야기하진 않겠지만, 적어도 **Markup**은 무엇인지 알고 **Markdown**에 대해서 알아보도록 하겠습니다.\n\n## Markup 이란?\n'Markup'이란 단어는 비즈니스나 법률 등에도 다른 의미로 사용되는데, 프로그래밍에서는 쉽게 말해 **어딘가에 표시를 해두는 것**을 뜻합니다.\n이해를 돕기 위해 예를 들어보겠습니다.\n\n예 1) 표시가 없을 때\n- HTML을 가르쳐드립니다 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다 19/01/17 세미나실\n\n\n예 2) 표시가 있을 때\n- 제목 : HTML을 가르쳐드립니다\n- 내용 : 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다\n- 날짜 : 19/01/17\n- 장소 : 세미나실\n\n\n표시가 있음으로 단락(HTML에서는 Tag로 표현합니다)이 구분되고 직관적으로 이해하기도 쉬워졌습니다. 즉, **Markup 언어를 사용하면 문서(text)를 구조적으로 표현할 수 있습니다.**\n\n## Markdown 이란?\n[마크다운](https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4) 언어는 **사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여 쓸 수 있으면서 구조적으로 유효한 HTML로 선택적 변환이 가능하게 하는 것을 목표**로 2004년 [존 그루버](https://en.wikipedia.org/wiki/John_Gruber)가 [에런 스위츠](https://ko.wikipedia.org/wiki/%EC%97%90%EB%9F%B0_%EC%8A%A4%EC%9B%8C%EC%B8%A0)와 협업하여 만든 언어입니다.\n특수기호와 문자를 이용하는 비교적 매우 간단한 문법 구조로 빠르게 컨텐츠를 작성할 수 있고 보다 직관적으로 이해할 수 있습니다.\n\n이해를 돕기 위해 일상에서 자주 사용되는 예를 들어보겠습니다.\n- SNS의 태그 기능 ex) 페이스북, 인스타그램\n- 깃허브 README.md 등...\n\n\n맨 처음 언급한 위키피디아 내용처럼 마크다운 언어는 마크업 언어를 **좀 더 직관적이고 간결하게 문서를 작성하게 해주는 언어**입니다.\n\n## 마크다운의 장-단점\n### 장점\n\t1. 간결하다.\n\t2. 별도의 도구없이 작성가능하다.\n\t3. 다양한 형태로 변환이 가능하다.\n\t3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.\n\t4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.\n\t5. 지원하는 프로그램과 플랫폼이 다양하다.\n### 단점\n\t1. 표준이 없다.\n\t2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.\n\t3. 모든 HTML 마크업을 대신하지 못한다.\n\n\n\n\n\n참조 :\n----------\n- https://brunch.co.kr/@coveryou/14\n- https://cordelia273.space/15\n\n<br><br><br>\n","source":"_posts/20190117-markdown-basic.md","raw":"---\ntitle: Markup? Markdown!\nauthor:\n  nick: TAEJIN\n  link: https://www.github.com/taejin0323\ncategories:\n  - BLOG\n  - MARKDOWN\ntags:\n  - markup\n  - markdown\ndate: 2019-01-17 16:31:42\nsubtitle: 첫 포스팅\ncover: https://www.mcdwayne.com/wp-content/uploads/2018/05/I-love-markdown-syntax-language.png\n---\n\nGithub Page를 시작 하면서 처음으로 Markdown 언어를 사용하게 되었습니다.\n처음 웹 프로그래밍을 배울 때 HTML부터 배우면서 Hyper Text Markup Language(HTML)의 정확한 의미와 뜻은 알지 못한체 그저 태그로 구성된 문서(!)라는 정도로만 이해하고 넘겼습니다.\n\n뜬금없이 HTML과 Markup에 대해 언급해서 의아하실 수 있지만, [Markdown](https://en.wikipedia.org/wiki/Markdown)에 대한 위키피디아 정의를 보면 'Markdown is a lightweight markup language'라고 언급되어 있습니다.\n여기서 HTML에 대한 정의를 깊게 이야기하진 않겠지만, 적어도 **Markup**은 무엇인지 알고 **Markdown**에 대해서 알아보도록 하겠습니다.\n\n## Markup 이란?\n'Markup'이란 단어는 비즈니스나 법률 등에도 다른 의미로 사용되는데, 프로그래밍에서는 쉽게 말해 **어딘가에 표시를 해두는 것**을 뜻합니다.\n이해를 돕기 위해 예를 들어보겠습니다.\n\n예 1) 표시가 없을 때\n- HTML을 가르쳐드립니다 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다 19/01/17 세미나실\n\n\n예 2) 표시가 있을 때\n- 제목 : HTML을 가르쳐드립니다\n- 내용 : 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다\n- 날짜 : 19/01/17\n- 장소 : 세미나실\n\n\n표시가 있음으로 단락(HTML에서는 Tag로 표현합니다)이 구분되고 직관적으로 이해하기도 쉬워졌습니다. 즉, **Markup 언어를 사용하면 문서(text)를 구조적으로 표현할 수 있습니다.**\n\n## Markdown 이란?\n[마크다운](https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4) 언어는 **사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여 쓸 수 있으면서 구조적으로 유효한 HTML로 선택적 변환이 가능하게 하는 것을 목표**로 2004년 [존 그루버](https://en.wikipedia.org/wiki/John_Gruber)가 [에런 스위츠](https://ko.wikipedia.org/wiki/%EC%97%90%EB%9F%B0_%EC%8A%A4%EC%9B%8C%EC%B8%A0)와 협업하여 만든 언어입니다.\n특수기호와 문자를 이용하는 비교적 매우 간단한 문법 구조로 빠르게 컨텐츠를 작성할 수 있고 보다 직관적으로 이해할 수 있습니다.\n\n이해를 돕기 위해 일상에서 자주 사용되는 예를 들어보겠습니다.\n- SNS의 태그 기능 ex) 페이스북, 인스타그램\n- 깃허브 README.md 등...\n\n\n맨 처음 언급한 위키피디아 내용처럼 마크다운 언어는 마크업 언어를 **좀 더 직관적이고 간결하게 문서를 작성하게 해주는 언어**입니다.\n\n## 마크다운의 장-단점\n### 장점\n\t1. 간결하다.\n\t2. 별도의 도구없이 작성가능하다.\n\t3. 다양한 형태로 변환이 가능하다.\n\t3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.\n\t4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.\n\t5. 지원하는 프로그램과 플랫폼이 다양하다.\n### 단점\n\t1. 표준이 없다.\n\t2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.\n\t3. 모든 HTML 마크업을 대신하지 못한다.\n\n\n\n\n\n참조 :\n----------\n- https://brunch.co.kr/@coveryou/14\n- https://cordelia273.space/15\n\n<br><br><br>\n","slug":"markdown-basic","published":1,"updated":"2019-01-23T07:30:38.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzyv0001nf46brxqheq9","content":"<p>Github Page를 시작 하면서 처음으로 Markdown 언어를 사용하게 되었습니다.<br>\n처음 웹 프로그래밍을 배울 때 HTML부터 배우면서 Hyper Text Markup Language(HTML)의 정확한 의미와 뜻은 알지 못한체 그저 태그로 구성된 문서(!)라는 정도로만 이해하고 넘겼습니다.</p>\n<p>뜬금없이 HTML과 Markup에 대해 언급해서 의아하실 수 있지만, <a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown</a>에 대한 위키피디아 정의를 보면 'Markdown is a lightweight markup language’라고 언급되어 있습니다.<br>\n여기서 HTML에 대한 정의를 깊게 이야기하진 않겠지만, 적어도 <strong>Markup</strong>은 무엇인지 알고 <strong>Markdown</strong>에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"markup-이란\"><a class=\"markdownIt-Anchor\" href=\"#markup-이란\"></a> Markup 이란?</h2>\n<p>'Markup’이란 단어는 비즈니스나 법률 등에도 다른 의미로 사용되는데, 프로그래밍에서는 쉽게 말해 <strong>어딘가에 표시를 해두는 것</strong>을 뜻합니다.<br>\n이해를 돕기 위해 예를 들어보겠습니다.</p>\n<p>예 1) 표시가 없을 때</p>\n<ul>\n<li>HTML을 가르쳐드립니다 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다 19/01/17 세미나실</li>\n</ul>\n<p>예 2) 표시가 있을 때</p>\n<ul>\n<li>제목 : HTML을 가르쳐드립니다</li>\n<li>내용 : 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다</li>\n<li>날짜 : 19/01/17</li>\n<li>장소 : 세미나실</li>\n</ul>\n<p>표시가 있음으로 단락(HTML에서는 Tag로 표현합니다)이 구분되고 직관적으로 이해하기도 쉬워졌습니다. 즉, <strong>Markup 언어를 사용하면 문서(text)를 구조적으로 표현할 수 있습니다.</strong></p>\n<h2 id=\"markdown-이란\"><a class=\"markdownIt-Anchor\" href=\"#markdown-이란\"></a> Markdown 이란?</h2>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4\" target=\"_blank\" rel=\"noopener\">마크다운</a> 언어는 <strong>사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여 쓸 수 있으면서 구조적으로 유효한 HTML로 선택적 변환이 가능하게 하는 것을 목표</strong>로 2004년 <a href=\"https://en.wikipedia.org/wiki/John_Gruber\" target=\"_blank\" rel=\"noopener\">존 그루버</a>가 <a href=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9F%B0_%EC%8A%A4%EC%9B%8C%EC%B8%A0\" target=\"_blank\" rel=\"noopener\">에런 스위츠</a>와 협업하여 만든 언어입니다.<br>\n특수기호와 문자를 이용하는 비교적 매우 간단한 문법 구조로 빠르게 컨텐츠를 작성할 수 있고 보다 직관적으로 이해할 수 있습니다.</p>\n<p>이해를 돕기 위해 일상에서 자주 사용되는 예를 들어보겠습니다.</p>\n<ul>\n<li>SNS의 태그 기능 ex) 페이스북, 인스타그램</li>\n<li>깃허브 <a href=\"http://README.md\" target=\"_blank\" rel=\"noopener\">README.md</a> 등…</li>\n</ul>\n<p>맨 처음 언급한 위키피디아 내용처럼 마크다운 언어는 마크업 언어를 <strong>좀 더 직관적이고 간결하게 문서를 작성하게 해주는 언어</strong>입니다.</p>\n<h2 id=\"마크다운의-장-단점\"><a class=\"markdownIt-Anchor\" href=\"#마크다운의-장-단점\"></a> 마크다운의 장-단점</h2>\n<h3 id=\"장점\"><a class=\"markdownIt-Anchor\" href=\"#장점\"></a> 장점</h3>\n<pre><code>1. 간결하다.\n2. 별도의 도구없이 작성가능하다.\n3. 다양한 형태로 변환이 가능하다.\n3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.\n4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.\n5. 지원하는 프로그램과 플랫폼이 다양하다.\n</code></pre>\n<h3 id=\"단점\"><a class=\"markdownIt-Anchor\" href=\"#단점\"></a> 단점</h3>\n<pre><code>1. 표준이 없다.\n2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.\n3. 모든 HTML 마크업을 대신하지 못한다.\n</code></pre>\n<h2 id=\"참조\"><a class=\"markdownIt-Anchor\" href=\"#참조\"></a> 참조 :</h2>\n<ul>\n<li><a href=\"https://brunch.co.kr/@coveryou/14\" target=\"_blank\" rel=\"noopener\">https://brunch.co.kr/@coveryou/14</a></li>\n<li><a href=\"https://cordelia273.space/15\" target=\"_blank\" rel=\"noopener\">https://cordelia273.space/15</a></li>\n</ul>\n<p><br><br><br></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<p>Github Page를 시작 하면서 처음으로 Markdown 언어를 사용하게 되었습니다.<br>\n처음 웹 프로그래밍을 배울 때 HTML부터 배우면서 Hyper Text Markup Language(HTML)의 정확한 의미와 뜻은 알지 못한체 그저 태그로 구성된 문서(!)라는 정도로만 이해하고 넘겼습니다.</p>\n<p>뜬금없이 HTML과 Markup에 대해 언급해서 의아하실 수 있지만, <a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown</a>에 대한 위키피디아 정의를 보면 'Markdown is a lightweight markup language’라고 언급되어 있습니다.<br>\n여기서 HTML에 대한 정의를 깊게 이야기하진 않겠지만, 적어도 <strong>Markup</strong>은 무엇인지 알고 <strong>Markdown</strong>에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"markup-이란\"><a class=\"markdownIt-Anchor\" href=\"#markup-이란\"></a> Markup 이란?</h2>\n<p>'Markup’이란 단어는 비즈니스나 법률 등에도 다른 의미로 사용되는데, 프로그래밍에서는 쉽게 말해 <strong>어딘가에 표시를 해두는 것</strong>을 뜻합니다.<br>\n이해를 돕기 위해 예를 들어보겠습니다.</p>\n<p>예 1) 표시가 없을 때</p>\n<ul>\n<li>HTML을 가르쳐드립니다 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다 19/01/17 세미나실</li>\n</ul>\n<p>예 2) 표시가 있을 때</p>\n<ul>\n<li>제목 : HTML을 가르쳐드립니다</li>\n<li>내용 : 핵심 태그만 알면 당신도 HTML의 고수가 될 수 있습니다</li>\n<li>날짜 : 19/01/17</li>\n<li>장소 : 세미나실</li>\n</ul>\n<p>표시가 있음으로 단락(HTML에서는 Tag로 표현합니다)이 구분되고 직관적으로 이해하기도 쉬워졌습니다. 즉, <strong>Markup 언어를 사용하면 문서(text)를 구조적으로 표현할 수 있습니다.</strong></p>\n<h2 id=\"markdown-이란\"><a class=\"markdownIt-Anchor\" href=\"#markdown-이란\"></a> Markdown 이란?</h2>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4\" target=\"_blank\" rel=\"noopener\">마크다운</a> 언어는 <strong>사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여 쓸 수 있으면서 구조적으로 유효한 HTML로 선택적 변환이 가능하게 하는 것을 목표</strong>로 2004년 <a href=\"https://en.wikipedia.org/wiki/John_Gruber\" target=\"_blank\" rel=\"noopener\">존 그루버</a>가 <a href=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9F%B0_%EC%8A%A4%EC%9B%8C%EC%B8%A0\" target=\"_blank\" rel=\"noopener\">에런 스위츠</a>와 협업하여 만든 언어입니다.<br>\n특수기호와 문자를 이용하는 비교적 매우 간단한 문법 구조로 빠르게 컨텐츠를 작성할 수 있고 보다 직관적으로 이해할 수 있습니다.</p>\n<p>이해를 돕기 위해 일상에서 자주 사용되는 예를 들어보겠습니다.</p>\n<ul>\n<li>SNS의 태그 기능 ex) 페이스북, 인스타그램</li>\n<li>깃허브 <a href=\"http://README.md\" target=\"_blank\" rel=\"noopener\">README.md</a> 등…</li>\n</ul>\n<p>맨 처음 언급한 위키피디아 내용처럼 마크다운 언어는 마크업 언어를 <strong>좀 더 직관적이고 간결하게 문서를 작성하게 해주는 언어</strong>입니다.</p>\n<h2 id=\"마크다운의-장-단점\"><a class=\"markdownIt-Anchor\" href=\"#마크다운의-장-단점\"></a> 마크다운의 장-단점</h2>\n<h3 id=\"장점\"><a class=\"markdownIt-Anchor\" href=\"#장점\"></a> 장점</h3>\n<pre><code>1. 간결하다.\n2. 별도의 도구없이 작성가능하다.\n3. 다양한 형태로 변환이 가능하다.\n3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.\n4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.\n5. 지원하는 프로그램과 플랫폼이 다양하다.\n</code></pre>\n<h3 id=\"단점\"><a class=\"markdownIt-Anchor\" href=\"#단점\"></a> 단점</h3>\n<pre><code>1. 표준이 없다.\n2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.\n3. 모든 HTML 마크업을 대신하지 못한다.\n</code></pre>\n<h2 id=\"참조\"><a class=\"markdownIt-Anchor\" href=\"#참조\"></a> 참조 :</h2>\n<ul>\n<li><a href=\"https://brunch.co.kr/@coveryou/14\" target=\"_blank\" rel=\"noopener\">https://brunch.co.kr/@coveryou/14</a></li>\n<li><a href=\"https://cordelia273.space/15\" target=\"_blank\" rel=\"noopener\">https://cordelia273.space/15</a></li>\n</ul>\n<p><br><br><br></p>\n"},{"title":"CDA 란?","author":{"nick":"TAEJIN","link":"https://www.github.com/taejin0323"},"subtitle":"19.01.17 내용 복습","cover":"https://images.slideplayer.com/25/7958574/slides/slide_1.jpg","date":"2019-01-19T10:07:59.000Z","_content":"\n### Related Post\n\n------\n\n> 본 문서는 IHIS 연구소의 **'HL7 Clinical Document Architecture Release 2'** pdf 문서를 기반으로 작성 되었습니다.\n\n------\n\n# CDA 개요\n\n@[toc]\n\n## 1.  CDA의 정의(Definition)\n\n정식 명칭은 <span style=\"color:blue\">The HL7 **Clinical Document Architecture (CDA)**</span>로\n**\"공유 목적으로 하는 임상 문서(clinical document)의 구조와 의미를 명시하는 문서 표기(Markup)의 표준\"** 이라고 정의 되어있다.\n\n <div style=\"font-size:small\">임상문서는 의사가 환자를 진료 후 진단된 병명 및 진료내역 등을 기술하고 투약, 주요 실시검사 내용 등 주요 진료결과를 포함하는 문서이다.\n    <div style=\"border:1px solid; padding:10px; box-sizing: border-box;\"><b>임상 문서(Clinical document)</b>는 <u>다음과 같은 특성</u>을 가진다 :\n        <pre>\n    - <strong>Persistence (존속성)</strong>\n    &emsp;- 문서는 지역 및 규제 요건에 의해 정의된 기간 동안 변경되지 않은 상태로 계속 존재한다.\n    - <strong>Stewardship (관리 책임)</strong>\n    &emsp;- 문서는  그 관리를 위임받은 기관에 의해 보존된다.\n    - <strong>Potential for authentication (인증가능성)</strong>\n    &emsp;- 문서는 합법적으로 인증받고자 하는 정보의 집합물이다.\n    - <strong>Context (문맥))</strong>\n    &emsp;- 임상 문서에 대한 기본 맥락(default context)를 설정한다.\n    - <strong>Wholeness (전체성)</strong>\n    &emsp;- 문서의 인증은 전체적으로 적용되며 문서 전체 맥락(context)이 없는 부분에는 적용되지 않는다.\n    - <strong>Human readability (가독성)</strong>\n    &emsp;- 사람이 읽을 수 있어야 한다.</pre>\n    </div>\n </div>\n\n## 2. CDA의 주요 특성(Key aspects)\n\n- <span style=\"color:green;\">Extensible Markup Language **(XML)**</span>로 인코딩 된다.\n- <span style=\"color:green;\">HL7 Reference Information Model(이하 RIM)</span>로부터 기계처리적 의미가 유도되고 <span style=\"color:green;\">HL7의 버전 3 데이터 타입</span>을 사용한다\n- 표현력이 풍부하고 유연하다.\n  - <span style=\"color:green;\">document 레벨, section 레벨, entry 레벨의 템플릿</span>은 일반적인 CDA 명세를 통제하기 위해 사용될 수 있다\n\n## 3. CDA의 목표\n\n- 환자의 보호에 우선권을 둔다.\n- 가능한 광범위한 시스템에서 사용이 가능하도록 하면서 비용이 효율적이게 구현한다.\n- 전문 지식의 수준이 다른 사용자들도 판독이 가능하도록 지원한다.\n- 인코딩된 정보가 오래 유지되도록 한다.\n- 합리적이고 빠르게 디자인이 되도록 한다.\n\n## 4. CDA Document의 주요 요소들\n\n![CDA document](/img/componentsOfCDA.png)\n\n- **The Header**\n  - &lt;ClinicalDocument&gt; 태그와 &lt;structuredBody&gt; 태그 사이에 있다\n  - 문서를 확인하고 분류하며 ==인증, 진료, 환자, 관련된 제공자들의 정보==를 담는다.\n- **The Body**\n  - 진료 보고서(clinical report)를 담고 있다.\n  - 1)비정형화(unstructured blob) 또는,\n    2)정형화된 표기(structured markup) 둘 중 하나이다.\n  - 위 예제는 &lt;structuredBody&gt; 태그로 정형화된 구조이고, document section이 되풀이해서 올 수 있는 recursive 구조이다.\n\n## 5. CDA \"levels\"\n\n> PDF 문서에서 이 부분은 표 하나만 있어서 추가 자료 조사를 통해 작성하였습니다. 따라서 부족한 본인이 작성했기에 잘못된 내용이 있을 수도 있습니다.\n\n<table>\n    <colgroup>\n    \t<col width=\"20%\" />\n        <col width=\"80%\" />\n    </colgroup>\n    <thead>\n    <tr>\n        <th>CDA, Release One</th>\n        <th>CDA, Release Two</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    \t<td>CDA Level One</td>\n        <td>The unconstrained CDA specification.\n        규제되지 않은 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Two</td>\n        <td>The CDA specification with section-level templates applied.\n        색션 레벨의 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Three</td>\n        <td>The CDA specification with entry-level (and optionally section-level) templates applied.\n            엔트리 레벨(선택적 색션 레벨) 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    </tbody>\n</table>\n\n- CDA는 2가지 버전이 있다\n\n  - 첫 번째 버전(Release One)에서는 단순 CDA 설계의 목표를 달성하기 위한 *XML DTDs* 또는 *XML Schemas* 계층구조를 세 단계(level)로 나눈 것이다.\n  ![CDA level](http://iehr.eu/wp-content/uploads/2015/11/cda_levels.png)\n\n  - 두 번째 버전(Release Two)에서는 하나의 CDA XML Schema로 이루어지고, HL7 templates들을 계층적으로 적용해 나가는 구조이다.\n  ![CDA Release2](https://slideplayer.com/slide/3227951/11/images/18/CDA+Clinical+Document+Architecture+Document+Hierarchy.jpg)\n\n\n\n## 6. 보안성, 기고성, 데이터 무경성\n\n- CDA 문서를 보내고 받는 <u>애플리케이션 시스템</u>은\n  - 문서 인증, 기밀 유지 및 보존에 대한 모든 법적 요구 사항을 충족해야한다.\n  - 대중 매체를 통한 통신의 경우, 송신자(source)/수신자(recipient) 인증 및 캡슐화(요약)된 문서의 안전한 전송을 취한 암호화 기술이 요구될 수 있으므로 표준의 범위를 벗어나는 상용 도구로 해결 해야한다.\n    <br>\n- <u>CDA</u>는\n  - 애플리케이션 시스템이 중요한 데이터에 대한 접근을 관리하는데 도움이 되는 기밀성 상태 정보를 제공한다. 기밀성 상태(confidentiality status)는 전체 문서 또는 문서의 특정 부분에 적용될 수 있다.\n\n<br><br><br>\n","source":"_posts/20190119-cda-tutorial.md","raw":"---\ntitle: CDA 란?\nauthor:\n  nick: TAEJIN\n  link: https://www.github.com/taejin0323\nsubtitle: 19.01.17 내용 복습\ncategories:\n  - IHIS\n  - HL7\ntags:\n  - HL7\n  - cda\ncover: 'https://images.slideplayer.com/25/7958574/slides/slide_1.jpg'\ndate: 2019-01-19 19:07:59\n\n---\n\n### Related Post\n\n------\n\n> 본 문서는 IHIS 연구소의 **'HL7 Clinical Document Architecture Release 2'** pdf 문서를 기반으로 작성 되었습니다.\n\n------\n\n# CDA 개요\n\n@[toc]\n\n## 1.  CDA의 정의(Definition)\n\n정식 명칭은 <span style=\"color:blue\">The HL7 **Clinical Document Architecture (CDA)**</span>로\n**\"공유 목적으로 하는 임상 문서(clinical document)의 구조와 의미를 명시하는 문서 표기(Markup)의 표준\"** 이라고 정의 되어있다.\n\n <div style=\"font-size:small\">임상문서는 의사가 환자를 진료 후 진단된 병명 및 진료내역 등을 기술하고 투약, 주요 실시검사 내용 등 주요 진료결과를 포함하는 문서이다.\n    <div style=\"border:1px solid; padding:10px; box-sizing: border-box;\"><b>임상 문서(Clinical document)</b>는 <u>다음과 같은 특성</u>을 가진다 :\n        <pre>\n    - <strong>Persistence (존속성)</strong>\n    &emsp;- 문서는 지역 및 규제 요건에 의해 정의된 기간 동안 변경되지 않은 상태로 계속 존재한다.\n    - <strong>Stewardship (관리 책임)</strong>\n    &emsp;- 문서는  그 관리를 위임받은 기관에 의해 보존된다.\n    - <strong>Potential for authentication (인증가능성)</strong>\n    &emsp;- 문서는 합법적으로 인증받고자 하는 정보의 집합물이다.\n    - <strong>Context (문맥))</strong>\n    &emsp;- 임상 문서에 대한 기본 맥락(default context)를 설정한다.\n    - <strong>Wholeness (전체성)</strong>\n    &emsp;- 문서의 인증은 전체적으로 적용되며 문서 전체 맥락(context)이 없는 부분에는 적용되지 않는다.\n    - <strong>Human readability (가독성)</strong>\n    &emsp;- 사람이 읽을 수 있어야 한다.</pre>\n    </div>\n </div>\n\n## 2. CDA의 주요 특성(Key aspects)\n\n- <span style=\"color:green;\">Extensible Markup Language **(XML)**</span>로 인코딩 된다.\n- <span style=\"color:green;\">HL7 Reference Information Model(이하 RIM)</span>로부터 기계처리적 의미가 유도되고 <span style=\"color:green;\">HL7의 버전 3 데이터 타입</span>을 사용한다\n- 표현력이 풍부하고 유연하다.\n  - <span style=\"color:green;\">document 레벨, section 레벨, entry 레벨의 템플릿</span>은 일반적인 CDA 명세를 통제하기 위해 사용될 수 있다\n\n## 3. CDA의 목표\n\n- 환자의 보호에 우선권을 둔다.\n- 가능한 광범위한 시스템에서 사용이 가능하도록 하면서 비용이 효율적이게 구현한다.\n- 전문 지식의 수준이 다른 사용자들도 판독이 가능하도록 지원한다.\n- 인코딩된 정보가 오래 유지되도록 한다.\n- 합리적이고 빠르게 디자인이 되도록 한다.\n\n## 4. CDA Document의 주요 요소들\n\n![CDA document](/img/componentsOfCDA.png)\n\n- **The Header**\n  - &lt;ClinicalDocument&gt; 태그와 &lt;structuredBody&gt; 태그 사이에 있다\n  - 문서를 확인하고 분류하며 ==인증, 진료, 환자, 관련된 제공자들의 정보==를 담는다.\n- **The Body**\n  - 진료 보고서(clinical report)를 담고 있다.\n  - 1)비정형화(unstructured blob) 또는,\n    2)정형화된 표기(structured markup) 둘 중 하나이다.\n  - 위 예제는 &lt;structuredBody&gt; 태그로 정형화된 구조이고, document section이 되풀이해서 올 수 있는 recursive 구조이다.\n\n## 5. CDA \"levels\"\n\n> PDF 문서에서 이 부분은 표 하나만 있어서 추가 자료 조사를 통해 작성하였습니다. 따라서 부족한 본인이 작성했기에 잘못된 내용이 있을 수도 있습니다.\n\n<table>\n    <colgroup>\n    \t<col width=\"20%\" />\n        <col width=\"80%\" />\n    </colgroup>\n    <thead>\n    <tr>\n        <th>CDA, Release One</th>\n        <th>CDA, Release Two</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    \t<td>CDA Level One</td>\n        <td>The unconstrained CDA specification.\n        규제되지 않은 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Two</td>\n        <td>The CDA specification with section-level templates applied.\n        색션 레벨의 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Three</td>\n        <td>The CDA specification with entry-level (and optionally section-level) templates applied.\n            엔트리 레벨(선택적 색션 레벨) 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    </tbody>\n</table>\n\n- CDA는 2가지 버전이 있다\n\n  - 첫 번째 버전(Release One)에서는 단순 CDA 설계의 목표를 달성하기 위한 *XML DTDs* 또는 *XML Schemas* 계층구조를 세 단계(level)로 나눈 것이다.\n  ![CDA level](http://iehr.eu/wp-content/uploads/2015/11/cda_levels.png)\n\n  - 두 번째 버전(Release Two)에서는 하나의 CDA XML Schema로 이루어지고, HL7 templates들을 계층적으로 적용해 나가는 구조이다.\n  ![CDA Release2](https://slideplayer.com/slide/3227951/11/images/18/CDA+Clinical+Document+Architecture+Document+Hierarchy.jpg)\n\n\n\n## 6. 보안성, 기고성, 데이터 무경성\n\n- CDA 문서를 보내고 받는 <u>애플리케이션 시스템</u>은\n  - 문서 인증, 기밀 유지 및 보존에 대한 모든 법적 요구 사항을 충족해야한다.\n  - 대중 매체를 통한 통신의 경우, 송신자(source)/수신자(recipient) 인증 및 캡슐화(요약)된 문서의 안전한 전송을 취한 암호화 기술이 요구될 수 있으므로 표준의 범위를 벗어나는 상용 도구로 해결 해야한다.\n    <br>\n- <u>CDA</u>는\n  - 애플리케이션 시스템이 중요한 데이터에 대한 접근을 관리하는데 도움이 되는 기밀성 상태 정보를 제공한다. 기밀성 상태(confidentiality status)는 전체 문서 또는 문서의 특정 부분에 적용될 수 있다.\n\n<br><br><br>\n","slug":"cda-tutorial","published":1,"updated":"2019-01-29T09:25:45.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzz00003nf46z84s0gb2","content":"<h3 id=\"related-post\"><a class=\"markdownIt-Anchor\" href=\"#related-post\"></a> Related Post</h3>\n<hr>\n<blockquote>\n<p>본 문서는 IHIS 연구소의 <strong>‘HL7 Clinical Document Architecture Release 2’</strong> pdf 문서를 기반으로 작성 되었습니다.</p>\n</blockquote>\n<hr>\n<h1 id=\"cda-개요\"><a class=\"markdownIt-Anchor\" href=\"#cda-개요\"></a> CDA 개요</h1>\n<p><ul class=\"markdownIt-TOC\">\n<li>\n<ul>\n<li><a href=\"#related-post\">Related Post</a></li>\n</ul>\n</li>\n<li><a href=\"#1-cda%EC%9D%98-%EC%A0%95%EC%9D%98definition\">1.  CDA의 정의(Definition)</a></li>\n<li><a href=\"#2-cda%EC%9D%98-%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%84%B1key-aspects\">2. CDA의 주요 특성(Key aspects)</a></li>\n<li><a href=\"#3-cda%EC%9D%98-%EB%AA%A9%ED%91%9C\">3. CDA의 목표</a></li>\n<li><a href=\"#4-cda-document%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9A%94%EC%86%8C%EB%93%A4\">4. CDA Document의 주요 요소들</a></li>\n<li><a href=\"#5-cda-levels\">5. CDA “levels”</a></li>\n<li><a href=\"#6-%EB%B3%B4%EC%95%88%EC%84%B1-%EA%B8%B0%EA%B3%A0%EC%84%B1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AC%B4%EA%B2%BD%EC%84%B1\">6. 보안성, 기고성, 데이터 무경성</a></li>\n</ul>\n</p>\n<h2 id=\"1-cda의-정의definition\"><a class=\"markdownIt-Anchor\" href=\"#1-cda의-정의definition\"></a> 1.  CDA의 정의(Definition)</h2>\n<p>정식 명칭은 <span style=\"color:blue\">The HL7 <strong>Clinical Document Architecture (CDA)</strong></span>로<br>\n<strong>&quot;공유 목적으로 하는 임상 문서(clinical document)의 구조와 의미를 명시하는 문서 표기(Markup)의 표준&quot;</strong> 이라고 정의 되어있다.</p>\n <div style=\"font-size:small\">임상문서는 의사가 환자를 진료 후 진단된 병명 및 진료내역 등을 기술하고 투약, 주요 실시검사 내용 등 주요 진료결과를 포함하는 문서이다.\n    <div style=\"border:1px solid; padding:10px; box-sizing: border-box;\"><b>임상 문서(Clinical document)</b>는 <u>다음과 같은 특성</u>을 가진다 :\n        <pre>\n    - <strong>Persistence (존속성)</strong>\n    &emsp;- 문서는 지역 및 규제 요건에 의해 정의된 기간 동안 변경되지 않은 상태로 계속 존재한다.\n    - <strong>Stewardship (관리 책임)</strong>\n    &emsp;- 문서는  그 관리를 위임받은 기관에 의해 보존된다.\n    - <strong>Potential for authentication (인증가능성)</strong>\n    &emsp;- 문서는 합법적으로 인증받고자 하는 정보의 집합물이다.\n    - <strong>Context (문맥))</strong>\n    &emsp;- 임상 문서에 대한 기본 맥락(default context)를 설정한다.\n    - <strong>Wholeness (전체성)</strong>\n    &emsp;- 문서의 인증은 전체적으로 적용되며 문서 전체 맥락(context)이 없는 부분에는 적용되지 않는다.\n    - <strong>Human readability (가독성)</strong>\n    &emsp;- 사람이 읽을 수 있어야 한다.</pre>\n    </div>\n </div>\n<h2 id=\"2-cda의-주요-특성key-aspects\"><a class=\"markdownIt-Anchor\" href=\"#2-cda의-주요-특성key-aspects\"></a> 2. CDA의 주요 특성(Key aspects)</h2>\n<ul>\n<li><span style=\"color:green;\">Extensible Markup Language <strong>(XML)</strong></span>로 인코딩 된다.</li>\n<li><span style=\"color:green;\">HL7 Reference Information Model(이하 RIM)</span>로부터 기계처리적 의미가 유도되고 <span style=\"color:green;\">HL7의 버전 3 데이터 타입</span>을 사용한다</li>\n<li>표현력이 풍부하고 유연하다.\n<ul>\n<li><span style=\"color:green;\">document 레벨, section 레벨, entry 레벨의 템플릿</span>은 일반적인 CDA 명세를 통제하기 위해 사용될 수 있다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-cda의-목표\"><a class=\"markdownIt-Anchor\" href=\"#3-cda의-목표\"></a> 3. CDA의 목표</h2>\n<ul>\n<li>환자의 보호에 우선권을 둔다.</li>\n<li>가능한 광범위한 시스템에서 사용이 가능하도록 하면서 비용이 효율적이게 구현한다.</li>\n<li>전문 지식의 수준이 다른 사용자들도 판독이 가능하도록 지원한다.</li>\n<li>인코딩된 정보가 오래 유지되도록 한다.</li>\n<li>합리적이고 빠르게 디자인이 되도록 한다.</li>\n</ul>\n<h2 id=\"4-cda-document의-주요-요소들\"><a class=\"markdownIt-Anchor\" href=\"#4-cda-document의-주요-요소들\"></a> 4. CDA Document의 주요 요소들</h2>\n<p><img src=\"/img/componentsOfCDA.png\" alt=\"CDA document\"></p>\n<ul>\n<li><strong>The Header</strong>\n<ul>\n<li>&lt;ClinicalDocument&gt; 태그와 &lt;structuredBody&gt; 태그 사이에 있다</li>\n<li>문서를 확인하고 분류하며 <mark>인증, 진료, 환자, 관련된 제공자들의 정보</mark>를 담는다.</li>\n</ul>\n</li>\n<li><strong>The Body</strong>\n<ul>\n<li>진료 보고서(clinical report)를 담고 있다.</li>\n<li>1)비정형화(unstructured blob) 또는,<br>\n2)정형화된 표기(structured markup) 둘 중 하나이다.</li>\n<li>위 예제는 &lt;structuredBody&gt; 태그로 정형화된 구조이고, document section이 되풀이해서 올 수 있는 recursive 구조이다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-cda-levels\"><a class=\"markdownIt-Anchor\" href=\"#5-cda-levels\"></a> 5. CDA “levels”</h2>\n<blockquote>\n<p>PDF 문서에서 이 부분은 표 하나만 있어서 추가 자료 조사를 통해 작성하였습니다. 따라서 부족한 본인이 작성했기에 잘못된 내용이 있을 수도 있습니다.</p>\n</blockquote>\n<table>\n    <colgroup>\n    \t<col width=\"20%\">\n        <col width=\"80%\">\n    </colgroup>\n    <thead>\n    <tr>\n        <th>CDA, Release One</th>\n        <th>CDA, Release Two</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    \t<td>CDA Level One</td>\n        <td>The unconstrained CDA specification.\n        규제되지 않은 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Two</td>\n        <td>The CDA specification with section-level templates applied.\n        색션 레벨의 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Three</td>\n        <td>The CDA specification with entry-level (and optionally section-level) templates applied.\n            엔트리 레벨(선택적 색션 레벨) 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    </tbody>\n</table>\n<ul>\n<li>\n<p>CDA는 2가지 버전이 있다</p>\n<ul>\n<li>\n<p>첫 번째 버전(Release One)에서는 단순 CDA 설계의 목표를 달성하기 위한 <em>XML DTDs</em> 또는 <em>XML Schemas</em> 계층구조를 세 단계(level)로 나눈 것이다.<br>\n<img src=\"http://iehr.eu/wp-content/uploads/2015/11/cda_levels.png\" alt=\"CDA level\"></p>\n</li>\n<li>\n<p>두 번째 버전(Release Two)에서는 하나의 CDA XML Schema로 이루어지고, HL7 templates들을 계층적으로 적용해 나가는 구조이다.<br>\n<img src=\"https://slideplayer.com/slide/3227951/11/images/18/CDA+Clinical+Document+Architecture+Document+Hierarchy.jpg\" alt=\"CDA Release2\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-보안성-기고성-데이터-무경성\"><a class=\"markdownIt-Anchor\" href=\"#6-보안성-기고성-데이터-무경성\"></a> 6. 보안성, 기고성, 데이터 무경성</h2>\n<ul>\n<li>CDA 문서를 보내고 받는 <u>애플리케이션 시스템</u>은\n<ul>\n<li>문서 인증, 기밀 유지 및 보존에 대한 모든 법적 요구 사항을 충족해야한다.</li>\n<li>대중 매체를 통한 통신의 경우, 송신자(source)/수신자(recipient) 인증 및 캡슐화(요약)된 문서의 안전한 전송을 취한 암호화 기술이 요구될 수 있으므로 표준의 범위를 벗어나는 상용 도구로 해결 해야한다.<br>\n<br></li>\n</ul>\n</li>\n<li><u>CDA</u>는\n<ul>\n<li>애플리케이션 시스템이 중요한 데이터에 대한 접근을 관리하는데 도움이 되는 기밀성 상태 정보를 제공한다. 기밀성 상태(confidentiality status)는 전체 문서 또는 문서의 특정 부분에 적용될 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br><br><br></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<h3 id=\"related-post\"><a class=\"markdownIt-Anchor\" href=\"#related-post\"></a> Related Post</h3>\n<hr>\n<blockquote>\n<p>본 문서는 IHIS 연구소의 <strong>‘HL7 Clinical Document Architecture Release 2’</strong> pdf 문서를 기반으로 작성 되었습니다.</p>\n</blockquote>\n<hr>\n<h1 id=\"cda-개요\"><a class=\"markdownIt-Anchor\" href=\"#cda-개요\"></a> CDA 개요</h1>\n<p><ul class=\"markdownIt-TOC\">\n<li>\n<ul>\n<li><a href=\"#related-post\">Related Post</a></li>\n</ul>\n</li>\n<li><a href=\"#1-cda%EC%9D%98-%EC%A0%95%EC%9D%98definition\">1.  CDA의 정의(Definition)</a></li>\n<li><a href=\"#2-cda%EC%9D%98-%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%84%B1key-aspects\">2. CDA의 주요 특성(Key aspects)</a></li>\n<li><a href=\"#3-cda%EC%9D%98-%EB%AA%A9%ED%91%9C\">3. CDA의 목표</a></li>\n<li><a href=\"#4-cda-document%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9A%94%EC%86%8C%EB%93%A4\">4. CDA Document의 주요 요소들</a></li>\n<li><a href=\"#5-cda-levels\">5. CDA “levels”</a></li>\n<li><a href=\"#6-%EB%B3%B4%EC%95%88%EC%84%B1-%EA%B8%B0%EA%B3%A0%EC%84%B1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AC%B4%EA%B2%BD%EC%84%B1\">6. 보안성, 기고성, 데이터 무경성</a></li>\n</ul>\n</p>\n<h2 id=\"1-cda의-정의definition\"><a class=\"markdownIt-Anchor\" href=\"#1-cda의-정의definition\"></a> 1.  CDA의 정의(Definition)</h2>\n<p>정식 명칭은 <span style=\"color:blue\">The HL7 <strong>Clinical Document Architecture (CDA)</strong></span>로<br>\n<strong>&quot;공유 목적으로 하는 임상 문서(clinical document)의 구조와 의미를 명시하는 문서 표기(Markup)의 표준&quot;</strong> 이라고 정의 되어있다.</p>\n <div style=\"font-size:small\">임상문서는 의사가 환자를 진료 후 진단된 병명 및 진료내역 등을 기술하고 투약, 주요 실시검사 내용 등 주요 진료결과를 포함하는 문서이다.\n    <div style=\"border:1px solid; padding:10px; box-sizing: border-box;\"><b>임상 문서(Clinical document)</b>는 <u>다음과 같은 특성</u>을 가진다 :\n        <pre>\n    - <strong>Persistence (존속성)</strong>\n    &emsp;- 문서는 지역 및 규제 요건에 의해 정의된 기간 동안 변경되지 않은 상태로 계속 존재한다.\n    - <strong>Stewardship (관리 책임)</strong>\n    &emsp;- 문서는  그 관리를 위임받은 기관에 의해 보존된다.\n    - <strong>Potential for authentication (인증가능성)</strong>\n    &emsp;- 문서는 합법적으로 인증받고자 하는 정보의 집합물이다.\n    - <strong>Context (문맥))</strong>\n    &emsp;- 임상 문서에 대한 기본 맥락(default context)를 설정한다.\n    - <strong>Wholeness (전체성)</strong>\n    &emsp;- 문서의 인증은 전체적으로 적용되며 문서 전체 맥락(context)이 없는 부분에는 적용되지 않는다.\n    - <strong>Human readability (가독성)</strong>\n    &emsp;- 사람이 읽을 수 있어야 한다.</pre>\n    </div>\n </div>\n<h2 id=\"2-cda의-주요-특성key-aspects\"><a class=\"markdownIt-Anchor\" href=\"#2-cda의-주요-특성key-aspects\"></a> 2. CDA의 주요 특성(Key aspects)</h2>\n<ul>\n<li><span style=\"color:green;\">Extensible Markup Language <strong>(XML)</strong></span>로 인코딩 된다.</li>\n<li><span style=\"color:green;\">HL7 Reference Information Model(이하 RIM)</span>로부터 기계처리적 의미가 유도되고 <span style=\"color:green;\">HL7의 버전 3 데이터 타입</span>을 사용한다</li>\n<li>표현력이 풍부하고 유연하다.\n<ul>\n<li><span style=\"color:green;\">document 레벨, section 레벨, entry 레벨의 템플릿</span>은 일반적인 CDA 명세를 통제하기 위해 사용될 수 있다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-cda의-목표\"><a class=\"markdownIt-Anchor\" href=\"#3-cda의-목표\"></a> 3. CDA의 목표</h2>\n<ul>\n<li>환자의 보호에 우선권을 둔다.</li>\n<li>가능한 광범위한 시스템에서 사용이 가능하도록 하면서 비용이 효율적이게 구현한다.</li>\n<li>전문 지식의 수준이 다른 사용자들도 판독이 가능하도록 지원한다.</li>\n<li>인코딩된 정보가 오래 유지되도록 한다.</li>\n<li>합리적이고 빠르게 디자인이 되도록 한다.</li>\n</ul>\n<h2 id=\"4-cda-document의-주요-요소들\"><a class=\"markdownIt-Anchor\" href=\"#4-cda-document의-주요-요소들\"></a> 4. CDA Document의 주요 요소들</h2>\n<p><img src=\"/img/componentsOfCDA.png\" alt=\"CDA document\"></p>\n<ul>\n<li><strong>The Header</strong>\n<ul>\n<li>&lt;ClinicalDocument&gt; 태그와 &lt;structuredBody&gt; 태그 사이에 있다</li>\n<li>문서를 확인하고 분류하며 <mark>인증, 진료, 환자, 관련된 제공자들의 정보</mark>를 담는다.</li>\n</ul>\n</li>\n<li><strong>The Body</strong>\n<ul>\n<li>진료 보고서(clinical report)를 담고 있다.</li>\n<li>1)비정형화(unstructured blob) 또는,<br>\n2)정형화된 표기(structured markup) 둘 중 하나이다.</li>\n<li>위 예제는 &lt;structuredBody&gt; 태그로 정형화된 구조이고, document section이 되풀이해서 올 수 있는 recursive 구조이다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-cda-levels\"><a class=\"markdownIt-Anchor\" href=\"#5-cda-levels\"></a> 5. CDA “levels”</h2>\n<blockquote>\n<p>PDF 문서에서 이 부분은 표 하나만 있어서 추가 자료 조사를 통해 작성하였습니다. 따라서 부족한 본인이 작성했기에 잘못된 내용이 있을 수도 있습니다.</p>\n</blockquote>\n<table>\n    <colgroup>\n    \t<col width=\"20%\">\n        <col width=\"80%\">\n    </colgroup>\n    <thead>\n    <tr>\n        <th>CDA, Release One</th>\n        <th>CDA, Release Two</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    \t<td>CDA Level One</td>\n        <td>The unconstrained CDA specification.\n        규제되지 않은 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Two</td>\n        <td>The CDA specification with section-level templates applied.\n        색션 레벨의 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    <tr>\n    \t<td>CDA Level Three</td>\n        <td>The CDA specification with entry-level (and optionally section-level) templates applied.\n            엔트리 레벨(선택적 색션 레벨) 템플릿을 적용한 CDA 규정</td>\n    </tr>\n    </tbody>\n</table>\n<ul>\n<li>\n<p>CDA는 2가지 버전이 있다</p>\n<ul>\n<li>\n<p>첫 번째 버전(Release One)에서는 단순 CDA 설계의 목표를 달성하기 위한 <em>XML DTDs</em> 또는 <em>XML Schemas</em> 계층구조를 세 단계(level)로 나눈 것이다.<br>\n<img src=\"http://iehr.eu/wp-content/uploads/2015/11/cda_levels.png\" alt=\"CDA level\"></p>\n</li>\n<li>\n<p>두 번째 버전(Release Two)에서는 하나의 CDA XML Schema로 이루어지고, HL7 templates들을 계층적으로 적용해 나가는 구조이다.<br>\n<img src=\"https://slideplayer.com/slide/3227951/11/images/18/CDA+Clinical+Document+Architecture+Document+Hierarchy.jpg\" alt=\"CDA Release2\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-보안성-기고성-데이터-무경성\"><a class=\"markdownIt-Anchor\" href=\"#6-보안성-기고성-데이터-무경성\"></a> 6. 보안성, 기고성, 데이터 무경성</h2>\n<ul>\n<li>CDA 문서를 보내고 받는 <u>애플리케이션 시스템</u>은\n<ul>\n<li>문서 인증, 기밀 유지 및 보존에 대한 모든 법적 요구 사항을 충족해야한다.</li>\n<li>대중 매체를 통한 통신의 경우, 송신자(source)/수신자(recipient) 인증 및 캡슐화(요약)된 문서의 안전한 전송을 취한 암호화 기술이 요구될 수 있으므로 표준의 범위를 벗어나는 상용 도구로 해결 해야한다.<br>\n<br></li>\n</ul>\n</li>\n<li><u>CDA</u>는\n<ul>\n<li>애플리케이션 시스템이 중요한 데이터에 대한 접근을 관리하는데 도움이 되는 기밀성 상태 정보를 제공한다. 기밀성 상태(confidentiality status)는 전체 문서 또는 문서의 특정 부분에 적용될 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br><br><br></p>\n"},{"title":"블로그에 대한 투덜투덜","author":{"nick":"TAEJIN","link":null},"date":"2019-01-23T08:13:45.000Z","subtitle":"아직 잘 모르는 것들.. 테마에 관한 것들.. 주저리 주저리","cover":"https://healthitanalytics.com/images/site/article_headers/_normal/Policy_and_Regulation2.jpg","_content":"\n> 그냥 두서없이 블로그 만들면서 들었던 생각들을 작성\n\n19.01.22\n```\n블로그에 disqus를 사용해서 댓글 기능을 추가했다.\n\n자세히는 모르지만 최근 패치 이후 언어 선택에 한글이 빠져있는 문제점이 생겼는데\n구글링 해보니 크롬 개발자 모드로 꼼수 부려서 한글이 나오게 하는 방법이 있어서 그렇게 적용해 놓았다.\n```\n\n<br>\n\n19.01.23\n\n```\n블로그 생성한지 일주일이 지나가고 있지만 아직 모르는 것이 너무 많다ㅠ\n테마를 끌어와서 내 취향대로 설정하고 싶은데 마음대로 잘 안되네...\n\n아직까지 마크다운 사용에도 익숙하지 않고..\n저번 주까지 하루패드 에디터를 사용해서 작성했지만 에디터에서 보여지는 결과물과 Github page에서 출력되는 결과물이 달라서 Typora 에디터로 바꿔봤다(하루패드는 화면이 분할되서 좋았고, Typora는 UI가 이쁘다)\n일단은 plugin 기능들까지 사용하면서 최대한 나만의 개발환경을 만들어 보려고 노력중이다...\n\n내일까지 제출해야 하는 제안서에 시간을 많이 할애하고 있는 것도 있지만,\n포스팅 환경이 아직 잘 구성되지 못해서 업로드가 더딘 것 같다...\n\n적어도 개강 전까지 최대한 빨리 적응해서 능숙해 졌으면 좋겠다\n```\n<br>\n\n19.01.24\n```\n오늘은 알고리즘 공부했음... 언젠가 이것도 정리해서 올릴 수 있기를...\n\n글도 얼른 정리해야하는데...\nhexo에서 '== ==', '++ ++' 등 하이라이트랑 밋줄이 표시 안되는 문제가 있어서 플러그인 관련해서 조금 살펴보고 있다...\nMarkdown 에디터로 작성한 글이랑 서버에 올린 글이랑 다르니까 영 찝찝해서 아직 이것 저것 공부하는 중이다...\n```\n<br>\n\n19.01.28\n```\n주말에 서울 다녀온다고 아무것도 못했다ㅠ\n포스트 내 목차 링크와 각주 링크를 탔을 때, 해당 화면으로 이동하는 것 까지는 좋은데 맨 위 메뉴바가 가려서 잘 안보인다\n이 문제는 어떻게 해결하는게 좋을까?...\n\n그리고 주 마다, 하루하루 마다 목표와 계획을 짜서 해야지 계속 이랬다가는 진도가 안나가겠다\n```\n<br>\n\n19.01.31\n```\n별로 한 것도 없는데 벌써 1월의 마지막 날이다..\n자꾸 디자인적인 부분이 신경쓰여서 포스트 작성에 진도가 안 나가는 것 같다. 그냥 포기하고 내용만 적어 나갈까...\n목차를 만들어 해당 내용으로 링크를 타는 것은 좋은데 뒤로 가기가 제대로 안되는 문제는... 나중에 해결 해야겠다.\n이렇게 자꾸 하나씩 하나씩 미루게되고... ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ\n```\n\n<br><br><br>\n","source":"_posts/20190123-blog-issues.md","raw":"---\ntitle: 블로그에 대한 투덜투덜\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - ETC\ntags:\n  - 잡다한\ndate: 2019-01-23 17:13:45\nsubtitle: 아직 잘 모르는 것들.. 테마에 관한 것들.. 주저리 주저리\ncover: 'https://healthitanalytics.com/images/site/article_headers/_normal/Policy_and_Regulation2.jpg'\n---\n\n> 그냥 두서없이 블로그 만들면서 들었던 생각들을 작성\n\n19.01.22\n```\n블로그에 disqus를 사용해서 댓글 기능을 추가했다.\n\n자세히는 모르지만 최근 패치 이후 언어 선택에 한글이 빠져있는 문제점이 생겼는데\n구글링 해보니 크롬 개발자 모드로 꼼수 부려서 한글이 나오게 하는 방법이 있어서 그렇게 적용해 놓았다.\n```\n\n<br>\n\n19.01.23\n\n```\n블로그 생성한지 일주일이 지나가고 있지만 아직 모르는 것이 너무 많다ㅠ\n테마를 끌어와서 내 취향대로 설정하고 싶은데 마음대로 잘 안되네...\n\n아직까지 마크다운 사용에도 익숙하지 않고..\n저번 주까지 하루패드 에디터를 사용해서 작성했지만 에디터에서 보여지는 결과물과 Github page에서 출력되는 결과물이 달라서 Typora 에디터로 바꿔봤다(하루패드는 화면이 분할되서 좋았고, Typora는 UI가 이쁘다)\n일단은 plugin 기능들까지 사용하면서 최대한 나만의 개발환경을 만들어 보려고 노력중이다...\n\n내일까지 제출해야 하는 제안서에 시간을 많이 할애하고 있는 것도 있지만,\n포스팅 환경이 아직 잘 구성되지 못해서 업로드가 더딘 것 같다...\n\n적어도 개강 전까지 최대한 빨리 적응해서 능숙해 졌으면 좋겠다\n```\n<br>\n\n19.01.24\n```\n오늘은 알고리즘 공부했음... 언젠가 이것도 정리해서 올릴 수 있기를...\n\n글도 얼른 정리해야하는데...\nhexo에서 '== ==', '++ ++' 등 하이라이트랑 밋줄이 표시 안되는 문제가 있어서 플러그인 관련해서 조금 살펴보고 있다...\nMarkdown 에디터로 작성한 글이랑 서버에 올린 글이랑 다르니까 영 찝찝해서 아직 이것 저것 공부하는 중이다...\n```\n<br>\n\n19.01.28\n```\n주말에 서울 다녀온다고 아무것도 못했다ㅠ\n포스트 내 목차 링크와 각주 링크를 탔을 때, 해당 화면으로 이동하는 것 까지는 좋은데 맨 위 메뉴바가 가려서 잘 안보인다\n이 문제는 어떻게 해결하는게 좋을까?...\n\n그리고 주 마다, 하루하루 마다 목표와 계획을 짜서 해야지 계속 이랬다가는 진도가 안나가겠다\n```\n<br>\n\n19.01.31\n```\n별로 한 것도 없는데 벌써 1월의 마지막 날이다..\n자꾸 디자인적인 부분이 신경쓰여서 포스트 작성에 진도가 안 나가는 것 같다. 그냥 포기하고 내용만 적어 나갈까...\n목차를 만들어 해당 내용으로 링크를 타는 것은 좋은데 뒤로 가기가 제대로 안되는 문제는... 나중에 해결 해야겠다.\n이렇게 자꾸 하나씩 하나씩 미루게되고... ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ\n```\n\n<br><br><br>\n","slug":"blog-issues","published":1,"updated":"2019-01-31T07:01:46.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzd0007nf469drbkewz","content":"<blockquote>\n<p>그냥 두서없이 블로그 만들면서 들었던 생각들을 작성</p>\n</blockquote>\n<p>19.01.22</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">블로그에 disqus를 사용해서 댓글 기능을 추가했다.</span><br><span class=\"line\"></span><br><span class=\"line\">자세히는 모르지만 최근 패치 이후 언어 선택에 한글이 빠져있는 문제점이 생겼는데</span><br><span class=\"line\">구글링 해보니 크롬 개발자 모드로 꼼수 부려서 한글이 나오게 하는 방법이 있어서 그렇게 적용해 놓았다.</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.23</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">블로그 생성한지 일주일이 지나가고 있지만 아직 모르는 것이 너무 많다ㅠ</span><br><span class=\"line\">테마를 끌어와서 내 취향대로 설정하고 싶은데 마음대로 잘 안되네...</span><br><span class=\"line\"></span><br><span class=\"line\">아직까지 마크다운 사용에도 익숙하지 않고..</span><br><span class=\"line\">저번 주까지 하루패드 에디터를 사용해서 작성했지만 에디터에서 보여지는 결과물과 Github page에서 출력되는 결과물이 달라서 Typora 에디터로 바꿔봤다(하루패드는 화면이 분할되서 좋았고, Typora는 UI가 이쁘다)</span><br><span class=\"line\">일단은 plugin 기능들까지 사용하면서 최대한 나만의 개발환경을 만들어 보려고 노력중이다...</span><br><span class=\"line\"></span><br><span class=\"line\">내일까지 제출해야 하는 제안서에 시간을 많이 할애하고 있는 것도 있지만,</span><br><span class=\"line\">포스팅 환경이 아직 잘 구성되지 못해서 업로드가 더딘 것 같다...</span><br><span class=\"line\"></span><br><span class=\"line\">적어도 개강 전까지 최대한 빨리 적응해서 능숙해 졌으면 좋겠다</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.24</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">오늘은 알고리즘 공부했음... 언젠가 이것도 정리해서 올릴 수 있기를...</span><br><span class=\"line\"></span><br><span class=\"line\">글도 얼른 정리해야하는데...</span><br><span class=\"line\">hexo에서 &apos;== ==&apos;, &apos;++ ++&apos; 등 하이라이트랑 밋줄이 표시 안되는 문제가 있어서 플러그인 관련해서 조금 살펴보고 있다...</span><br><span class=\"line\">Markdown 에디터로 작성한 글이랑 서버에 올린 글이랑 다르니까 영 찝찝해서 아직 이것 저것 공부하는 중이다...</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.28</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">주말에 서울 다녀온다고 아무것도 못했다ㅠ</span><br><span class=\"line\">포스트 내 목차 링크와 각주 링크를 탔을 때, 해당 화면으로 이동하는 것 까지는 좋은데 맨 위 메뉴바가 가려서 잘 안보인다</span><br><span class=\"line\">이 문제는 어떻게 해결하는게 좋을까?...</span><br><span class=\"line\"></span><br><span class=\"line\">그리고 주 마다, 하루하루 마다 목표와 계획을 짜서 해야지 계속 이랬다가는 진도가 안나가겠다</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.31</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">별로 한 것도 없는데 벌써 1월의 마지막 날이다..</span><br><span class=\"line\">자꾸 디자인적인 부분이 신경쓰여서 포스트 작성에 진도가 안 나가는 것 같다. 그냥 포기하고 내용만 적어 나갈까...</span><br><span class=\"line\">목차를 만들어 해당 내용으로 링크를 타는 것은 좋은데 뒤로 가기가 제대로 안되는 문제는... 나중에 해결 해야겠다.</span><br><span class=\"line\">이렇게 자꾸 하나씩 하나씩 미루게되고... ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ</span><br></pre></td></tr></table></figure>\n<p><br><br><br></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<blockquote>\n<p>그냥 두서없이 블로그 만들면서 들었던 생각들을 작성</p>\n</blockquote>\n<p>19.01.22</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">블로그에 disqus를 사용해서 댓글 기능을 추가했다.</span><br><span class=\"line\"></span><br><span class=\"line\">자세히는 모르지만 최근 패치 이후 언어 선택에 한글이 빠져있는 문제점이 생겼는데</span><br><span class=\"line\">구글링 해보니 크롬 개발자 모드로 꼼수 부려서 한글이 나오게 하는 방법이 있어서 그렇게 적용해 놓았다.</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.23</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">블로그 생성한지 일주일이 지나가고 있지만 아직 모르는 것이 너무 많다ㅠ</span><br><span class=\"line\">테마를 끌어와서 내 취향대로 설정하고 싶은데 마음대로 잘 안되네...</span><br><span class=\"line\"></span><br><span class=\"line\">아직까지 마크다운 사용에도 익숙하지 않고..</span><br><span class=\"line\">저번 주까지 하루패드 에디터를 사용해서 작성했지만 에디터에서 보여지는 결과물과 Github page에서 출력되는 결과물이 달라서 Typora 에디터로 바꿔봤다(하루패드는 화면이 분할되서 좋았고, Typora는 UI가 이쁘다)</span><br><span class=\"line\">일단은 plugin 기능들까지 사용하면서 최대한 나만의 개발환경을 만들어 보려고 노력중이다...</span><br><span class=\"line\"></span><br><span class=\"line\">내일까지 제출해야 하는 제안서에 시간을 많이 할애하고 있는 것도 있지만,</span><br><span class=\"line\">포스팅 환경이 아직 잘 구성되지 못해서 업로드가 더딘 것 같다...</span><br><span class=\"line\"></span><br><span class=\"line\">적어도 개강 전까지 최대한 빨리 적응해서 능숙해 졌으면 좋겠다</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.24</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">오늘은 알고리즘 공부했음... 언젠가 이것도 정리해서 올릴 수 있기를...</span><br><span class=\"line\"></span><br><span class=\"line\">글도 얼른 정리해야하는데...</span><br><span class=\"line\">hexo에서 &apos;== ==&apos;, &apos;++ ++&apos; 등 하이라이트랑 밋줄이 표시 안되는 문제가 있어서 플러그인 관련해서 조금 살펴보고 있다...</span><br><span class=\"line\">Markdown 에디터로 작성한 글이랑 서버에 올린 글이랑 다르니까 영 찝찝해서 아직 이것 저것 공부하는 중이다...</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.28</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">주말에 서울 다녀온다고 아무것도 못했다ㅠ</span><br><span class=\"line\">포스트 내 목차 링크와 각주 링크를 탔을 때, 해당 화면으로 이동하는 것 까지는 좋은데 맨 위 메뉴바가 가려서 잘 안보인다</span><br><span class=\"line\">이 문제는 어떻게 해결하는게 좋을까?...</span><br><span class=\"line\"></span><br><span class=\"line\">그리고 주 마다, 하루하루 마다 목표와 계획을 짜서 해야지 계속 이랬다가는 진도가 안나가겠다</span><br></pre></td></tr></table></figure>\n<br>\n<p>19.01.31</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">별로 한 것도 없는데 벌써 1월의 마지막 날이다..</span><br><span class=\"line\">자꾸 디자인적인 부분이 신경쓰여서 포스트 작성에 진도가 안 나가는 것 같다. 그냥 포기하고 내용만 적어 나갈까...</span><br><span class=\"line\">목차를 만들어 해당 내용으로 링크를 타는 것은 좋은데 뒤로 가기가 제대로 안되는 문제는... 나중에 해결 해야겠다.</span><br><span class=\"line\">이렇게 자꾸 하나씩 하나씩 미루게되고... ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ</span><br></pre></td></tr></table></figure>\n<p><br><br><br></p>\n"},{"title":"Spring 개요","author":{"nick":"TAEJIN","link":"https://www.github.com/taejin0323"},"date":"2019-01-22T08:30:00.000Z","subtitle":"스프링에 대해 알아보고 정리한 내용","cover":"https://spring.io/img/spring-by-pivotal.png","_content":"\n> 가장 좋은 문서는 spring.io 공식 홈페이지에서 제공하는 documents 입니다. 개인적으로 공부하면서 작성하는 문서라 틀린 부분이 있을 수 있으니, 반드시 공식 문서를 참조하시기 바랍니다.\n>\n> > [스프링 공식 홈페이지](https://spring.io)\n> > [소스코드](https://github.com/spring-projects)\n> > [가이드](https://spring.io/guides)\n\n:book:**목차**:book:\n\n1. [스프링(Spring)](#1-스프링)\n2. [스프링 프레임워크란](#2-스프링-프레임워크란)\n\n------\n\n### 1. 스프링\n\n공식 홈페이지 첫 화면을 보면 <u>Spring : the source for modern java</u> 라고 적혀있습니다.\n\n이 문장만으로는 이해하기 어려워서 구글에 검색을 해도 우리나라에서는 스프링하면 <u>스프링 프레임워크(Spring framework)</u>를 주로 이야기해서 스프링의 정의에 대해 다루는 자료는 그렇게 많지 않았습니다.\n\n그럼에도 스프링이란 무엇인지 명확하게 짚고 넘어가는 것이 좋을 것 같습니다.\n\n**스프링(Spring)** 은\n\n<div style=\"border:3px; border-style:dashed; color:grey; text-align:center\">\n  <br>자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크<br><br>\n</div>\n\n라는 정의를 가지고 있습니다.\n\n 얼핏 보면 감이 잘 안 잡히기 때문에 시간을 내셔서 제가 참조했던 '12bme'님의 포스트[^1] 를 자세히 읽어보시고 이해하시면 좋을 것 같습니다.\n\n 또한 공식 홈페이지에 따르면 Spring 개발진의 철학이 Rod Johnson이 2002년 10월에 출판한 'Expert One-on-One J2EE Design and Develpment'에 요약되어 있다고 하니 여유가 있다면 한번 읽어보면 깊은 이해를 하는데 도움이 될 것 같습니다.\n\n\n\n스프링 개발진의 **목표(Aim)** 로는,\n\n- 스프링은 사용하기 즐거워야 하고\n- 여러분의 애플리케이션 코드가 스프링 API들에 의존해서는 안되며\n- JDO, Toplink, Hibernate와 같은 훌륭한 O/R mapping solution들과 경쟁하지 않지만, 통합을 촉진하는 것 입니다.\n\n\n\n 또한 공식 홈페이지에서 **PROJECTS** 탭을 보면 스프링을 활용한 다양한 프로젝트들을 보실 수 있습니다.\n\n- Spring Boot\n- Spring Framework\n- Spring Cloud\n- Etc ...\n\n\n\n이처럼 스프링은 <u>어디서나 간단하고, 이식하기 쉬우며, 신속하고, 유연하게 JVM 기반의 시스템과 애플리케이션을 구축</u>할 수 있어  ==다양한 프로젝트들의 디자인이 되는 모듈==이라고 생각할 수 있습니다.\n\n\n\n[^1]: [스프링이란 무엇인가? - 12bme](https://12bme.tistory.com/157)\n\n\n\n### 2. 스프링 프레임워크란\n\n 위에서 언급한 12bme님의 포스트를 보셨으면 쉽게 이해하시겠지만, *엔터프라이즈 애플리케이션* 개발이 어려운 이유는 사회가 점점 복잡해지고, 시스템에서 다루어야 하는 업무의 복잡도와 의존도가 높아져 <u>개발의 복잡성이 증가</u>했기 때문입니다. 이에 사용자의 요구를 빠르고 안정적이면서 확장 가능한 형태로 유지가히 위한 로우레벨(Low level) 수준의 기술적 처리가 필요해졌고 우리는 스프링 프레임워크를 통해 쉽게 자바 엔터프라이즈 애플리케이션을 개발할 수 있게 되었습니다.\n\n\n\n![history](/img/history.png)\n\n 2004년 3월 Spring Framework 1.0 버전을 시작으로, 포스트 작성일 기준(2019년 1월) Spring Framework는 5.1.4 버전이 최신 버전입니다.\n\n\n\n 짧게 스프링(Spring)이라고 불리는 스프링 프레임워크는 **모든 플랫폼에서 자바 기반 엔터프라이즈 애플리케이션(JAVA EE) 개발을 편하게 해주는 종합적인 프로그래밍 및 구성 모델을 제공**합니다.\n\n\n\n 프레임워크의 바탕인 *스프링* 의 핵심 요소가 <u>애플리케이션 수준에서의 인프라 지원</u>이기 때문에 스프링 프레임워크에서는 개발 환경 구축에 필요한 하부구조(Infrastructure)를 포괄적으로 제공하고 처리하기 때문에 <u>개발자는 애플리케이션 개발(plumbing[^2])에 집중</u>할 수 있게 되었습니다.\n\n![plumbing](https://www.jbrothershi.com/wp-content/uploads/2018/10/SpringPlumbingLogo.png)\n\n 참고로 스프링 프레임워크는 대한민국 공공기관의 웹 서비스 개발 시 사용을 권장하고 있는 전자 정부 표준 프레임워크의 기반 기술입니다.\n\n[^2]: 원문에는 plumbing이라는 단어로 표현하는데, 프레임워크가 부품들 다 만들어 놓으면 개발자는 그것들을 조립하는 느낌이라 이런 단어를 사용한 것 같습니다.\n\n<br><br><br>\n","source":"_posts/20190122-spring.md","raw":"---\ntitle: Spring 개요\nauthor:\n  nick: TAEJIN  \n  link: https://www.github.com/taejin0323\ncategories:\n  - WEB\n  - SPRING\ntags:\n  - spring\n  - 스프링\ndate: 2019-01-22 17:30:00\nsubtitle: 스프링에 대해 알아보고 정리한 내용\ncover: https://spring.io/img/spring-by-pivotal.png\n\n---\n\n> 가장 좋은 문서는 spring.io 공식 홈페이지에서 제공하는 documents 입니다. 개인적으로 공부하면서 작성하는 문서라 틀린 부분이 있을 수 있으니, 반드시 공식 문서를 참조하시기 바랍니다.\n>\n> > [스프링 공식 홈페이지](https://spring.io)\n> > [소스코드](https://github.com/spring-projects)\n> > [가이드](https://spring.io/guides)\n\n:book:**목차**:book:\n\n1. [스프링(Spring)](#1-스프링)\n2. [스프링 프레임워크란](#2-스프링-프레임워크란)\n\n------\n\n### 1. 스프링\n\n공식 홈페이지 첫 화면을 보면 <u>Spring : the source for modern java</u> 라고 적혀있습니다.\n\n이 문장만으로는 이해하기 어려워서 구글에 검색을 해도 우리나라에서는 스프링하면 <u>스프링 프레임워크(Spring framework)</u>를 주로 이야기해서 스프링의 정의에 대해 다루는 자료는 그렇게 많지 않았습니다.\n\n그럼에도 스프링이란 무엇인지 명확하게 짚고 넘어가는 것이 좋을 것 같습니다.\n\n**스프링(Spring)** 은\n\n<div style=\"border:3px; border-style:dashed; color:grey; text-align:center\">\n  <br>자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크<br><br>\n</div>\n\n라는 정의를 가지고 있습니다.\n\n 얼핏 보면 감이 잘 안 잡히기 때문에 시간을 내셔서 제가 참조했던 '12bme'님의 포스트[^1] 를 자세히 읽어보시고 이해하시면 좋을 것 같습니다.\n\n 또한 공식 홈페이지에 따르면 Spring 개발진의 철학이 Rod Johnson이 2002년 10월에 출판한 'Expert One-on-One J2EE Design and Develpment'에 요약되어 있다고 하니 여유가 있다면 한번 읽어보면 깊은 이해를 하는데 도움이 될 것 같습니다.\n\n\n\n스프링 개발진의 **목표(Aim)** 로는,\n\n- 스프링은 사용하기 즐거워야 하고\n- 여러분의 애플리케이션 코드가 스프링 API들에 의존해서는 안되며\n- JDO, Toplink, Hibernate와 같은 훌륭한 O/R mapping solution들과 경쟁하지 않지만, 통합을 촉진하는 것 입니다.\n\n\n\n 또한 공식 홈페이지에서 **PROJECTS** 탭을 보면 스프링을 활용한 다양한 프로젝트들을 보실 수 있습니다.\n\n- Spring Boot\n- Spring Framework\n- Spring Cloud\n- Etc ...\n\n\n\n이처럼 스프링은 <u>어디서나 간단하고, 이식하기 쉬우며, 신속하고, 유연하게 JVM 기반의 시스템과 애플리케이션을 구축</u>할 수 있어  ==다양한 프로젝트들의 디자인이 되는 모듈==이라고 생각할 수 있습니다.\n\n\n\n[^1]: [스프링이란 무엇인가? - 12bme](https://12bme.tistory.com/157)\n\n\n\n### 2. 스프링 프레임워크란\n\n 위에서 언급한 12bme님의 포스트를 보셨으면 쉽게 이해하시겠지만, *엔터프라이즈 애플리케이션* 개발이 어려운 이유는 사회가 점점 복잡해지고, 시스템에서 다루어야 하는 업무의 복잡도와 의존도가 높아져 <u>개발의 복잡성이 증가</u>했기 때문입니다. 이에 사용자의 요구를 빠르고 안정적이면서 확장 가능한 형태로 유지가히 위한 로우레벨(Low level) 수준의 기술적 처리가 필요해졌고 우리는 스프링 프레임워크를 통해 쉽게 자바 엔터프라이즈 애플리케이션을 개발할 수 있게 되었습니다.\n\n\n\n![history](/img/history.png)\n\n 2004년 3월 Spring Framework 1.0 버전을 시작으로, 포스트 작성일 기준(2019년 1월) Spring Framework는 5.1.4 버전이 최신 버전입니다.\n\n\n\n 짧게 스프링(Spring)이라고 불리는 스프링 프레임워크는 **모든 플랫폼에서 자바 기반 엔터프라이즈 애플리케이션(JAVA EE) 개발을 편하게 해주는 종합적인 프로그래밍 및 구성 모델을 제공**합니다.\n\n\n\n 프레임워크의 바탕인 *스프링* 의 핵심 요소가 <u>애플리케이션 수준에서의 인프라 지원</u>이기 때문에 스프링 프레임워크에서는 개발 환경 구축에 필요한 하부구조(Infrastructure)를 포괄적으로 제공하고 처리하기 때문에 <u>개발자는 애플리케이션 개발(plumbing[^2])에 집중</u>할 수 있게 되었습니다.\n\n![plumbing](https://www.jbrothershi.com/wp-content/uploads/2018/10/SpringPlumbingLogo.png)\n\n 참고로 스프링 프레임워크는 대한민국 공공기관의 웹 서비스 개발 시 사용을 권장하고 있는 전자 정부 표준 프레임워크의 기반 기술입니다.\n\n[^2]: 원문에는 plumbing이라는 단어로 표현하는데, 프레임워크가 부품들 다 만들어 놓으면 개발자는 그것들을 조립하는 느낌이라 이런 단어를 사용한 것 같습니다.\n\n<br><br><br>\n","slug":"spring","published":1,"updated":"2019-02-02T07:21:33.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzf0008nf46zp1gvl1z","content":"<blockquote>\n<p>가장 좋은 문서는 <a href=\"http://spring.io\" target=\"_blank\" rel=\"noopener\">spring.io</a> 공식 홈페이지에서 제공하는 documents 입니다. 개인적으로 공부하면서 작성하는 문서라 틀린 부분이 있을 수 있으니, 반드시 공식 문서를 참조하시기 바랍니다.</p>\n<blockquote>\n<p><a href=\"https://spring.io\" target=\"_blank\" rel=\"noopener\">스프링 공식 홈페이지</a><br>\n<a href=\"https://github.com/spring-projects\" target=\"_blank\" rel=\"noopener\">소스코드</a><br>\n<a href=\"https://spring.io/guides\" target=\"_blank\" rel=\"noopener\">가이드</a></p>\n</blockquote>\n</blockquote>\n<p>📖<strong>목차</strong>📖</p>\n<ol>\n<li><a href=\"#1-%EC%8A%A4%ED%94%84%EB%A7%81\">스프링(Spring)</a></li>\n<li><a href=\"#2-%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EB%9E%80\">스프링 프레임워크란</a></li>\n</ol>\n<hr>\n<h3 id=\"1-스프링\"><a class=\"markdownIt-Anchor\" href=\"#1-스프링\"></a> 1. 스프링</h3>\n<p>공식 홈페이지 첫 화면을 보면 <u>Spring : the source for modern java</u> 라고 적혀있습니다.</p>\n<p>이 문장만으로는 이해하기 어려워서 구글에 검색을 해도 우리나라에서는 스프링하면 <u>스프링 프레임워크(Spring framework)</u>를 주로 이야기해서 스프링의 정의에 대해 다루는 자료는 그렇게 많지 않았습니다.</p>\n<p>그럼에도 스프링이란 무엇인지 명확하게 짚고 넘어가는 것이 좋을 것 같습니다.</p>\n<p><strong>스프링(Spring)</strong> 은</p>\n<div style=\"border:3px; border-style:dashed; color:grey; text-align:center\">\n  <br>자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크<br><br>\n</div>\n<p>라는 정의를 가지고 있습니다.</p>\n<p>얼핏 보면 감이 잘 안 잡히기 때문에 시간을 내셔서 제가 참조했던 '12bme’님의 포스트<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> 를 자세히 읽어보시고 이해하시면 좋을 것 같습니다.</p>\n<p>또한 공식 홈페이지에 따르면 Spring 개발진의 철학이 Rod Johnson이 2002년 10월에 출판한 'Expert One-on-One J2EE Design and Develpment’에 요약되어 있다고 하니 여유가 있다면 한번 읽어보면 깊은 이해를 하는데 도움이 될 것 같습니다.</p>\n<p>스프링 개발진의 <strong>목표(Aim)</strong> 로는,</p>\n<ul>\n<li>스프링은 사용하기 즐거워야 하고</li>\n<li>여러분의 애플리케이션 코드가 스프링 API들에 의존해서는 안되며</li>\n<li>JDO, Toplink, Hibernate와 같은 훌륭한 O/R mapping solution들과 경쟁하지 않지만, 통합을 촉진하는 것 입니다.</li>\n</ul>\n<p>또한 공식 홈페이지에서 <strong>PROJECTS</strong> 탭을 보면 스프링을 활용한 다양한 프로젝트들을 보실 수 있습니다.</p>\n<ul>\n<li>Spring Boot</li>\n<li>Spring Framework</li>\n<li>Spring Cloud</li>\n<li>Etc …</li>\n</ul>\n<p>이처럼 스프링은 <u>어디서나 간단하고, 이식하기 쉬우며, 신속하고, 유연하게 JVM 기반의 시스템과 애플리케이션을 구축</u>할 수 있어  <mark>다양한 프로젝트들의 디자인이 되는 모듈</mark>이라고 생각할 수 있습니다.</p>\n<h3 id=\"2-스프링-프레임워크란\"><a class=\"markdownIt-Anchor\" href=\"#2-스프링-프레임워크란\"></a> 2. 스프링 프레임워크란</h3>\n<p>위에서 언급한 12bme님의 포스트를 보셨으면 쉽게 이해하시겠지만, <em>엔터프라이즈 애플리케이션</em> 개발이 어려운 이유는 사회가 점점 복잡해지고, 시스템에서 다루어야 하는 업무의 복잡도와 의존도가 높아져 <u>개발의 복잡성이 증가</u>했기 때문입니다. 이에 사용자의 요구를 빠르고 안정적이면서 확장 가능한 형태로 유지가히 위한 로우레벨(Low level) 수준의 기술적 처리가 필요해졌고 우리는 스프링 프레임워크를 통해 쉽게 자바 엔터프라이즈 애플리케이션을 개발할 수 있게 되었습니다.</p>\n<p><img src=\"/img/history.png\" alt=\"history\"></p>\n<p>2004년 3월 Spring Framework 1.0 버전을 시작으로, 포스트 작성일 기준(2019년 1월) Spring Framework는 5.1.4 버전이 최신 버전입니다.</p>\n<p>짧게 스프링(Spring)이라고 불리는 스프링 프레임워크는 <strong>모든 플랫폼에서 자바 기반 엔터프라이즈 애플리케이션(JAVA EE) 개발을 편하게 해주는 종합적인 프로그래밍 및 구성 모델을 제공</strong>합니다.</p>\n<p>프레임워크의 바탕인 <em>스프링</em> 의 핵심 요소가 <u>애플리케이션 수준에서의 인프라 지원</u>이기 때문에 스프링 프레임워크에서는 개발 환경 구축에 필요한 하부구조(Infrastructure)를 포괄적으로 제공하고 처리하기 때문에 <u>개발자는 애플리케이션 개발(plumbing<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>)에 집중</u>할 수 있게 되었습니다.</p>\n<p><img src=\"https://www.jbrothershi.com/wp-content/uploads/2018/10/SpringPlumbingLogo.png\" alt=\"plumbing\"></p>\n<p>참고로 스프링 프레임워크는 대한민국 공공기관의 웹 서비스 개발 시 사용을 권장하고 있는 전자 정부 표준 프레임워크의 기반 기술입니다.</p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://12bme.tistory.com/157\" target=\"_blank\" rel=\"noopener\">스프링이란 무엇인가? - 12bme</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>원문에는 plumbing이라는 단어로 표현하는데, 프레임워크가 부품들 다 만들어 놓으면 개발자는 그것들을 조립하는 느낌이라 이런 단어를 사용한 것 같습니다. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<blockquote>\n<p>가장 좋은 문서는 <a href=\"http://spring.io\" target=\"_blank\" rel=\"noopener\">spring.io</a> 공식 홈페이지에서 제공하는 documents 입니다. 개인적으로 공부하면서 작성하는 문서라 틀린 부분이 있을 수 있으니, 반드시 공식 문서를 참조하시기 바랍니다.</p>\n<blockquote>\n<p><a href=\"https://spring.io\" target=\"_blank\" rel=\"noopener\">스프링 공식 홈페이지</a><br>\n<a href=\"https://github.com/spring-projects\" target=\"_blank\" rel=\"noopener\">소스코드</a><br>\n<a href=\"https://spring.io/guides\" target=\"_blank\" rel=\"noopener\">가이드</a></p>\n</blockquote>\n</blockquote>\n<p>📖<strong>목차</strong>📖</p>\n<ol>\n<li><a href=\"#1-%EC%8A%A4%ED%94%84%EB%A7%81\">스프링(Spring)</a></li>\n<li><a href=\"#2-%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EB%9E%80\">스프링 프레임워크란</a></li>\n</ol>\n<hr>\n<h3 id=\"1-스프링\"><a class=\"markdownIt-Anchor\" href=\"#1-스프링\"></a> 1. 스프링</h3>\n<p>공식 홈페이지 첫 화면을 보면 <u>Spring : the source for modern java</u> 라고 적혀있습니다.</p>\n<p>이 문장만으로는 이해하기 어려워서 구글에 검색을 해도 우리나라에서는 스프링하면 <u>스프링 프레임워크(Spring framework)</u>를 주로 이야기해서 스프링의 정의에 대해 다루는 자료는 그렇게 많지 않았습니다.</p>\n<p>그럼에도 스프링이란 무엇인지 명확하게 짚고 넘어가는 것이 좋을 것 같습니다.</p>\n<p><strong>스프링(Spring)</strong> 은</p>\n<div style=\"border:3px; border-style:dashed; color:grey; text-align:center\">\n  <br>자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크<br><br>\n</div>\n<p>라는 정의를 가지고 있습니다.</p>\n<p>얼핏 보면 감이 잘 안 잡히기 때문에 시간을 내셔서 제가 참조했던 '12bme’님의 포스트<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> 를 자세히 읽어보시고 이해하시면 좋을 것 같습니다.</p>\n<p>또한 공식 홈페이지에 따르면 Spring 개발진의 철학이 Rod Johnson이 2002년 10월에 출판한 'Expert One-on-One J2EE Design and Develpment’에 요약되어 있다고 하니 여유가 있다면 한번 읽어보면 깊은 이해를 하는데 도움이 될 것 같습니다.</p>\n<p>스프링 개발진의 <strong>목표(Aim)</strong> 로는,</p>\n<ul>\n<li>스프링은 사용하기 즐거워야 하고</li>\n<li>여러분의 애플리케이션 코드가 스프링 API들에 의존해서는 안되며</li>\n<li>JDO, Toplink, Hibernate와 같은 훌륭한 O/R mapping solution들과 경쟁하지 않지만, 통합을 촉진하는 것 입니다.</li>\n</ul>\n<p>또한 공식 홈페이지에서 <strong>PROJECTS</strong> 탭을 보면 스프링을 활용한 다양한 프로젝트들을 보실 수 있습니다.</p>\n<ul>\n<li>Spring Boot</li>\n<li>Spring Framework</li>\n<li>Spring Cloud</li>\n<li>Etc …</li>\n</ul>\n<p>이처럼 스프링은 <u>어디서나 간단하고, 이식하기 쉬우며, 신속하고, 유연하게 JVM 기반의 시스템과 애플리케이션을 구축</u>할 수 있어  <mark>다양한 프로젝트들의 디자인이 되는 모듈</mark>이라고 생각할 수 있습니다.</p>\n<h3 id=\"2-스프링-프레임워크란\"><a class=\"markdownIt-Anchor\" href=\"#2-스프링-프레임워크란\"></a> 2. 스프링 프레임워크란</h3>\n<p>위에서 언급한 12bme님의 포스트를 보셨으면 쉽게 이해하시겠지만, <em>엔터프라이즈 애플리케이션</em> 개발이 어려운 이유는 사회가 점점 복잡해지고, 시스템에서 다루어야 하는 업무의 복잡도와 의존도가 높아져 <u>개발의 복잡성이 증가</u>했기 때문입니다. 이에 사용자의 요구를 빠르고 안정적이면서 확장 가능한 형태로 유지가히 위한 로우레벨(Low level) 수준의 기술적 처리가 필요해졌고 우리는 스프링 프레임워크를 통해 쉽게 자바 엔터프라이즈 애플리케이션을 개발할 수 있게 되었습니다.</p>\n<p><img src=\"/img/history.png\" alt=\"history\"></p>\n<p>2004년 3월 Spring Framework 1.0 버전을 시작으로, 포스트 작성일 기준(2019년 1월) Spring Framework는 5.1.4 버전이 최신 버전입니다.</p>\n<p>짧게 스프링(Spring)이라고 불리는 스프링 프레임워크는 <strong>모든 플랫폼에서 자바 기반 엔터프라이즈 애플리케이션(JAVA EE) 개발을 편하게 해주는 종합적인 프로그래밍 및 구성 모델을 제공</strong>합니다.</p>\n<p>프레임워크의 바탕인 <em>스프링</em> 의 핵심 요소가 <u>애플리케이션 수준에서의 인프라 지원</u>이기 때문에 스프링 프레임워크에서는 개발 환경 구축에 필요한 하부구조(Infrastructure)를 포괄적으로 제공하고 처리하기 때문에 <u>개발자는 애플리케이션 개발(plumbing<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>)에 집중</u>할 수 있게 되었습니다.</p>\n<p><img src=\"https://www.jbrothershi.com/wp-content/uploads/2018/10/SpringPlumbingLogo.png\" alt=\"plumbing\"></p>\n<p>참고로 스프링 프레임워크는 대한민국 공공기관의 웹 서비스 개발 시 사용을 권장하고 있는 전자 정부 표준 프레임워크의 기반 기술입니다.</p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://12bme.tistory.com/157\" target=\"_blank\" rel=\"noopener\">스프링이란 무엇인가? - 12bme</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>원문에는 plumbing이라는 단어로 표현하는데, 프레임워크가 부품들 다 만들어 놓으면 개발자는 그것들을 조립하는 느낌이라 이런 단어를 사용한 것 같습니다. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"},{"title":"스프링 프레임워크 핵심 개념","author":{"nick":"TAEJIN","link":null},"date":"2019-02-02T06:16:10.000Z","subtitle":"스프링 프레임워크의 핵심 기술","cover":"https://spring.io/img/spring-by-pivotal.png","_content":"\n### Reference\n\n[Spring의 시작, 프레임워크의 구성요소와 동작원리](https://asfirstalways.tistory.com/334)\n[스프링 프레임워크 핵심](https://scroogy.atlassian.net/wiki/spaces/SPRING/pages/1114310)\n\n**POJO**\n[스프링 프레임워크 1 - POJO에 대하여](https://limmmee.tistory.com/8)\n[POJO vs JavaBeans](https://www.geeksforgeeks.org/pojo-vs-java-beans/)\n[Understanding : POJO](https://spring.io/understanding/POJO)\n\n**IoC/DI**\n[스프링 프레임워크 2 - 컨테이너와 IoC](https://limmmee.tistory.com/13?category=654011)\n[Spring 프레임워크 소개와 IoC 및 Spring IoC의 개념](http://wiki.javajigi.net/pages/viewpage.action?pageId=3664)\n[세 가지 DI 컨테이너로 향하는 저녁 산책](www.nextree.co.kr/p11247/)\n[스프링이 도대체 뭐란 말인가?](http://springmvc.egloos.com/487497)\n\n\n\n------\n\n:book: **목차** :book:\n\n- [POJO](#pojo)\n- [IoC / DI](#ioc-/-di)\n- [AOP](#aop)\n- [PSA](#psa)\n\n\n\n## 핵심 개념들\n\n- 스프링 프레임워크를 공부하면서 자주 언급되고 매우 중요하다고 생각하는 용어들을 정리했습니다\n- 아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.\n\n![spring triangle](https://dhsim86.github.io/static/assets/img/blog/web/2017-11-18-toby_spring_08_what_is_spring//00.png)\n\n------\n\n\n\n### POJO\n\n이해가 어려우신 분들은 간략히,\n\n- 스프링 프레임워크를 사용하면 **POJO로 애플리케이션을 만들고 엔터프라이즈 서비스를 비침투적으로 POJO에 적용할 수 있다**\n- **모든 JavaBeans는 POJO 이지만, 모든 POJO는 JavaBeans가 아니다**\n\n![pojo&javabean](https://cdncontribute.geeksforgeeks.org/wp-content/uploads/pojo.jpg)\n\n이 정도만 숙지하고 넘어가셔도 상관 없을 것 같습니다.\n\n\n\n:heavy_check_mark: **Plain Old Java Object** : (직역) 평범한 옛날 자바 객체\n\n더 자세한 내용은 다른 포스트에서 다루겠지만, 간략히 스프링 공식 홈페이지에서는 POJO를 다음과 같이 소개합니다.\n\n> By using plain old Java objects, your code is much more simplified, which lends to better testing, flexibility, and ability to change technical decisions at future stages based on knowledge and shifting requirements.\n\nPOJO를 사용함으로써,\n\n- 코드가 간결해져서 테스트하기 편해지고 (비즈니스 로직과 특정 환결/로우 레벨 종속적인 코드를 분리함)\n  쉽게 말해 인터페이스, 상속이 없는 것\n- 유연해서 객체지향적 설계의 자유료운 사용이 가능\n\n\n\n**POJO 기반의 프레임워크 == 스프링 프레임워크**\n\n많은 POJO 프레임워크가 있고 하이버네이트와 스프링이 대표적이라고 할 수 있습니다. (이 둘의 차이점은 굳이 자세히 알아보지는 않겠습니다.) 스프링 프레임워크가 <u>많은 POJO 프레임워크 제품 중 하나</u>라는 정도로 알고 넘어가셔도 좋습니다.\n\n\n\n**진정한 POJO 프로그래밍**\n\n<u>자바의 객체지향적인 특징을 살려 비즈니스 로직에 충실한 개발이 가능하도록 하는 것이 진정한 POJO 프로그래밍</u>이라고 할 수 있습니다. 마치 자바를 처음 배울 때 흔히 하는 실수로, 개발은 자바로 하지만 실제로는 C 언어를 배우며 익숙해진 절차지향 방식으로 구현하는 것을 생각하시면 되겠습니다. 따라서 POJO 프레임워크 제품을 사용한다고 해서 자동으로 POJO 형식의 개발을 하고 있다고 할 수 없음을 인지하고 계셔야 합니다.\n\n- 객체지향적인 설계원칙에 충실하도록 개발되어 있는지\n- 테스트 코드 개발의 용이성이나 테스트 코드를 잘 작성했는지\n\n를 잘 확인하시면서 POJO 프로그래밍의 장점을 잘 살려 스프링 프레임워크의 활용도를 극대화하려고 노력해야 할 것 같습니다.\n\n\n\n------\n\n\n\n### IoC / DI\n\n개인적으로 재밌었던 표현이라 그대로 참조한 블로그[스프링이 도대체 뭐란 말인가?](http://springmvc.egloos.com/487497)(꼭 읽어보면 좋을 것 같습니다)의 표현을 그대로 인용하자면, 간략하게 이 둘을 **\"대신 해줌(IoC)\"** 과 **\"미리 찜해 놓음(DI)\"** 이라고 설명하였습니다.\n **정신 나간듯 언제 사용될 지도 모르는 코드를 쳐대면서(IoC) 동시에 사용하고 있는 코드가 뭔지도 모르면서 일단 갖다 쓰는(DI) 획기적이고 진보적인 프로그래밍 작성 방식** 으로 IoC/DI의 개념을 표현하였고 어려우시면 이 정도로 이해하고 일단 넘어가시는 것도 좋을 것 같습니다.\n\n\n\n![ioc](https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F252FCF3B5231689B17B553)\n\n:heavy_check_mark: **Inversion of Control** : 제어의 역전\n\n- **제어권(Control)**\n  : 자바 객체의 생성, 생명주기 관리, 객체간의 의존관계를 연결시키는 등의 행위에 대한 권한\n\n\n\n- 객체에 대한 제어 권한이 바뀌는 것 즉, 제어 권한을 다른 대상에게 위임하는 것이라는 의미 (개발자 -> 컨테이너)\n- 프레임워크에서 개발자는 필요한 부분을 개발해서 \"조립\"하는 방식을 취하는데, 이렇게 조립된 코드의 최종 호출은 <u>개발자에 의해서 제어되는 것이 아니라 프레임워크 내부 동작 원리에 따라 이루어짐</u>. 이를 **제어의 역전** 이라고 표현\n- 스프링 프레임워크에서 지원하는 IoC Container는 POJO의 생명주기를 관리, 생성된 인스턴트들에게 추가적인 기능들을 제공\n  cf) 라이브러리 vs 프레임워크 --> IoC의 개념이 적용되었나의 차이\n\n\n\n:heavy_check_mark: **Dependency Injection** : 의존성 주입\n\n- **의존성(Dependency)**\n  : 현재 객체가 다른 객체와 상호작용(참조)하고 있다면, 다른 객체들을 현재 객체의 의존 이라고 표현\n\n\n\n- **DI는 스프링 프레임워크에서 지원하는 IoC의 형태**\n\n- DI는 <u>클래스 사이의 의존관계를 빈 설정 정보를 바탕으로 컨테이너가 자동적으로 연결</u>\n\n  예시)\n\n  ***Ioc/DI 가 적용되지 않은 경우***\n\n![instance](http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-02.png)\n\n```java\npackage kr.co.study;\n\npublic class Foo\n{\n    private Bar bar;\n\n    public Foo(){\n        bar = new SubBar();\t//Bar 인터페이스를 구현하는 구체적인 클래스 SubBar로 초기화\n    }\n}\n```\n\n\n\n​\t***Ioc/DI 가 적용되지 않은 경우***\n\n![inject](http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-03.png)\n\n```html\n//Container\n<beans>\n\t<bean id=\"bar\" class=\"kr.co.study.SubBar\">\n    <bean id=\"foo\" class=\"kr.co.study.Foo\">\n        <property name=\"bar\" ref=\"bar\"/>\t\t<!-- 사용할 객체들을 컨테이너에 등록 -->\n    </bean>\n</beans>\n```\n```java\n//application code\npackage kr.co.study;\n\npublic class Foo\n{\n    private Bar bar;\n\n    public void setBar(Bar bar){\t//사용할 객체를 매겨변수로 받아와 동적으로 의존관계를 설정\n        this.bar = bar;\t\t\t\t//Bar 인터페이스를 구현하는 구체적인 클래스 이름이 등장하지 않음\n    }\n}\n```\n\n\n\n- 마틴 파울러가 그의 저서인 'Inversion of Control Containers and the Dependency Injection pattern'에서 세가지 DI 패턴을 제시\n  - setter() 메소드를 이용한 의존성 삽입(Setter Injection)\n  - 생성자를 이용한 의존성 삽입 (Constructor Injection)\n  - 초기화 인터페이스를 이용한 의존성 삽입(Interface Injection)\n\n- 스프링 프레임워크에서의 DI 패턴\n  1. XML을 통한 의존성 주입\n     - 생성자를 통한 의존성 주입 : <constructor-arg> 태그와 ref 속성 이용\n     - 속성을 통한 의존성 주입 : <property> 태그를 사용, name 속성값이 호출하고자 하는 메소드의 이름\n  2. Annotation을 통한 의존성 주입\n     **@Autowired** 라는 어노테이션을 통해 의존성 주입. 비슷한 역할로 **@Resource** 어노테이션도 존재.\n     둘의 차이점은 bean을 탐색하는 우선순위의 기준\n\n------\n\n\n\n### AOP\n\n- AOP의 핵심은 **관심 분리(Separation of Concerns)** 로써, <u>비즈니스 메소드를 개발할 때, 핵심 비즈니스 로직과 공통 로직을 분리함으로써 응집도가 높게 개발할 수 있도록 지원하는 것</u> 입니다.\n\n  ![aop](https://t1.daumcdn.net/cfile/tistory/185DF4334FA8A1FD01)\n\n\n\n:heavy_check_mark: **Aspect Oriented Programming** : 관점 지향 프로그래밍\n\n- 핵심적인 비즈니스 로직과 관련이 없으나 모듈성을 높일 목적으로 여러 곳에서 공통적으로 쓰이는 기능들을 분리( separating cross-cutting concerns)하여 개발하고 실행 시에 서로 조합\n- Logging, Security, Transaction 등을 aspect라는 특별한 객체로 모듈화, weaving이라는 작업을 통해 모듈화한 코드를 핵심 기능에 넣음\n\n\n\n\n\n------\n\n\n\n### PSA\n\n### PSA\n\n:heavy_check_mark: **Potable Service Abstraction** : (이식 가능한)일관성 있는 서비스 추상화\n\n- POJO로 개발된 코드는 특정 환경이나 구현 방식에 종속적이지 않아야 함\n  (특정 환경에 종속적이지 않다는 게 그런 기술을 사용하지 않는다는 뜻은 아님)\n- 스프링은 완성도가 높은 라이브러리와 연결할 수 있는 인터페이스를 제공\n\n\n------\n\n\n\n\n<br><br><br>\n","source":"_posts/20190202-spring-keywords.md","raw":"---\ntitle: 스프링 프레임워크 핵심 개념\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - WEB\n  - SPRING\ntags:\n  - SPRING\ndate: 2019-02-02 15:16:10\nsubtitle: 스프링 프레임워크의 핵심 기술\ncover: https://spring.io/img/spring-by-pivotal.png\n\n\n---\n\n### Reference\n\n[Spring의 시작, 프레임워크의 구성요소와 동작원리](https://asfirstalways.tistory.com/334)\n[스프링 프레임워크 핵심](https://scroogy.atlassian.net/wiki/spaces/SPRING/pages/1114310)\n\n**POJO**\n[스프링 프레임워크 1 - POJO에 대하여](https://limmmee.tistory.com/8)\n[POJO vs JavaBeans](https://www.geeksforgeeks.org/pojo-vs-java-beans/)\n[Understanding : POJO](https://spring.io/understanding/POJO)\n\n**IoC/DI**\n[스프링 프레임워크 2 - 컨테이너와 IoC](https://limmmee.tistory.com/13?category=654011)\n[Spring 프레임워크 소개와 IoC 및 Spring IoC의 개념](http://wiki.javajigi.net/pages/viewpage.action?pageId=3664)\n[세 가지 DI 컨테이너로 향하는 저녁 산책](www.nextree.co.kr/p11247/)\n[스프링이 도대체 뭐란 말인가?](http://springmvc.egloos.com/487497)\n\n\n\n------\n\n:book: **목차** :book:\n\n- [POJO](#pojo)\n- [IoC / DI](#ioc-/-di)\n- [AOP](#aop)\n- [PSA](#psa)\n\n\n\n## 핵심 개념들\n\n- 스프링 프레임워크를 공부하면서 자주 언급되고 매우 중요하다고 생각하는 용어들을 정리했습니다\n- 아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.\n\n![spring triangle](https://dhsim86.github.io/static/assets/img/blog/web/2017-11-18-toby_spring_08_what_is_spring//00.png)\n\n------\n\n\n\n### POJO\n\n이해가 어려우신 분들은 간략히,\n\n- 스프링 프레임워크를 사용하면 **POJO로 애플리케이션을 만들고 엔터프라이즈 서비스를 비침투적으로 POJO에 적용할 수 있다**\n- **모든 JavaBeans는 POJO 이지만, 모든 POJO는 JavaBeans가 아니다**\n\n![pojo&javabean](https://cdncontribute.geeksforgeeks.org/wp-content/uploads/pojo.jpg)\n\n이 정도만 숙지하고 넘어가셔도 상관 없을 것 같습니다.\n\n\n\n:heavy_check_mark: **Plain Old Java Object** : (직역) 평범한 옛날 자바 객체\n\n더 자세한 내용은 다른 포스트에서 다루겠지만, 간략히 스프링 공식 홈페이지에서는 POJO를 다음과 같이 소개합니다.\n\n> By using plain old Java objects, your code is much more simplified, which lends to better testing, flexibility, and ability to change technical decisions at future stages based on knowledge and shifting requirements.\n\nPOJO를 사용함으로써,\n\n- 코드가 간결해져서 테스트하기 편해지고 (비즈니스 로직과 특정 환결/로우 레벨 종속적인 코드를 분리함)\n  쉽게 말해 인터페이스, 상속이 없는 것\n- 유연해서 객체지향적 설계의 자유료운 사용이 가능\n\n\n\n**POJO 기반의 프레임워크 == 스프링 프레임워크**\n\n많은 POJO 프레임워크가 있고 하이버네이트와 스프링이 대표적이라고 할 수 있습니다. (이 둘의 차이점은 굳이 자세히 알아보지는 않겠습니다.) 스프링 프레임워크가 <u>많은 POJO 프레임워크 제품 중 하나</u>라는 정도로 알고 넘어가셔도 좋습니다.\n\n\n\n**진정한 POJO 프로그래밍**\n\n<u>자바의 객체지향적인 특징을 살려 비즈니스 로직에 충실한 개발이 가능하도록 하는 것이 진정한 POJO 프로그래밍</u>이라고 할 수 있습니다. 마치 자바를 처음 배울 때 흔히 하는 실수로, 개발은 자바로 하지만 실제로는 C 언어를 배우며 익숙해진 절차지향 방식으로 구현하는 것을 생각하시면 되겠습니다. 따라서 POJO 프레임워크 제품을 사용한다고 해서 자동으로 POJO 형식의 개발을 하고 있다고 할 수 없음을 인지하고 계셔야 합니다.\n\n- 객체지향적인 설계원칙에 충실하도록 개발되어 있는지\n- 테스트 코드 개발의 용이성이나 테스트 코드를 잘 작성했는지\n\n를 잘 확인하시면서 POJO 프로그래밍의 장점을 잘 살려 스프링 프레임워크의 활용도를 극대화하려고 노력해야 할 것 같습니다.\n\n\n\n------\n\n\n\n### IoC / DI\n\n개인적으로 재밌었던 표현이라 그대로 참조한 블로그[스프링이 도대체 뭐란 말인가?](http://springmvc.egloos.com/487497)(꼭 읽어보면 좋을 것 같습니다)의 표현을 그대로 인용하자면, 간략하게 이 둘을 **\"대신 해줌(IoC)\"** 과 **\"미리 찜해 놓음(DI)\"** 이라고 설명하였습니다.\n **정신 나간듯 언제 사용될 지도 모르는 코드를 쳐대면서(IoC) 동시에 사용하고 있는 코드가 뭔지도 모르면서 일단 갖다 쓰는(DI) 획기적이고 진보적인 프로그래밍 작성 방식** 으로 IoC/DI의 개념을 표현하였고 어려우시면 이 정도로 이해하고 일단 넘어가시는 것도 좋을 것 같습니다.\n\n\n\n![ioc](https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F252FCF3B5231689B17B553)\n\n:heavy_check_mark: **Inversion of Control** : 제어의 역전\n\n- **제어권(Control)**\n  : 자바 객체의 생성, 생명주기 관리, 객체간의 의존관계를 연결시키는 등의 행위에 대한 권한\n\n\n\n- 객체에 대한 제어 권한이 바뀌는 것 즉, 제어 권한을 다른 대상에게 위임하는 것이라는 의미 (개발자 -> 컨테이너)\n- 프레임워크에서 개발자는 필요한 부분을 개발해서 \"조립\"하는 방식을 취하는데, 이렇게 조립된 코드의 최종 호출은 <u>개발자에 의해서 제어되는 것이 아니라 프레임워크 내부 동작 원리에 따라 이루어짐</u>. 이를 **제어의 역전** 이라고 표현\n- 스프링 프레임워크에서 지원하는 IoC Container는 POJO의 생명주기를 관리, 생성된 인스턴트들에게 추가적인 기능들을 제공\n  cf) 라이브러리 vs 프레임워크 --> IoC의 개념이 적용되었나의 차이\n\n\n\n:heavy_check_mark: **Dependency Injection** : 의존성 주입\n\n- **의존성(Dependency)**\n  : 현재 객체가 다른 객체와 상호작용(참조)하고 있다면, 다른 객체들을 현재 객체의 의존 이라고 표현\n\n\n\n- **DI는 스프링 프레임워크에서 지원하는 IoC의 형태**\n\n- DI는 <u>클래스 사이의 의존관계를 빈 설정 정보를 바탕으로 컨테이너가 자동적으로 연결</u>\n\n  예시)\n\n  ***Ioc/DI 가 적용되지 않은 경우***\n\n![instance](http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-02.png)\n\n```java\npackage kr.co.study;\n\npublic class Foo\n{\n    private Bar bar;\n\n    public Foo(){\n        bar = new SubBar();\t//Bar 인터페이스를 구현하는 구체적인 클래스 SubBar로 초기화\n    }\n}\n```\n\n\n\n​\t***Ioc/DI 가 적용되지 않은 경우***\n\n![inject](http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-03.png)\n\n```html\n//Container\n<beans>\n\t<bean id=\"bar\" class=\"kr.co.study.SubBar\">\n    <bean id=\"foo\" class=\"kr.co.study.Foo\">\n        <property name=\"bar\" ref=\"bar\"/>\t\t<!-- 사용할 객체들을 컨테이너에 등록 -->\n    </bean>\n</beans>\n```\n```java\n//application code\npackage kr.co.study;\n\npublic class Foo\n{\n    private Bar bar;\n\n    public void setBar(Bar bar){\t//사용할 객체를 매겨변수로 받아와 동적으로 의존관계를 설정\n        this.bar = bar;\t\t\t\t//Bar 인터페이스를 구현하는 구체적인 클래스 이름이 등장하지 않음\n    }\n}\n```\n\n\n\n- 마틴 파울러가 그의 저서인 'Inversion of Control Containers and the Dependency Injection pattern'에서 세가지 DI 패턴을 제시\n  - setter() 메소드를 이용한 의존성 삽입(Setter Injection)\n  - 생성자를 이용한 의존성 삽입 (Constructor Injection)\n  - 초기화 인터페이스를 이용한 의존성 삽입(Interface Injection)\n\n- 스프링 프레임워크에서의 DI 패턴\n  1. XML을 통한 의존성 주입\n     - 생성자를 통한 의존성 주입 : <constructor-arg> 태그와 ref 속성 이용\n     - 속성을 통한 의존성 주입 : <property> 태그를 사용, name 속성값이 호출하고자 하는 메소드의 이름\n  2. Annotation을 통한 의존성 주입\n     **@Autowired** 라는 어노테이션을 통해 의존성 주입. 비슷한 역할로 **@Resource** 어노테이션도 존재.\n     둘의 차이점은 bean을 탐색하는 우선순위의 기준\n\n------\n\n\n\n### AOP\n\n- AOP의 핵심은 **관심 분리(Separation of Concerns)** 로써, <u>비즈니스 메소드를 개발할 때, 핵심 비즈니스 로직과 공통 로직을 분리함으로써 응집도가 높게 개발할 수 있도록 지원하는 것</u> 입니다.\n\n  ![aop](https://t1.daumcdn.net/cfile/tistory/185DF4334FA8A1FD01)\n\n\n\n:heavy_check_mark: **Aspect Oriented Programming** : 관점 지향 프로그래밍\n\n- 핵심적인 비즈니스 로직과 관련이 없으나 모듈성을 높일 목적으로 여러 곳에서 공통적으로 쓰이는 기능들을 분리( separating cross-cutting concerns)하여 개발하고 실행 시에 서로 조합\n- Logging, Security, Transaction 등을 aspect라는 특별한 객체로 모듈화, weaving이라는 작업을 통해 모듈화한 코드를 핵심 기능에 넣음\n\n\n\n\n\n------\n\n\n\n### PSA\n\n### PSA\n\n:heavy_check_mark: **Potable Service Abstraction** : (이식 가능한)일관성 있는 서비스 추상화\n\n- POJO로 개발된 코드는 특정 환경이나 구현 방식에 종속적이지 않아야 함\n  (특정 환경에 종속적이지 않다는 게 그런 기술을 사용하지 않는다는 뜻은 아님)\n- 스프링은 완성도가 높은 라이브러리와 연결할 수 있는 인터페이스를 제공\n\n\n------\n\n\n\n\n<br><br><br>\n","slug":"spring-keywords","published":1,"updated":"2019-02-04T13:11:44.273Z","_id":"cjrp4uzzg0009nf463i8p1hwg","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h3>\n<p><a href=\"https://asfirstalways.tistory.com/334\" target=\"_blank\" rel=\"noopener\">Spring의 시작, 프레임워크의 구성요소와 동작원리</a><br>\n<a href=\"https://scroogy.atlassian.net/wiki/spaces/SPRING/pages/1114310\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 핵심</a></p>\n<p><strong>POJO</strong><br>\n<a href=\"https://limmmee.tistory.com/8\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 1 - POJO에 대하여</a><br>\n<a href=\"https://www.geeksforgeeks.org/pojo-vs-java-beans/\" target=\"_blank\" rel=\"noopener\">POJO vs JavaBeans</a><br>\n<a href=\"https://spring.io/understanding/POJO\" target=\"_blank\" rel=\"noopener\">Understanding : POJO</a></p>\n<p><strong>IoC/DI</strong><br>\n<a href=\"https://limmmee.tistory.com/13?category=654011\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 2 - 컨테이너와 IoC</a><br>\n<a href=\"http://wiki.javajigi.net/pages/viewpage.action?pageId=3664\" target=\"_blank\" rel=\"noopener\">Spring 프레임워크 소개와 IoC 및 Spring IoC의 개념</a><br>\n<a href=\"www.nextree.co.kr/p11247/\">세 가지 DI 컨테이너로 향하는 저녁 산책</a><br>\n<a href=\"http://springmvc.egloos.com/487497\" target=\"_blank\" rel=\"noopener\">스프링이 도대체 뭐란 말인가?</a></p>\n<hr>\n<p>📖 <strong>목차</strong> 📖</p>\n<ul>\n<li><a href=\"#pojo\">POJO</a></li>\n<li><a href=\"#ioc-/-di\">IoC / DI</a></li>\n<li><a href=\"#aop\">AOP</a></li>\n<li><a href=\"#psa\">PSA</a></li>\n</ul>\n<h2 id=\"핵심-개념들\"><a class=\"markdownIt-Anchor\" href=\"#핵심-개념들\"></a> 핵심 개념들</h2>\n<ul>\n<li>스프링 프레임워크를 공부하면서 자주 언급되고 매우 중요하다고 생각하는 용어들을 정리했습니다</li>\n<li>아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.</li>\n</ul>\n<p><img src=\"https://dhsim86.github.io/static/assets/img/blog/web/2017-11-18-toby_spring_08_what_is_spring//00.png\" alt=\"spring triangle\"></p>\n<hr>\n<h3 id=\"pojo\"><a class=\"markdownIt-Anchor\" href=\"#pojo\"></a> POJO</h3>\n<p>이해가 어려우신 분들은 간략히,</p>\n<ul>\n<li>스프링 프레임워크를 사용하면 <strong>POJO로 애플리케이션을 만들고 엔터프라이즈 서비스를 비침투적으로 POJO에 적용할 수 있다</strong></li>\n<li><strong>모든 JavaBeans는 POJO 이지만, 모든 POJO는 JavaBeans가 아니다</strong></li>\n</ul>\n<p><img src=\"https://cdncontribute.geeksforgeeks.org/wp-content/uploads/pojo.jpg\" alt=\"pojo&amp;javabean\"></p>\n<p>이 정도만 숙지하고 넘어가셔도 상관 없을 것 같습니다.</p>\n<p>✔️ <strong>Plain Old Java Object</strong> : (직역) 평범한 옛날 자바 객체</p>\n<p>더 자세한 내용은 다른 포스트에서 다루겠지만, 간략히 스프링 공식 홈페이지에서는 POJO를 다음과 같이 소개합니다.</p>\n<blockquote>\n<p>By using plain old Java objects, your code is much more simplified, which lends to better testing, flexibility, and ability to change technical decisions at future stages based on knowledge and shifting requirements.</p>\n</blockquote>\n<p>POJO를 사용함으로써,</p>\n<ul>\n<li>코드가 간결해져서 테스트하기 편해지고 (비즈니스 로직과 특정 환결/로우 레벨 종속적인 코드를 분리함)<br>\n쉽게 말해 인터페이스, 상속이 없는 것</li>\n<li>유연해서 객체지향적 설계의 자유료운 사용이 가능</li>\n</ul>\n<p><strong>POJO 기반의 프레임워크 == 스프링 프레임워크</strong></p>\n<p>많은 POJO 프레임워크가 있고 하이버네이트와 스프링이 대표적이라고 할 수 있습니다. (이 둘의 차이점은 굳이 자세히 알아보지는 않겠습니다.) 스프링 프레임워크가 <u>많은 POJO 프레임워크 제품 중 하나</u>라는 정도로 알고 넘어가셔도 좋습니다.</p>\n<p><strong>진정한 POJO 프로그래밍</strong></p>\n<p><u>자바의 객체지향적인 특징을 살려 비즈니스 로직에 충실한 개발이 가능하도록 하는 것이 진정한 POJO 프로그래밍</u>이라고 할 수 있습니다. 마치 자바를 처음 배울 때 흔히 하는 실수로, 개발은 자바로 하지만 실제로는 C 언어를 배우며 익숙해진 절차지향 방식으로 구현하는 것을 생각하시면 되겠습니다. 따라서 POJO 프레임워크 제품을 사용한다고 해서 자동으로 POJO 형식의 개발을 하고 있다고 할 수 없음을 인지하고 계셔야 합니다.</p>\n<ul>\n<li>객체지향적인 설계원칙에 충실하도록 개발되어 있는지</li>\n<li>테스트 코드 개발의 용이성이나 테스트 코드를 잘 작성했는지</li>\n</ul>\n<p>를 잘 확인하시면서 POJO 프로그래밍의 장점을 잘 살려 스프링 프레임워크의 활용도를 극대화하려고 노력해야 할 것 같습니다.</p>\n<hr>\n<h3 id=\"ioc-di\"><a class=\"markdownIt-Anchor\" href=\"#ioc-di\"></a> IoC / DI</h3>\n<p>개인적으로 재밌었던 표현이라 그대로 참조한 블로그<a href=\"http://springmvc.egloos.com/487497\" target=\"_blank\" rel=\"noopener\">스프링이 도대체 뭐란 말인가?</a>(꼭 읽어보면 좋을 것 같습니다)의 표현을 그대로 인용하자면, 간략하게 이 둘을 <strong>“대신 해줌(IoC)”</strong> 과 <strong>“미리 찜해 놓음(DI)”</strong> 이라고 설명하였습니다.<br>\n<strong>정신 나간듯 언제 사용될 지도 모르는 코드를 쳐대면서(IoC) 동시에 사용하고 있는 코드가 뭔지도 모르면서 일단 갖다 쓰는(DI) 획기적이고 진보적인 프로그래밍 작성 방식</strong> 으로 IoC/DI의 개념을 표현하였고 어려우시면 이 정도로 이해하고 일단 넘어가시는 것도 좋을 것 같습니다.</p>\n<p><img src=\"https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F252FCF3B5231689B17B553\" alt=\"ioc\"></p>\n<p>✔️ <strong>Inversion of Control</strong> : 제어의 역전</p>\n<ul>\n<li>\n<dl>\n<dt><strong>제어권(Control)</strong></dt>\n<dd>자바 객체의 생성, 생명주기 관리, 객체간의 의존관계를 연결시키는 등의 행위에 대한 권한</dd>\n</dl>\n</li>\n<li>\n<p>객체에 대한 제어 권한이 바뀌는 것 즉, 제어 권한을 다른 대상에게 위임하는 것이라는 의미 (개발자 -&gt; 컨테이너)</p>\n</li>\n<li>\n<p>프레임워크에서 개발자는 필요한 부분을 개발해서 &quot;조립&quot;하는 방식을 취하는데, 이렇게 조립된 코드의 최종 호출은 <u>개발자에 의해서 제어되는 것이 아니라 프레임워크 내부 동작 원리에 따라 이루어짐</u>. 이를 <strong>제어의 역전</strong> 이라고 표현</p>\n</li>\n<li>\n<p>스프링 프레임워크에서 지원하는 IoC Container는 POJO의 생명주기를 관리, 생성된 인스턴트들에게 추가적인 기능들을 제공<br>\ncf) 라이브러리 vs 프레임워크 --&gt; IoC의 개념이 적용되었나의 차이</p>\n</li>\n</ul>\n<p>✔️ <strong>Dependency Injection</strong> : 의존성 주입</p>\n<ul>\n<li>\n<dl>\n<dt><strong>의존성(Dependency)</strong></dt>\n<dd>현재 객체가 다른 객체와 상호작용(참조)하고 있다면, 다른 객체들을 현재 객체의 의존 이라고 표현</dd>\n</dl>\n</li>\n<li>\n<p><strong>DI는 스프링 프레임워크에서 지원하는 IoC의 형태</strong></p>\n</li>\n<li>\n<p>DI는 <u>클래스 사이의 의존관계를 빈 설정 정보를 바탕으로 컨테이너가 자동적으로 연결</u></p>\n<p>예시)</p>\n<p><em><strong>Ioc/DI 가 적용되지 않은 경우</strong></em></p>\n</li>\n</ul>\n<p><img src=\"http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-02.png\" alt=\"instance\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> kr.co.study;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bar bar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Foo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        bar = <span class=\"keyword\">new</span> SubBar();\t<span class=\"comment\">//Bar 인터페이스를 구현하는 구체적인 클래스 SubBar로 초기화</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t<em><strong>Ioc/DI 가 적용되지 않은 경우</strong></em></p>\n<p><img src=\"http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-03.png\" alt=\"inject\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Container</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bar\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"kr.co.study.SubBar\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"foo\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"kr.co.study.Foo\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bar\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"bar\"</span>/&gt;</span>\t\t<span class=\"comment\">&lt;!-- 사용할 객체들을 컨테이너에 등록 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//application code</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> kr.co.study;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bar bar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBar</span><span class=\"params\">(Bar bar)</span></span>&#123;\t<span class=\"comment\">//사용할 객체를 매겨변수로 받아와 동적으로 의존관계를 설정</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bar = bar;\t\t\t\t<span class=\"comment\">//Bar 인터페이스를 구현하는 구체적인 클래스 이름이 등장하지 않음</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>마틴 파울러가 그의 저서인 'Inversion of Control Containers and the Dependency Injection pattern’에서 세가지 DI 패턴을 제시</p>\n<ul>\n<li>setter() 메소드를 이용한 의존성 삽입(Setter Injection)</li>\n<li>생성자를 이용한 의존성 삽입 (Constructor Injection)</li>\n<li>초기화 인터페이스를 이용한 의존성 삽입(Interface Injection)</li>\n</ul>\n</li>\n<li>\n<p>스프링 프레임워크에서의 DI 패턴</p>\n<ol>\n<li>XML을 통한 의존성 주입\n<ul>\n<li>생성자를 통한 의존성 주입 : <constructor-arg> 태그와 ref 속성 이용</constructor-arg></li>\n<li>속성을 통한 의존성 주입 : <property> 태그를 사용, name 속성값이 호출하고자 하는 메소드의 이름</property></li>\n</ul>\n</li>\n<li>Annotation을 통한 의존성 주입<br>\n<strong>@Autowired</strong> 라는 어노테이션을 통해 의존성 주입. 비슷한 역할로 <strong>@Resource</strong> 어노테이션도 존재.<br>\n둘의 차이점은 bean을 탐색하는 우선순위의 기준</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"aop\"><a class=\"markdownIt-Anchor\" href=\"#aop\"></a> AOP</h3>\n<ul>\n<li>\n<p>AOP의 핵심은 <strong>관심 분리(Separation of Concerns)</strong> 로써, <u>비즈니스 메소드를 개발할 때, 핵심 비즈니스 로직과 공통 로직을 분리함으로써 응집도가 높게 개발할 수 있도록 지원하는 것</u> 입니다.</p>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/185DF4334FA8A1FD01\" alt=\"aop\"></p>\n</li>\n</ul>\n<p>✔️ <strong>Aspect Oriented Programming</strong> : 관점 지향 프로그래밍</p>\n<ul>\n<li>핵심적인 비즈니스 로직과 관련이 없으나 모듈성을 높일 목적으로 여러 곳에서 공통적으로 쓰이는 기능들을 분리( separating cross-cutting concerns)하여 개발하고 실행 시에 서로 조합</li>\n<li>Logging, Security, Transaction 등을 aspect라는 특별한 객체로 모듈화, weaving이라는 작업을 통해 모듈화한 코드를 핵심 기능에 넣음</li>\n</ul>\n<hr>\n<h3 id=\"psa\"><a class=\"markdownIt-Anchor\" href=\"#psa\"></a> PSA</h3>\n<h3 id=\"psa-2\"><a class=\"markdownIt-Anchor\" href=\"#psa-2\"></a> PSA</h3>\n<p>✔️ <strong>Potable Service Abstraction</strong> : (이식 가능한)일관성 있는 서비스 추상화</p>\n<ul>\n<li>POJO로 개발된 코드는 특정 환경이나 구현 방식에 종속적이지 않아야 함<br>\n(특정 환경에 종속적이지 않다는 게 그런 기술을 사용하지 않는다는 뜻은 아님)</li>\n<li>스프링은 완성도가 높은 라이브러리와 연결할 수 있는 인터페이스를 제공</li>\n</ul>\n<hr>\n<p><br><br><br></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<h3 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h3>\n<p><a href=\"https://asfirstalways.tistory.com/334\" target=\"_blank\" rel=\"noopener\">Spring의 시작, 프레임워크의 구성요소와 동작원리</a><br>\n<a href=\"https://scroogy.atlassian.net/wiki/spaces/SPRING/pages/1114310\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 핵심</a></p>\n<p><strong>POJO</strong><br>\n<a href=\"https://limmmee.tistory.com/8\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 1 - POJO에 대하여</a><br>\n<a href=\"https://www.geeksforgeeks.org/pojo-vs-java-beans/\" target=\"_blank\" rel=\"noopener\">POJO vs JavaBeans</a><br>\n<a href=\"https://spring.io/understanding/POJO\" target=\"_blank\" rel=\"noopener\">Understanding : POJO</a></p>\n<p><strong>IoC/DI</strong><br>\n<a href=\"https://limmmee.tistory.com/13?category=654011\" target=\"_blank\" rel=\"noopener\">스프링 프레임워크 2 - 컨테이너와 IoC</a><br>\n<a href=\"http://wiki.javajigi.net/pages/viewpage.action?pageId=3664\" target=\"_blank\" rel=\"noopener\">Spring 프레임워크 소개와 IoC 및 Spring IoC의 개념</a><br>\n<a href=\"www.nextree.co.kr/p11247/\">세 가지 DI 컨테이너로 향하는 저녁 산책</a><br>\n<a href=\"http://springmvc.egloos.com/487497\" target=\"_blank\" rel=\"noopener\">스프링이 도대체 뭐란 말인가?</a></p>\n<hr>\n<p>📖 <strong>목차</strong> 📖</p>\n<ul>\n<li><a href=\"#pojo\">POJO</a></li>\n<li><a href=\"#ioc-/-di\">IoC / DI</a></li>\n<li><a href=\"#aop\">AOP</a></li>\n<li><a href=\"#psa\">PSA</a></li>\n</ul>\n<h2 id=\"핵심-개념들\"><a class=\"markdownIt-Anchor\" href=\"#핵심-개념들\"></a> 핵심 개념들</h2>\n<ul>\n<li>스프링 프레임워크를 공부하면서 자주 언급되고 매우 중요하다고 생각하는 용어들을 정리했습니다</li>\n<li>아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.</li>\n</ul>\n<p><img src=\"https://dhsim86.github.io/static/assets/img/blog/web/2017-11-18-toby_spring_08_what_is_spring//00.png\" alt=\"spring triangle\"></p>\n<hr>\n<h3 id=\"pojo\"><a class=\"markdownIt-Anchor\" href=\"#pojo\"></a> POJO</h3>\n<p>이해가 어려우신 분들은 간략히,</p>\n<ul>\n<li>스프링 프레임워크를 사용하면 <strong>POJO로 애플리케이션을 만들고 엔터프라이즈 서비스를 비침투적으로 POJO에 적용할 수 있다</strong></li>\n<li><strong>모든 JavaBeans는 POJO 이지만, 모든 POJO는 JavaBeans가 아니다</strong></li>\n</ul>\n<p><img src=\"https://cdncontribute.geeksforgeeks.org/wp-content/uploads/pojo.jpg\" alt=\"pojo&amp;javabean\"></p>\n<p>이 정도만 숙지하고 넘어가셔도 상관 없을 것 같습니다.</p>\n<p>✔️ <strong>Plain Old Java Object</strong> : (직역) 평범한 옛날 자바 객체</p>\n<p>더 자세한 내용은 다른 포스트에서 다루겠지만, 간략히 스프링 공식 홈페이지에서는 POJO를 다음과 같이 소개합니다.</p>\n<blockquote>\n<p>By using plain old Java objects, your code is much more simplified, which lends to better testing, flexibility, and ability to change technical decisions at future stages based on knowledge and shifting requirements.</p>\n</blockquote>\n<p>POJO를 사용함으로써,</p>\n<ul>\n<li>코드가 간결해져서 테스트하기 편해지고 (비즈니스 로직과 특정 환결/로우 레벨 종속적인 코드를 분리함)<br>\n쉽게 말해 인터페이스, 상속이 없는 것</li>\n<li>유연해서 객체지향적 설계의 자유료운 사용이 가능</li>\n</ul>\n<p><strong>POJO 기반의 프레임워크 == 스프링 프레임워크</strong></p>\n<p>많은 POJO 프레임워크가 있고 하이버네이트와 스프링이 대표적이라고 할 수 있습니다. (이 둘의 차이점은 굳이 자세히 알아보지는 않겠습니다.) 스프링 프레임워크가 <u>많은 POJO 프레임워크 제품 중 하나</u>라는 정도로 알고 넘어가셔도 좋습니다.</p>\n<p><strong>진정한 POJO 프로그래밍</strong></p>\n<p><u>자바의 객체지향적인 특징을 살려 비즈니스 로직에 충실한 개발이 가능하도록 하는 것이 진정한 POJO 프로그래밍</u>이라고 할 수 있습니다. 마치 자바를 처음 배울 때 흔히 하는 실수로, 개발은 자바로 하지만 실제로는 C 언어를 배우며 익숙해진 절차지향 방식으로 구현하는 것을 생각하시면 되겠습니다. 따라서 POJO 프레임워크 제품을 사용한다고 해서 자동으로 POJO 형식의 개발을 하고 있다고 할 수 없음을 인지하고 계셔야 합니다.</p>\n<ul>\n<li>객체지향적인 설계원칙에 충실하도록 개발되어 있는지</li>\n<li>테스트 코드 개발의 용이성이나 테스트 코드를 잘 작성했는지</li>\n</ul>\n<p>를 잘 확인하시면서 POJO 프로그래밍의 장점을 잘 살려 스프링 프레임워크의 활용도를 극대화하려고 노력해야 할 것 같습니다.</p>\n<hr>\n<h3 id=\"ioc-di\"><a class=\"markdownIt-Anchor\" href=\"#ioc-di\"></a> IoC / DI</h3>\n<p>개인적으로 재밌었던 표현이라 그대로 참조한 블로그<a href=\"http://springmvc.egloos.com/487497\" target=\"_blank\" rel=\"noopener\">스프링이 도대체 뭐란 말인가?</a>(꼭 읽어보면 좋을 것 같습니다)의 표현을 그대로 인용하자면, 간략하게 이 둘을 <strong>“대신 해줌(IoC)”</strong> 과 <strong>“미리 찜해 놓음(DI)”</strong> 이라고 설명하였습니다.<br>\n<strong>정신 나간듯 언제 사용될 지도 모르는 코드를 쳐대면서(IoC) 동시에 사용하고 있는 코드가 뭔지도 모르면서 일단 갖다 쓰는(DI) 획기적이고 진보적인 프로그래밍 작성 방식</strong> 으로 IoC/DI의 개념을 표현하였고 어려우시면 이 정도로 이해하고 일단 넘어가시는 것도 좋을 것 같습니다.</p>\n<p><img src=\"https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F252FCF3B5231689B17B553\" alt=\"ioc\"></p>\n<p>✔️ <strong>Inversion of Control</strong> : 제어의 역전</p>\n<ul>\n<li>\n<dl>\n<dt><strong>제어권(Control)</strong></dt>\n<dd>자바 객체의 생성, 생명주기 관리, 객체간의 의존관계를 연결시키는 등의 행위에 대한 권한</dd>\n</dl>\n</li>\n<li>\n<p>객체에 대한 제어 권한이 바뀌는 것 즉, 제어 권한을 다른 대상에게 위임하는 것이라는 의미 (개발자 -&gt; 컨테이너)</p>\n</li>\n<li>\n<p>프레임워크에서 개발자는 필요한 부분을 개발해서 &quot;조립&quot;하는 방식을 취하는데, 이렇게 조립된 코드의 최종 호출은 <u>개발자에 의해서 제어되는 것이 아니라 프레임워크 내부 동작 원리에 따라 이루어짐</u>. 이를 <strong>제어의 역전</strong> 이라고 표현</p>\n</li>\n<li>\n<p>스프링 프레임워크에서 지원하는 IoC Container는 POJO의 생명주기를 관리, 생성된 인스턴트들에게 추가적인 기능들을 제공<br>\ncf) 라이브러리 vs 프레임워크 --&gt; IoC의 개념이 적용되었나의 차이</p>\n</li>\n</ul>\n<p>✔️ <strong>Dependency Injection</strong> : 의존성 주입</p>\n<ul>\n<li>\n<dl>\n<dt><strong>의존성(Dependency)</strong></dt>\n<dd>현재 객체가 다른 객체와 상호작용(참조)하고 있다면, 다른 객체들을 현재 객체의 의존 이라고 표현</dd>\n</dl>\n</li>\n<li>\n<p><strong>DI는 스프링 프레임워크에서 지원하는 IoC의 형태</strong></p>\n</li>\n<li>\n<p>DI는 <u>클래스 사이의 의존관계를 빈 설정 정보를 바탕으로 컨테이너가 자동적으로 연결</u></p>\n<p>예시)</p>\n<p><em><strong>Ioc/DI 가 적용되지 않은 경우</strong></em></p>\n</li>\n</ul>\n<p><img src=\"http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-02.png\" alt=\"instance\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> kr.co.study;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bar bar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Foo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        bar = <span class=\"keyword\">new</span> SubBar();\t<span class=\"comment\">//Bar 인터페이스를 구현하는 구체적인 클래스 SubBar로 초기화</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t<em><strong>Ioc/DI 가 적용되지 않은 경우</strong></em></p>\n<p><img src=\"http://www.nextree.co.kr/content/images/2016/09/yrkim-140701-framework-03.png\" alt=\"inject\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Container</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bar\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"kr.co.study.SubBar\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"foo\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"kr.co.study.Foo\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bar\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"bar\"</span>/&gt;</span>\t\t<span class=\"comment\">&lt;!-- 사용할 객체들을 컨테이너에 등록 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//application code</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> kr.co.study;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bar bar;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBar</span><span class=\"params\">(Bar bar)</span></span>&#123;\t<span class=\"comment\">//사용할 객체를 매겨변수로 받아와 동적으로 의존관계를 설정</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bar = bar;\t\t\t\t<span class=\"comment\">//Bar 인터페이스를 구현하는 구체적인 클래스 이름이 등장하지 않음</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>마틴 파울러가 그의 저서인 'Inversion of Control Containers and the Dependency Injection pattern’에서 세가지 DI 패턴을 제시</p>\n<ul>\n<li>setter() 메소드를 이용한 의존성 삽입(Setter Injection)</li>\n<li>생성자를 이용한 의존성 삽입 (Constructor Injection)</li>\n<li>초기화 인터페이스를 이용한 의존성 삽입(Interface Injection)</li>\n</ul>\n</li>\n<li>\n<p>스프링 프레임워크에서의 DI 패턴</p>\n<ol>\n<li>XML을 통한 의존성 주입\n<ul>\n<li>생성자를 통한 의존성 주입 : <constructor-arg> 태그와 ref 속성 이용</constructor-arg></li>\n<li>속성을 통한 의존성 주입 : <property> 태그를 사용, name 속성값이 호출하고자 하는 메소드의 이름</property></li>\n</ul>\n</li>\n<li>Annotation을 통한 의존성 주입<br>\n<strong>@Autowired</strong> 라는 어노테이션을 통해 의존성 주입. 비슷한 역할로 <strong>@Resource</strong> 어노테이션도 존재.<br>\n둘의 차이점은 bean을 탐색하는 우선순위의 기준</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"aop\"><a class=\"markdownIt-Anchor\" href=\"#aop\"></a> AOP</h3>\n<ul>\n<li>\n<p>AOP의 핵심은 <strong>관심 분리(Separation of Concerns)</strong> 로써, <u>비즈니스 메소드를 개발할 때, 핵심 비즈니스 로직과 공통 로직을 분리함으로써 응집도가 높게 개발할 수 있도록 지원하는 것</u> 입니다.</p>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/185DF4334FA8A1FD01\" alt=\"aop\"></p>\n</li>\n</ul>\n<p>✔️ <strong>Aspect Oriented Programming</strong> : 관점 지향 프로그래밍</p>\n<ul>\n<li>핵심적인 비즈니스 로직과 관련이 없으나 모듈성을 높일 목적으로 여러 곳에서 공통적으로 쓰이는 기능들을 분리( separating cross-cutting concerns)하여 개발하고 실행 시에 서로 조합</li>\n<li>Logging, Security, Transaction 등을 aspect라는 특별한 객체로 모듈화, weaving이라는 작업을 통해 모듈화한 코드를 핵심 기능에 넣음</li>\n</ul>\n<hr>\n<h3 id=\"psa\"><a class=\"markdownIt-Anchor\" href=\"#psa\"></a> PSA</h3>\n<h3 id=\"psa-2\"><a class=\"markdownIt-Anchor\" href=\"#psa-2\"></a> PSA</h3>\n<p>✔️ <strong>Potable Service Abstraction</strong> : (이식 가능한)일관성 있는 서비스 추상화</p>\n<ul>\n<li>POJO로 개발된 코드는 특정 환경이나 구현 방식에 종속적이지 않아야 함<br>\n(특정 환경에 종속적이지 않다는 게 그런 기술을 사용하지 않는다는 뜻은 아님)</li>\n<li>스프링은 완성도가 높은 라이브러리와 연결할 수 있는 인터페이스를 제공</li>\n</ul>\n<hr>\n<p><br><br><br></p>\n"},{"title":"포스트 작성을 위한 Hexo Plugins","author":{"nick":"TAEJIN","link":null},"date":"2019-01-23T07:32:24.000Z","subtitle":"19.01.23 작성, 블로그 포스트를 작성하며 유용할 것 같은 플러그인들을 소개","cover":"https://imtae.com/gallery/hexo.png","_content":"\n### Related Posts\n","source":"_posts/20190123-markdown-plugin.md","raw":"---\ntitle: 포스트 작성을 위한 Hexo Plugins\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - BLOG\n  - HEXO\ntags:\n  - hexo\n  - plugins\n  - 헥소\n  - 플러그인\ndate: 2019-01-23 16:32:24\nsubtitle: 19.01.23 작성, 블로그 포스트를 작성하며 유용할 것 같은 플러그인들을 소개\ncover: https://imtae.com/gallery/hexo.png\n---\n\n### Related Posts\n","slug":"markdown-plugin","published":1,"updated":"2019-01-23T08:09:48.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzj000cnf4686khwbho","content":"<h3 id=\"related-posts\"><a class=\"markdownIt-Anchor\" href=\"#related-posts\"></a> Related Posts</h3>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<h3 id=\"related-posts\"><a class=\"markdownIt-Anchor\" href=\"#related-posts\"></a> Related Posts</h3>\n"},{"title":"C-CDA 란?","author":{"nick":"TAEJIN","link":null},"date":"2019-01-28T07:08:17.000Z","subtitle":null,"cover":"http://vico.org/CDAR22005_HL7SP/infrastructure/cda/graphics/L-POCD_RM000040.gif","_content":"\n### Related Posts\n\n------\n\n> 본 문서는 IHIS 연구소의 **'HL7 C-CDA 교육'** pdf 문서를 기반으로 작성 되었습니다.\n\n------\n\n:book:**목차**:book:\n-----\n1.[Pre-Consolidation context](#pre-consolidation-context)\n2.[Consolidated CDA](#consolidated-cda)\n3.[C-CDA IG Navigation](#c-cda-ig-navigation)\n\n\n## Pre-Consolidation context\n\n##### CDA 통합 이전\n\n 컴퓨터와 인터넷이 보편화 되고 사람들의 기대수명이 높아지면서 ICT(Information and Communication System) 기술을 보건의료 영역에 적용하려는 움직임이 시작 되었습니다.\n 하지만 병원과 기관마다 서로 다른 소프트웨어를 사용하기 때문에 정보 교환 또는 호환이 어려운 문제점이 있었습니다. 이를 해결하고자 *HITSP, HL7, IHE, Health Story* 등의 여러 기업 및 기관들이 표준화된 **CDA(Clinical Document Architecture)**를 규정하고, 많은 사람들이 자신들의 표준을 사용하게 하기 위해 **CDA Implementation Guide(CDA IG)** 를 배포하였습니다.\n 각각의 표준은 비슷하지만 조금씩은 차이가 있었기 때문에 진정한 표준이 되지 못하고 다람쥐 쳇바퀴 돌 듯 이 문서들 간의 교환 및 교환의 문제가 발생하였습니다.\n\n![C-CDA](/img/c-cda.png)\n\n## Consolidated CDA\n\n 2012년 <u>the Office of the National Coordinator for Health Information Technology(ONC)</u> 에서 이러한 문제점을 해결하고자 **Consolidated CDA 라는 통일된 표준** 을 제시하였다고 위키피디아[^1]에 적혀있습니다. 저는 대중적으로 많이 사용하는 HL7 기관에서 2011년 12월에 발표한  'A draft Implementation Guide for CDA Release 2.0, Consolidated CDA Templates'[^2]를 기반으로 다룰 것 입니다.\n\n\n\n\n\n**C-CDA IG** 는 아래와 같은 의료 문서를 포함합니다(year released)\n\n- Consultation Note(2008)\n- Discharge Summary(2009)\n- Imaging Integration and DICOM Diagnostic Imaging Reports(DIR)(2009)\n- History and Physical(H&P)(2008)\n- Operative Note(2009)\n- Progress Note(2010)\n- Procedure Note(2010)\n- Unstructured documents(2010)\n\n![C-CDA2](/img/c-cda2.png)\n\n\n\n## C-CDA IG Navigation\n\n Consolidated CDA 작성 방법에 대한 자세한 정보는 공식 홈페이지를 참조하면 될 것 같습니다.\n[HL7 Implementation Guide for CDA Release 2:IHE Health Story Consolidation, Release 1.1 - US Realm](http://www.hl7.org/implement/standards/product_matrix.cfm)\n\n\n\n<br><br><br>\n\n[^1]: [Consolidated Clinical Document Architecture 탭에 있음](https://en.wikipedia.org/wiki/Clinical_Document_Architecture)\n[^2]: 초안의 사본은 HL7  웹 사이트를 가면 쉽게 찾을 수 있습니다.\n","source":"_posts/20190128-cda-tutorial-1.md","raw":"---\ntitle: C-CDA 란?\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - IHIS\n  - HL7\ntags:\n  - CDA\n  - C-CDA\n  - HL7\ndate: 2019-01-28 16:08:17\nsubtitle:\ncover: 'http://vico.org/CDAR22005_HL7SP/infrastructure/cda/graphics/L-POCD_RM000040.gif'\n\n\n---\n\n### Related Posts\n\n------\n\n> 본 문서는 IHIS 연구소의 **'HL7 C-CDA 교육'** pdf 문서를 기반으로 작성 되었습니다.\n\n------\n\n:book:**목차**:book:\n-----\n1.[Pre-Consolidation context](#pre-consolidation-context)\n2.[Consolidated CDA](#consolidated-cda)\n3.[C-CDA IG Navigation](#c-cda-ig-navigation)\n\n\n## Pre-Consolidation context\n\n##### CDA 통합 이전\n\n 컴퓨터와 인터넷이 보편화 되고 사람들의 기대수명이 높아지면서 ICT(Information and Communication System) 기술을 보건의료 영역에 적용하려는 움직임이 시작 되었습니다.\n 하지만 병원과 기관마다 서로 다른 소프트웨어를 사용하기 때문에 정보 교환 또는 호환이 어려운 문제점이 있었습니다. 이를 해결하고자 *HITSP, HL7, IHE, Health Story* 등의 여러 기업 및 기관들이 표준화된 **CDA(Clinical Document Architecture)**를 규정하고, 많은 사람들이 자신들의 표준을 사용하게 하기 위해 **CDA Implementation Guide(CDA IG)** 를 배포하였습니다.\n 각각의 표준은 비슷하지만 조금씩은 차이가 있었기 때문에 진정한 표준이 되지 못하고 다람쥐 쳇바퀴 돌 듯 이 문서들 간의 교환 및 교환의 문제가 발생하였습니다.\n\n![C-CDA](/img/c-cda.png)\n\n## Consolidated CDA\n\n 2012년 <u>the Office of the National Coordinator for Health Information Technology(ONC)</u> 에서 이러한 문제점을 해결하고자 **Consolidated CDA 라는 통일된 표준** 을 제시하였다고 위키피디아[^1]에 적혀있습니다. 저는 대중적으로 많이 사용하는 HL7 기관에서 2011년 12월에 발표한  'A draft Implementation Guide for CDA Release 2.0, Consolidated CDA Templates'[^2]를 기반으로 다룰 것 입니다.\n\n\n\n\n\n**C-CDA IG** 는 아래와 같은 의료 문서를 포함합니다(year released)\n\n- Consultation Note(2008)\n- Discharge Summary(2009)\n- Imaging Integration and DICOM Diagnostic Imaging Reports(DIR)(2009)\n- History and Physical(H&P)(2008)\n- Operative Note(2009)\n- Progress Note(2010)\n- Procedure Note(2010)\n- Unstructured documents(2010)\n\n![C-CDA2](/img/c-cda2.png)\n\n\n\n## C-CDA IG Navigation\n\n Consolidated CDA 작성 방법에 대한 자세한 정보는 공식 홈페이지를 참조하면 될 것 같습니다.\n[HL7 Implementation Guide for CDA Release 2:IHE Health Story Consolidation, Release 1.1 - US Realm](http://www.hl7.org/implement/standards/product_matrix.cfm)\n\n\n\n<br><br><br>\n\n[^1]: [Consolidated Clinical Document Architecture 탭에 있음](https://en.wikipedia.org/wiki/Clinical_Document_Architecture)\n[^2]: 초안의 사본은 HL7  웹 사이트를 가면 쉽게 찾을 수 있습니다.\n","slug":"cda-tutorial-1","published":1,"updated":"2019-01-31T06:54:30.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzk000dnf4637k16pb6","content":"<h3 id=\"related-posts\"><a class=\"markdownIt-Anchor\" href=\"#related-posts\"></a> Related Posts</h3>\n<hr>\n<blockquote>\n<p>본 문서는 IHIS 연구소의 <strong>‘HL7 C-CDA 교육’</strong> pdf 문서를 기반으로 작성 되었습니다.</p>\n</blockquote>\n<hr>\n<h2 id=\"목차\"><a class=\"markdownIt-Anchor\" href=\"#목차\"></a> 📖<strong>목차</strong>📖</h2>\n<p>1.<a href=\"#pre-consolidation-context\">Pre-Consolidation context</a><br>\n2.<a href=\"#consolidated-cda\">Consolidated CDA</a><br>\n3.<a href=\"#c-cda-ig-navigation\">C-CDA IG Navigation</a></p>\n<h2 id=\"pre-consolidation-context\"><a class=\"markdownIt-Anchor\" href=\"#pre-consolidation-context\"></a> Pre-Consolidation context</h2>\n<h5 id=\"cda-통합-이전\"><a class=\"markdownIt-Anchor\" href=\"#cda-통합-이전\"></a> CDA 통합 이전</h5>\n<p>컴퓨터와 인터넷이 보편화 되고 사람들의 기대수명이 높아지면서 ICT(Information and Communication System) 기술을 보건의료 영역에 적용하려는 움직임이 시작 되었습니다.<br>\n하지만 병원과 기관마다 서로 다른 소프트웨어를 사용하기 때문에 정보 교환 또는 호환이 어려운 문제점이 있었습니다. 이를 해결하고자 <em>HITSP, HL7, IHE, Health Story</em> 등의 여러 기업 및 기관들이 표준화된 **CDA(Clinical Document Architecture)**를 규정하고, 많은 사람들이 자신들의 표준을 사용하게 하기 위해 <strong>CDA Implementation Guide(CDA IG)</strong> 를 배포하였습니다.<br>\n각각의 표준은 비슷하지만 조금씩은 차이가 있었기 때문에 진정한 표준이 되지 못하고 다람쥐 쳇바퀴 돌 듯 이 문서들 간의 교환 및 교환의 문제가 발생하였습니다.</p>\n<p><img src=\"/img/c-cda.png\" alt=\"C-CDA\"></p>\n<h2 id=\"consolidated-cda\"><a class=\"markdownIt-Anchor\" href=\"#consolidated-cda\"></a> Consolidated CDA</h2>\n<p>2012년 <u>the Office of the National Coordinator for Health Information Technology(ONC)</u> 에서 이러한 문제점을 해결하고자 <strong>Consolidated CDA 라는 통일된 표준</strong> 을 제시하였다고 위키피디아<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>에 적혀있습니다. 저는 대중적으로 많이 사용하는 HL7 기관에서 2011년 12월에 발표한  'A draft Implementation Guide for CDA Release 2.0, Consolidated CDA Templates’<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>를 기반으로 다룰 것 입니다.</p>\n<p><strong>C-CDA IG</strong> 는 아래와 같은 의료 문서를 포함합니다(year released)</p>\n<ul>\n<li>Consultation Note(2008)</li>\n<li>Discharge Summary(2009)</li>\n<li>Imaging Integration and DICOM Diagnostic Imaging Reports(DIR)(2009)</li>\n<li>History and Physical(H&amp;P)(2008)</li>\n<li>Operative Note(2009)</li>\n<li>Progress Note(2010)</li>\n<li>Procedure Note(2010)</li>\n<li>Unstructured documents(2010)</li>\n</ul>\n<p><img src=\"/img/c-cda2.png\" alt=\"C-CDA2\"></p>\n<h2 id=\"c-cda-ig-navigation\"><a class=\"markdownIt-Anchor\" href=\"#c-cda-ig-navigation\"></a> C-CDA IG Navigation</h2>\n<p>Consolidated CDA 작성 방법에 대한 자세한 정보는 공식 홈페이지를 참조하면 될 것 같습니다.<br>\n<a href=\"http://www.hl7.org/implement/standards/product_matrix.cfm\" target=\"_blank\" rel=\"noopener\">HL7 Implementation Guide for CDA Release 2:IHE Health Story Consolidation, Release 1.1 - US Realm</a></p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://en.wikipedia.org/wiki/Clinical_Document_Architecture\" target=\"_blank\" rel=\"noopener\">Consolidated Clinical Document Architecture 탭에 있음</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>초안의 사본은 HL7  웹 사이트를 가면 쉽게 찾을 수 있습니다. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<h3 id=\"related-posts\"><a class=\"markdownIt-Anchor\" href=\"#related-posts\"></a> Related Posts</h3>\n<hr>\n<blockquote>\n<p>본 문서는 IHIS 연구소의 <strong>‘HL7 C-CDA 교육’</strong> pdf 문서를 기반으로 작성 되었습니다.</p>\n</blockquote>\n<hr>\n<h2 id=\"목차\"><a class=\"markdownIt-Anchor\" href=\"#목차\"></a> 📖<strong>목차</strong>📖</h2>\n<p>1.<a href=\"#pre-consolidation-context\">Pre-Consolidation context</a><br>\n2.<a href=\"#consolidated-cda\">Consolidated CDA</a><br>\n3.<a href=\"#c-cda-ig-navigation\">C-CDA IG Navigation</a></p>\n<h2 id=\"pre-consolidation-context\"><a class=\"markdownIt-Anchor\" href=\"#pre-consolidation-context\"></a> Pre-Consolidation context</h2>\n<h5 id=\"cda-통합-이전\"><a class=\"markdownIt-Anchor\" href=\"#cda-통합-이전\"></a> CDA 통합 이전</h5>\n<p>컴퓨터와 인터넷이 보편화 되고 사람들의 기대수명이 높아지면서 ICT(Information and Communication System) 기술을 보건의료 영역에 적용하려는 움직임이 시작 되었습니다.<br>\n하지만 병원과 기관마다 서로 다른 소프트웨어를 사용하기 때문에 정보 교환 또는 호환이 어려운 문제점이 있었습니다. 이를 해결하고자 <em>HITSP, HL7, IHE, Health Story</em> 등의 여러 기업 및 기관들이 표준화된 **CDA(Clinical Document Architecture)**를 규정하고, 많은 사람들이 자신들의 표준을 사용하게 하기 위해 <strong>CDA Implementation Guide(CDA IG)</strong> 를 배포하였습니다.<br>\n각각의 표준은 비슷하지만 조금씩은 차이가 있었기 때문에 진정한 표준이 되지 못하고 다람쥐 쳇바퀴 돌 듯 이 문서들 간의 교환 및 교환의 문제가 발생하였습니다.</p>\n<p><img src=\"/img/c-cda.png\" alt=\"C-CDA\"></p>\n<h2 id=\"consolidated-cda\"><a class=\"markdownIt-Anchor\" href=\"#consolidated-cda\"></a> Consolidated CDA</h2>\n<p>2012년 <u>the Office of the National Coordinator for Health Information Technology(ONC)</u> 에서 이러한 문제점을 해결하고자 <strong>Consolidated CDA 라는 통일된 표준</strong> 을 제시하였다고 위키피디아<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>에 적혀있습니다. 저는 대중적으로 많이 사용하는 HL7 기관에서 2011년 12월에 발표한  'A draft Implementation Guide for CDA Release 2.0, Consolidated CDA Templates’<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>를 기반으로 다룰 것 입니다.</p>\n<p><strong>C-CDA IG</strong> 는 아래와 같은 의료 문서를 포함합니다(year released)</p>\n<ul>\n<li>Consultation Note(2008)</li>\n<li>Discharge Summary(2009)</li>\n<li>Imaging Integration and DICOM Diagnostic Imaging Reports(DIR)(2009)</li>\n<li>History and Physical(H&amp;P)(2008)</li>\n<li>Operative Note(2009)</li>\n<li>Progress Note(2010)</li>\n<li>Procedure Note(2010)</li>\n<li>Unstructured documents(2010)</li>\n</ul>\n<p><img src=\"/img/c-cda2.png\" alt=\"C-CDA2\"></p>\n<h2 id=\"c-cda-ig-navigation\"><a class=\"markdownIt-Anchor\" href=\"#c-cda-ig-navigation\"></a> C-CDA IG Navigation</h2>\n<p>Consolidated CDA 작성 방법에 대한 자세한 정보는 공식 홈페이지를 참조하면 될 것 같습니다.<br>\n<a href=\"http://www.hl7.org/implement/standards/product_matrix.cfm\" target=\"_blank\" rel=\"noopener\">HL7 Implementation Guide for CDA Release 2:IHE Health Story Consolidation, Release 1.1 - US Realm</a></p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://en.wikipedia.org/wiki/Clinical_Document_Architecture\" target=\"_blank\" rel=\"noopener\">Consolidated Clinical Document Architecture 탭에 있음</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>초안의 사본은 HL7  웹 사이트를 가면 쉽게 찾을 수 있습니다. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-16T05:58:31.302Z","updated":"2019-01-16T05:58:31.302Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzp000gnf461zg6755h","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"스프링 프레임워크 모듈","author":{"nick":"TAEJIN","link":null},"date":"2019-01-31T10:08:32.000Z","subtitle":"스프링 프레임워크의 약 20개의 모듈들","cover":"https://spring.io/img/spring-by-pivotal.png","_content":"\n:blue_book: **목차** :book:\n\n[스프링 프레임워크 모듈](#스프링-프레임워크-모듈)\n\n\n\n------\n\n## 스프링 프레임워크 모듈\n\n![framework modules](https://docs.spring.io/spring/docs/4.3.22.RELEASE/spring-framework-reference/htmlsingle/images/spring-overview.png)\n\n위 그림에 나와있듯이 스프링 프레임워크는 약 20개의 모듈들로 이루어져 있습니다.\n\n- Data Access/Integration; Web; AOP; Aspects; Instrumentation; Messaging; Core Container; and Test;\n\n|       모듈 그룹        |                             설명                             |\n| :--------------------: | :----------------------------------------------------------: |\n|     Core Container     |            * 스프링 프레임워크의 기본 모듈을 포함            |\n| AOP 및 Instrumentation | * 관점 지향 프로그래밍(AOP; Aspect-Oriented Programming) 및 Class Instrumentation을 지원하는 모듈을 포함 |\n|       Messaging        | * 프로그래밍 모듈을 기반으로한 스프링 MVC 어노테이션 처럼 메세지를 메소드에 맵핑 시키는 어노테이션의 세트를 포함 |\n| Data Access/Inegration | * DB 및 메시징 공급자와의 상호작용을 간소화하는 모듈을 포함  |\n|          Web           |  * 웹 및 포틀릿 애플리케이션 개발을 간소화하는 모듈을 포함   |\n|          Test          |   * 단위 및 통합 테스트 생성을 간소화하는 모듈 하나를 포함   |\n\n 이처럼 스프링은 **웹 애플리케이션 개발, 데이터베이스 접근, 트랜잭션 관리, 단위 및 통합 테스트 생성** 등등 엔터프라이즈 애플리케이션 개발의 모든 측면을 지원하고 이렇게 다양한 기능 중 우리는 필요한 것만 선택적으로 사용하면 됩니다.\n\n만약 개발하고 있는 애플리케이션에서 스프링의 DI 기능[^1]을 사용하려면 Core Container 모듈 그룹에 속한 Spring-Core나 Spring-Beans 모듈을 선택해 사용하면 됩니다.\n\n\n\n### 스프링 프레임워크 모듈 간 상호의존성\n\n![dependency](https://1.bp.blogspot.com/-8MEJX0VwvO8/Wi0I3qLwk7I/AAAAAAAAgo0/nu7QGP77ZjA8hgCHdwDmjdgKNMJYjf_EACLcBGAs/s1600/1.1.png)\n\n- **Core Container** 그룹이 스프링 프레임워크의 중심\n- **AOP 및 Instrumentation** 그룹에 포함된 모듈도 이를 의존하는 다른 모듈이 많기에 중요도가 높음\n\n\n\n지금은 이해가 잘 안되지만 앞으로 각각의 모듈들에 대해 자세히 알아볼 예정입니다.\n\n다음 포스팅에서는 각각의 모듈들을 알아가기 전에 꼭 알아둬야하는 개념들을 가볍게 집고 넘어가겠습니다.\n\n- 제어의 역적(IoC); 의존성 주입(DI); 관전 지향 프로그래밍(AOP); Model View Control(MVC);\n\n![modules todo](https://d2h0cx97tjks2p.cloudfront.net/blogs/wp-content/uploads/sites/2/2018/06/Spring-Framework-Modules-01.jpg)\n\n<br><br><br>\n\n\n\n[^1]: DI 기능에 대해서는 다음에 따로 포스트할 예정(포스팅 하면 수정!!)\n","source":"_posts/20190131-spring-module.md","raw":"---\ntitle: 스프링 프레임워크 모듈\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - WEB\n  - SPRING\ntags:\n  - FRAMEWORK\n  - MODULES\ndate: 2019-01-31 19:08:32\nsubtitle: 스프링 프레임워크의 약 20개의 모듈들\ncover: https://spring.io/img/spring-by-pivotal.png\n\n---\n\n:blue_book: **목차** :book:\n\n[스프링 프레임워크 모듈](#스프링-프레임워크-모듈)\n\n\n\n------\n\n## 스프링 프레임워크 모듈\n\n![framework modules](https://docs.spring.io/spring/docs/4.3.22.RELEASE/spring-framework-reference/htmlsingle/images/spring-overview.png)\n\n위 그림에 나와있듯이 스프링 프레임워크는 약 20개의 모듈들로 이루어져 있습니다.\n\n- Data Access/Integration; Web; AOP; Aspects; Instrumentation; Messaging; Core Container; and Test;\n\n|       모듈 그룹        |                             설명                             |\n| :--------------------: | :----------------------------------------------------------: |\n|     Core Container     |            * 스프링 프레임워크의 기본 모듈을 포함            |\n| AOP 및 Instrumentation | * 관점 지향 프로그래밍(AOP; Aspect-Oriented Programming) 및 Class Instrumentation을 지원하는 모듈을 포함 |\n|       Messaging        | * 프로그래밍 모듈을 기반으로한 스프링 MVC 어노테이션 처럼 메세지를 메소드에 맵핑 시키는 어노테이션의 세트를 포함 |\n| Data Access/Inegration | * DB 및 메시징 공급자와의 상호작용을 간소화하는 모듈을 포함  |\n|          Web           |  * 웹 및 포틀릿 애플리케이션 개발을 간소화하는 모듈을 포함   |\n|          Test          |   * 단위 및 통합 테스트 생성을 간소화하는 모듈 하나를 포함   |\n\n 이처럼 스프링은 **웹 애플리케이션 개발, 데이터베이스 접근, 트랜잭션 관리, 단위 및 통합 테스트 생성** 등등 엔터프라이즈 애플리케이션 개발의 모든 측면을 지원하고 이렇게 다양한 기능 중 우리는 필요한 것만 선택적으로 사용하면 됩니다.\n\n만약 개발하고 있는 애플리케이션에서 스프링의 DI 기능[^1]을 사용하려면 Core Container 모듈 그룹에 속한 Spring-Core나 Spring-Beans 모듈을 선택해 사용하면 됩니다.\n\n\n\n### 스프링 프레임워크 모듈 간 상호의존성\n\n![dependency](https://1.bp.blogspot.com/-8MEJX0VwvO8/Wi0I3qLwk7I/AAAAAAAAgo0/nu7QGP77ZjA8hgCHdwDmjdgKNMJYjf_EACLcBGAs/s1600/1.1.png)\n\n- **Core Container** 그룹이 스프링 프레임워크의 중심\n- **AOP 및 Instrumentation** 그룹에 포함된 모듈도 이를 의존하는 다른 모듈이 많기에 중요도가 높음\n\n\n\n지금은 이해가 잘 안되지만 앞으로 각각의 모듈들에 대해 자세히 알아볼 예정입니다.\n\n다음 포스팅에서는 각각의 모듈들을 알아가기 전에 꼭 알아둬야하는 개념들을 가볍게 집고 넘어가겠습니다.\n\n- 제어의 역적(IoC); 의존성 주입(DI); 관전 지향 프로그래밍(AOP); Model View Control(MVC);\n\n![modules todo](https://d2h0cx97tjks2p.cloudfront.net/blogs/wp-content/uploads/sites/2/2018/06/Spring-Framework-Modules-01.jpg)\n\n<br><br><br>\n\n\n\n[^1]: DI 기능에 대해서는 다음에 따로 포스트할 예정(포스팅 하면 수정!!)\n","slug":"spring-module","published":1,"updated":"2019-02-02T07:21:34.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrp4uzzs000inf4619677e5o","content":"<p>📘 <strong>목차</strong> 📖</p>\n<p><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EB%AA%A8%EB%93%88\">스프링 프레임워크 모듈</a></p>\n<hr>\n<h2 id=\"스프링-프레임워크-모듈\"><a class=\"markdownIt-Anchor\" href=\"#스프링-프레임워크-모듈\"></a> 스프링 프레임워크 모듈</h2>\n<p><img src=\"https://docs.spring.io/spring/docs/4.3.22.RELEASE/spring-framework-reference/htmlsingle/images/spring-overview.png\" alt=\"framework modules\"></p>\n<p>위 그림에 나와있듯이 스프링 프레임워크는 약 20개의 모듈들로 이루어져 있습니다.</p>\n<ul>\n<li>Data Access/Integration; Web; AOP; Aspects; Instrumentation; Messaging; Core Container; and Test;</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">모듈 그룹</th>\n<th style=\"text-align:center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Core Container</td>\n<td style=\"text-align:center\">* 스프링 프레임워크의 기본 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AOP 및 Instrumentation</td>\n<td style=\"text-align:center\">* 관점 지향 프로그래밍(AOP; Aspect-Oriented Programming) 및 Class Instrumentation을 지원하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Messaging</td>\n<td style=\"text-align:center\">* 프로그래밍 모듈을 기반으로한 스프링 MVC 어노테이션 처럼 메세지를 메소드에 맵핑 시키는 어노테이션의 세트를 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Data Access/Inegration</td>\n<td style=\"text-align:center\">* DB 및 메시징 공급자와의 상호작용을 간소화하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Web</td>\n<td style=\"text-align:center\">* 웹 및 포틀릿 애플리케이션 개발을 간소화하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Test</td>\n<td style=\"text-align:center\">* 단위 및 통합 테스트 생성을 간소화하는 모듈 하나를 포함</td>\n</tr>\n</tbody>\n</table>\n<p>이처럼 스프링은 <strong>웹 애플리케이션 개발, 데이터베이스 접근, 트랜잭션 관리, 단위 및 통합 테스트 생성</strong> 등등 엔터프라이즈 애플리케이션 개발의 모든 측면을 지원하고 이렇게 다양한 기능 중 우리는 필요한 것만 선택적으로 사용하면 됩니다.</p>\n<p>만약 개발하고 있는 애플리케이션에서 스프링의 DI 기능<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>을 사용하려면 Core Container 모듈 그룹에 속한 Spring-Core나 Spring-Beans 모듈을 선택해 사용하면 됩니다.</p>\n<h3 id=\"스프링-프레임워크-모듈-간-상호의존성\"><a class=\"markdownIt-Anchor\" href=\"#스프링-프레임워크-모듈-간-상호의존성\"></a> 스프링 프레임워크 모듈 간 상호의존성</h3>\n<p><img src=\"https://1.bp.blogspot.com/-8MEJX0VwvO8/Wi0I3qLwk7I/AAAAAAAAgo0/nu7QGP77ZjA8hgCHdwDmjdgKNMJYjf_EACLcBGAs/s1600/1.1.png\" alt=\"dependency\"></p>\n<ul>\n<li><strong>Core Container</strong> 그룹이 스프링 프레임워크의 중심</li>\n<li><strong>AOP 및 Instrumentation</strong> 그룹에 포함된 모듈도 이를 의존하는 다른 모듈이 많기에 중요도가 높음</li>\n</ul>\n<p>지금은 이해가 잘 안되지만 앞으로 각각의 모듈들에 대해 자세히 알아볼 예정입니다.</p>\n<p>다음 포스팅에서는 각각의 모듈들을 알아가기 전에 꼭 알아둬야하는 개념들을 가볍게 집고 넘어가겠습니다.</p>\n<ul>\n<li>제어의 역적(IoC); 의존성 주입(DI); 관전 지향 프로그래밍(AOP); Model View Control(MVC);</li>\n</ul>\n<p><img src=\"https://d2h0cx97tjks2p.cloudfront.net/blogs/wp-content/uploads/sites/2/2018/06/Spring-Framework-Modules-01.jpg\" alt=\"modules todo\"></p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>DI 기능에 대해서는 다음에 따로 포스트할 예정(포스팅 하면 수정!!) <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<p>📘 <strong>목차</strong> 📖</p>\n<p><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EB%AA%A8%EB%93%88\">스프링 프레임워크 모듈</a></p>\n<hr>\n<h2 id=\"스프링-프레임워크-모듈\"><a class=\"markdownIt-Anchor\" href=\"#스프링-프레임워크-모듈\"></a> 스프링 프레임워크 모듈</h2>\n<p><img src=\"https://docs.spring.io/spring/docs/4.3.22.RELEASE/spring-framework-reference/htmlsingle/images/spring-overview.png\" alt=\"framework modules\"></p>\n<p>위 그림에 나와있듯이 스프링 프레임워크는 약 20개의 모듈들로 이루어져 있습니다.</p>\n<ul>\n<li>Data Access/Integration; Web; AOP; Aspects; Instrumentation; Messaging; Core Container; and Test;</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">모듈 그룹</th>\n<th style=\"text-align:center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Core Container</td>\n<td style=\"text-align:center\">* 스프링 프레임워크의 기본 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AOP 및 Instrumentation</td>\n<td style=\"text-align:center\">* 관점 지향 프로그래밍(AOP; Aspect-Oriented Programming) 및 Class Instrumentation을 지원하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Messaging</td>\n<td style=\"text-align:center\">* 프로그래밍 모듈을 기반으로한 스프링 MVC 어노테이션 처럼 메세지를 메소드에 맵핑 시키는 어노테이션의 세트를 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Data Access/Inegration</td>\n<td style=\"text-align:center\">* DB 및 메시징 공급자와의 상호작용을 간소화하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Web</td>\n<td style=\"text-align:center\">* 웹 및 포틀릿 애플리케이션 개발을 간소화하는 모듈을 포함</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Test</td>\n<td style=\"text-align:center\">* 단위 및 통합 테스트 생성을 간소화하는 모듈 하나를 포함</td>\n</tr>\n</tbody>\n</table>\n<p>이처럼 스프링은 <strong>웹 애플리케이션 개발, 데이터베이스 접근, 트랜잭션 관리, 단위 및 통합 테스트 생성</strong> 등등 엔터프라이즈 애플리케이션 개발의 모든 측면을 지원하고 이렇게 다양한 기능 중 우리는 필요한 것만 선택적으로 사용하면 됩니다.</p>\n<p>만약 개발하고 있는 애플리케이션에서 스프링의 DI 기능<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>을 사용하려면 Core Container 모듈 그룹에 속한 Spring-Core나 Spring-Beans 모듈을 선택해 사용하면 됩니다.</p>\n<h3 id=\"스프링-프레임워크-모듈-간-상호의존성\"><a class=\"markdownIt-Anchor\" href=\"#스프링-프레임워크-모듈-간-상호의존성\"></a> 스프링 프레임워크 모듈 간 상호의존성</h3>\n<p><img src=\"https://1.bp.blogspot.com/-8MEJX0VwvO8/Wi0I3qLwk7I/AAAAAAAAgo0/nu7QGP77ZjA8hgCHdwDmjdgKNMJYjf_EACLcBGAs/s1600/1.1.png\" alt=\"dependency\"></p>\n<ul>\n<li><strong>Core Container</strong> 그룹이 스프링 프레임워크의 중심</li>\n<li><strong>AOP 및 Instrumentation</strong> 그룹에 포함된 모듈도 이를 의존하는 다른 모듈이 많기에 중요도가 높음</li>\n</ul>\n<p>지금은 이해가 잘 안되지만 앞으로 각각의 모듈들에 대해 자세히 알아볼 예정입니다.</p>\n<p>다음 포스팅에서는 각각의 모듈들을 알아가기 전에 꼭 알아둬야하는 개념들을 가볍게 집고 넘어가겠습니다.</p>\n<ul>\n<li>제어의 역적(IoC); 의존성 주입(DI); 관전 지향 프로그래밍(AOP); Model View Control(MVC);</li>\n</ul>\n<p><img src=\"https://d2h0cx97tjks2p.cloudfront.net/blogs/wp-content/uploads/sites/2/2018/06/Spring-Framework-Modules-01.jpg\" alt=\"modules todo\"></p>\n<p><br><br><br></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>DI 기능에 대해서는 다음에 따로 포스트할 예정(포스팅 하면 수정!!) <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"},{"title":"스프링 - POJO","author":{"nick":"TAEJIN","link":null},"date":"2019-02-03T15:59:18.000Z","subtitle":"POJO에 대해서 알아보자","cover":"https://spring.io/img/spring-by-pivotal.png","_content":"\n### Reference\n\n[Plain Old Java Object-위키](https://ko.wikipedia.org/wiki/Plain_Old_Java_Object)\n[POJO(Plain Old Java Object)](https://itewbm.tistory.com/entry/POJOPlain-Old-Java-Object)\n\n------\n\n:book: **목차** :book:\n\n- [POJO](#POJO)\n\n\n\n` 아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.`\n\n#### POJO\n\n:heavy_check_mark: **Plain Old Java Object** : (직역) 평범한 옛날 자바 객체\n\n 처음에 단순히 정의를 검색하다보니 정말 단순한 자바 객체인 것 같은데 왜 굳이 POJO라는 단어를 사용하는지 혼란스러웠습니다. Stack Overflow 같은데서도 자바빈과 비교하는 토론이 있기도하고 솔직히 현재도 완전히 이해했다고는 할 수 없지만 제가 생각하는 내용을 적었습니다.\n\n\n\n​\t***POJO의 탄생***\n\n> Any fool can write code that a computer an understand. Good programmers write code that humans can understand.\n> 컴퓨터가 이해하는 코드는 어느 바보나 짤 수 있다. 좋은 프로그래머는 사람이 이해하는 코드를 짠다.\n>\n> > Martin Fowler, <<리팩토링>>\n\n<img style=\"float:right; height:150px;\" src=\"https://martinfowler.com/img/mf-cologne.jpg\">\n\n POJO는 리팩토링과 애자일 소프트웨어 개발로 유명한 영국의 소프트웨어 개발자 **마틴 파울러** 가 2000년 가을에 열렸던 어느 컨퍼런스의 발표를 준비하면서 처음 사용한 단어입니다. 그는 당시 <u>EJB(Enterprise JavaBean) 보다는 단순한 자바 오브젝트에 도메인 로직을 넣어 사용하는 것이 여러가지 장점이 있는데 왜 사람들이 EJB가 아닌 '평범한 자바 오브젝트'를 사용하기를 꺼려하하는지에 대해 의문을 가졌습니다</u> 그래서 그의 생각을 널리 알리기 위해 그는 개발자들의 심리를 이용한 기발한 전략을 세웠습니다. POJO라는 용어를 만들고 이를 기반으로한 기술을 사용한다고 발표하여 다른 개발자들에게 마치 새로운 첨단 기술인 듯한 인상을 주었습니다.\n 정리하자면, 마틴 파울러는\n\n- 자바 개발자들에게 **단순하고 평범한 자바 오브젝트 사용을 권장** 하고\n- **자신의 생각을 효과적으로 전달** 하기 위해 POJO라는 단어를 사용 했습니다\n  Cf) 이를 계기로 다른 분야에서도 비슷한 용어들이 생긴 것을 보면 그의 전략이 성공적이 였다는 것을 쉽게 알 수 있습니다.\n  - Plain Old Data Structures(PODS) - C++ 언어에서 오직 C 언어의 특징만 사용하는 경우\n  - Plain Old Documentation(POD) - 펄(Perl) 언어에서 사용\n  - Plain Old PHP Object(POPO) - PHP 언어에서 사용\n\n\n\n이제 겨우 POJO의 형체가 희미하게 보이는 것 같습니다. 이 친구를 더 자세히 알기 위해선,\n\n- EJB(Enterprise JavaBean)는 무엇이며 어떤 문제점이 있는가\n- POJO란 그럼 그저 EJB 이전의 방식으로 돌아가는 것인가\n  를 알아야 겠다고 생각했습니다.\n\n\n\n​\t***Enterprise JavaBean?***\n\n\n\n<br><br><br>\n","source":"_posts/20190204-spring-pojo.md","raw":"---\ntitle: 스프링 - POJO\nauthor:\n  nick: TAEJIN\n  link: null\ncategories:\n  - WEB\n  - SPRING\ntags:\n  - SPRING\n  - POJO\ndate: 2019-02-04 00:59:18\nsubtitle: POJO에 대해서 알아보자\ncover: https://spring.io/img/spring-by-pivotal.png\n\n---\n\n### Reference\n\n[Plain Old Java Object-위키](https://ko.wikipedia.org/wiki/Plain_Old_Java_Object)\n[POJO(Plain Old Java Object)](https://itewbm.tistory.com/entry/POJOPlain-Old-Java-Object)\n\n------\n\n:book: **목차** :book:\n\n- [POJO](#POJO)\n\n\n\n` 아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.`\n\n#### POJO\n\n:heavy_check_mark: **Plain Old Java Object** : (직역) 평범한 옛날 자바 객체\n\n 처음에 단순히 정의를 검색하다보니 정말 단순한 자바 객체인 것 같은데 왜 굳이 POJO라는 단어를 사용하는지 혼란스러웠습니다. Stack Overflow 같은데서도 자바빈과 비교하는 토론이 있기도하고 솔직히 현재도 완전히 이해했다고는 할 수 없지만 제가 생각하는 내용을 적었습니다.\n\n\n\n​\t***POJO의 탄생***\n\n> Any fool can write code that a computer an understand. Good programmers write code that humans can understand.\n> 컴퓨터가 이해하는 코드는 어느 바보나 짤 수 있다. 좋은 프로그래머는 사람이 이해하는 코드를 짠다.\n>\n> > Martin Fowler, <<리팩토링>>\n\n<img style=\"float:right; height:150px;\" src=\"https://martinfowler.com/img/mf-cologne.jpg\">\n\n POJO는 리팩토링과 애자일 소프트웨어 개발로 유명한 영국의 소프트웨어 개발자 **마틴 파울러** 가 2000년 가을에 열렸던 어느 컨퍼런스의 발표를 준비하면서 처음 사용한 단어입니다. 그는 당시 <u>EJB(Enterprise JavaBean) 보다는 단순한 자바 오브젝트에 도메인 로직을 넣어 사용하는 것이 여러가지 장점이 있는데 왜 사람들이 EJB가 아닌 '평범한 자바 오브젝트'를 사용하기를 꺼려하하는지에 대해 의문을 가졌습니다</u> 그래서 그의 생각을 널리 알리기 위해 그는 개발자들의 심리를 이용한 기발한 전략을 세웠습니다. POJO라는 용어를 만들고 이를 기반으로한 기술을 사용한다고 발표하여 다른 개발자들에게 마치 새로운 첨단 기술인 듯한 인상을 주었습니다.\n 정리하자면, 마틴 파울러는\n\n- 자바 개발자들에게 **단순하고 평범한 자바 오브젝트 사용을 권장** 하고\n- **자신의 생각을 효과적으로 전달** 하기 위해 POJO라는 단어를 사용 했습니다\n  Cf) 이를 계기로 다른 분야에서도 비슷한 용어들이 생긴 것을 보면 그의 전략이 성공적이 였다는 것을 쉽게 알 수 있습니다.\n  - Plain Old Data Structures(PODS) - C++ 언어에서 오직 C 언어의 특징만 사용하는 경우\n  - Plain Old Documentation(POD) - 펄(Perl) 언어에서 사용\n  - Plain Old PHP Object(POPO) - PHP 언어에서 사용\n\n\n\n이제 겨우 POJO의 형체가 희미하게 보이는 것 같습니다. 이 친구를 더 자세히 알기 위해선,\n\n- EJB(Enterprise JavaBean)는 무엇이며 어떤 문제점이 있는가\n- POJO란 그럼 그저 EJB 이전의 방식으로 돌아가는 것인가\n  를 알아야 겠다고 생각했습니다.\n\n\n\n​\t***Enterprise JavaBean?***\n\n\n\n<br><br><br>\n","slug":"spring-pojo","published":1,"updated":"2019-02-04T13:37:29.471Z","_id":"cjrp4uzzu000mnf46izvk0nu7","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/Plain_Old_Java_Object\" target=\"_blank\" rel=\"noopener\">Plain Old Java Object-위키</a><br>\n<a href=\"https://itewbm.tistory.com/entry/POJOPlain-Old-Java-Object\" target=\"_blank\" rel=\"noopener\">POJO(Plain Old Java Object)</a></p>\n<hr>\n<p>📖 <strong>목차</strong> 📖</p>\n<ul>\n<li><a href=\"#POJO\">POJO</a></li>\n</ul>\n<p><code>아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.</code></p>\n<h4 id=\"pojo\"><a class=\"markdownIt-Anchor\" href=\"#pojo\"></a> POJO</h4>\n<p>✔️ <strong>Plain Old Java Object</strong> : (직역) 평범한 옛날 자바 객체</p>\n<p>처음에 단순히 정의를 검색하다보니 정말 단순한 자바 객체인 것 같은데 왜 굳이 POJO라는 단어를 사용하는지 혼란스러웠습니다. Stack Overflow 같은데서도 자바빈과 비교하는 토론이 있기도하고 솔직히 현재도 완전히 이해했다고는 할 수 없지만 제가 생각하는 내용을 적었습니다.</p>\n<p>​\t<em><strong>POJO의 탄생</strong></em></p>\n<blockquote>\n<p>Any fool can write code that a computer an understand. Good programmers write code that humans can understand.<br>\n컴퓨터가 이해하는 코드는 어느 바보나 짤 수 있다. 좋은 프로그래머는 사람이 이해하는 코드를 짠다.</p>\n<blockquote>\n<p>Martin Fowler, &lt;&lt;리팩토링&gt;&gt;</p>\n</blockquote>\n</blockquote>\n<img style=\"float:right; height:150px;\" src=\"https://martinfowler.com/img/mf-cologne.jpg\">\n<p>POJO는 리팩토링과 애자일 소프트웨어 개발로 유명한 영국의 소프트웨어 개발자 <strong>마틴 파울러</strong> 가 2000년 가을에 열렸던 어느 컨퍼런스의 발표를 준비하면서 처음 사용한 단어입니다. 그는 당시 <u>EJB(Enterprise JavaBean) 보다는 단순한 자바 오브젝트에 도메인 로직을 넣어 사용하는 것이 여러가지 장점이 있는데 왜 사람들이 EJB가 아닌 '평범한 자바 오브젝트’를 사용하기를 꺼려하하는지에 대해 의문을 가졌습니다</u> 그래서 그의 생각을 널리 알리기 위해 그는 개발자들의 심리를 이용한 기발한 전략을 세웠습니다. POJO라는 용어를 만들고 이를 기반으로한 기술을 사용한다고 발표하여 다른 개발자들에게 마치 새로운 첨단 기술인 듯한 인상을 주었습니다.<br>\n정리하자면, 마틴 파울러는</p>\n<ul>\n<li>자바 개발자들에게 <strong>단순하고 평범한 자바 오브젝트 사용을 권장</strong> 하고</li>\n<li><strong>자신의 생각을 효과적으로 전달</strong> 하기 위해 POJO라는 단어를 사용 했습니다<br>\nCf) 이를 계기로 다른 분야에서도 비슷한 용어들이 생긴 것을 보면 그의 전략이 성공적이 였다는 것을 쉽게 알 수 있습니다.\n<ul>\n<li>Plain Old Data Structures(PODS) - C++ 언어에서 오직 C 언어의 특징만 사용하는 경우</li>\n<li>Plain Old Documentation(POD) - 펄(Perl) 언어에서 사용</li>\n<li>Plain Old PHP Object(POPO) - PHP 언어에서 사용</li>\n</ul>\n</li>\n</ul>\n<p>이제 겨우 POJO의 형체가 희미하게 보이는 것 같습니다. 이 친구를 더 자세히 알기 위해선,</p>\n<ul>\n<li>EJB(Enterprise JavaBean)는 무엇이며 어떤 문제점이 있는가</li>\n<li>POJO란 그럼 그저 EJB 이전의 방식으로 돌아가는 것인가<br>\n를 알아야 겠다고 생각했습니다.</li>\n</ul>\n<p>​\t<em><strong>Enterprise JavaBean?</strong></em></p>\n<p><br><br><br></p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/taejin0323"},{"title":"rss","icon":"icon-rss","link":"/atom.xml"}]}},"excerpt":"","more":"<h3 id=\"reference\"><a class=\"markdownIt-Anchor\" href=\"#reference\"></a> Reference</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/Plain_Old_Java_Object\" target=\"_blank\" rel=\"noopener\">Plain Old Java Object-위키</a><br>\n<a href=\"https://itewbm.tistory.com/entry/POJOPlain-Old-Java-Object\" target=\"_blank\" rel=\"noopener\">POJO(Plain Old Java Object)</a></p>\n<hr>\n<p>📖 <strong>목차</strong> 📖</p>\n<ul>\n<li><a href=\"#POJO\">POJO</a></li>\n</ul>\n<p><code>아직 많은 것을 알지 못하기 때문에 자세하고 정확한 내용은 제가 참조한 사이트나 따로 검색 또는 책을 통해 알아보는 것을 권장드립니다.</code></p>\n<h4 id=\"pojo\"><a class=\"markdownIt-Anchor\" href=\"#pojo\"></a> POJO</h4>\n<p>✔️ <strong>Plain Old Java Object</strong> : (직역) 평범한 옛날 자바 객체</p>\n<p>처음에 단순히 정의를 검색하다보니 정말 단순한 자바 객체인 것 같은데 왜 굳이 POJO라는 단어를 사용하는지 혼란스러웠습니다. Stack Overflow 같은데서도 자바빈과 비교하는 토론이 있기도하고 솔직히 현재도 완전히 이해했다고는 할 수 없지만 제가 생각하는 내용을 적었습니다.</p>\n<p>​\t<em><strong>POJO의 탄생</strong></em></p>\n<blockquote>\n<p>Any fool can write code that a computer an understand. Good programmers write code that humans can understand.<br>\n컴퓨터가 이해하는 코드는 어느 바보나 짤 수 있다. 좋은 프로그래머는 사람이 이해하는 코드를 짠다.</p>\n<blockquote>\n<p>Martin Fowler, &lt;&lt;리팩토링&gt;&gt;</p>\n</blockquote>\n</blockquote>\n<img style=\"float:right; height:150px;\" src=\"https://martinfowler.com/img/mf-cologne.jpg\">\n<p>POJO는 리팩토링과 애자일 소프트웨어 개발로 유명한 영국의 소프트웨어 개발자 <strong>마틴 파울러</strong> 가 2000년 가을에 열렸던 어느 컨퍼런스의 발표를 준비하면서 처음 사용한 단어입니다. 그는 당시 <u>EJB(Enterprise JavaBean) 보다는 단순한 자바 오브젝트에 도메인 로직을 넣어 사용하는 것이 여러가지 장점이 있는데 왜 사람들이 EJB가 아닌 '평범한 자바 오브젝트’를 사용하기를 꺼려하하는지에 대해 의문을 가졌습니다</u> 그래서 그의 생각을 널리 알리기 위해 그는 개발자들의 심리를 이용한 기발한 전략을 세웠습니다. POJO라는 용어를 만들고 이를 기반으로한 기술을 사용한다고 발표하여 다른 개발자들에게 마치 새로운 첨단 기술인 듯한 인상을 주었습니다.<br>\n정리하자면, 마틴 파울러는</p>\n<ul>\n<li>자바 개발자들에게 <strong>단순하고 평범한 자바 오브젝트 사용을 권장</strong> 하고</li>\n<li><strong>자신의 생각을 효과적으로 전달</strong> 하기 위해 POJO라는 단어를 사용 했습니다<br>\nCf) 이를 계기로 다른 분야에서도 비슷한 용어들이 생긴 것을 보면 그의 전략이 성공적이 였다는 것을 쉽게 알 수 있습니다.\n<ul>\n<li>Plain Old Data Structures(PODS) - C++ 언어에서 오직 C 언어의 특징만 사용하는 경우</li>\n<li>Plain Old Documentation(POD) - 펄(Perl) 언어에서 사용</li>\n<li>Plain Old PHP Object(POPO) - PHP 언어에서 사용</li>\n</ul>\n</li>\n</ul>\n<p>이제 겨우 POJO의 형체가 희미하게 보이는 것 같습니다. 이 친구를 더 자세히 알기 위해선,</p>\n<ul>\n<li>EJB(Enterprise JavaBean)는 무엇이며 어떤 문제점이 있는가</li>\n<li>POJO란 그럼 그저 EJB 이전의 방식으로 돌아가는 것인가<br>\n를 알아야 겠다고 생각했습니다.</li>\n</ul>\n<p>​\t<em><strong>Enterprise JavaBean?</strong></em></p>\n<p><br><br><br></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjrp4uzzd0007nf469drbkewz","category_id":"cjrp4uzzn000enf46isv7a7uc","_id":"cjrp4uzzw000nnf46978ie3hk"},{"post_id":"cjrp4uzyv0001nf46brxqheq9","category_id":"cjrp4uzz90005nf46rerf17q9","_id":"cjrp4v006000wnf46fu7n7wt7"},{"post_id":"cjrp4uzyv0001nf46brxqheq9","category_id":"cjrp4uzzx000onf46hh9ov0bq","_id":"cjrp4v007000ynf46fzeyjtvf"},{"post_id":"cjrp4uzzj000cnf4686khwbho","category_id":"cjrp4uzz90005nf46rerf17q9","_id":"cjrp4v0080012nf469p6akqwv"},{"post_id":"cjrp4uzzj000cnf4686khwbho","category_id":"cjrp4v006000vnf46nyx5e3v2","_id":"cjrp4v0090016nf46o8ziosm1"},{"post_id":"cjrp4uzz00003nf46z84s0gb2","category_id":"cjrp4uzzh000anf46pnea5cu0","_id":"cjrp4v00a0019nf46o0hb8kdg"},{"post_id":"cjrp4uzz00003nf46z84s0gb2","category_id":"cjrp4v007000znf46ylatz6zq","_id":"cjrp4v00b001bnf460n0gbswn"},{"post_id":"cjrp4uzzk000dnf4637k16pb6","category_id":"cjrp4uzzh000anf46pnea5cu0","_id":"cjrp4v00m001dnf46ydsietbi"},{"post_id":"cjrp4uzzk000dnf4637k16pb6","category_id":"cjrp4v007000znf46ylatz6zq","_id":"cjrp4v00n001fnf46bfx7rqwh"},{"post_id":"cjrp4uzzu000mnf46izvk0nu7","category_id":"cjrp4uzzt000knf46fy3x477g","_id":"cjrp4v00p001jnf46hrgrcwwq"},{"post_id":"cjrp4uzzu000mnf46izvk0nu7","category_id":"cjrp4v00m001cnf46azdspj2o","_id":"cjrp4v00q001knf46bv8z81t2"},{"post_id":"cjrp4uzzf0008nf46zp1gvl1z","category_id":"cjrp4uzzt000knf46fy3x477g","_id":"cjrp4v00r001onf465mgevifx"},{"post_id":"cjrp4uzzf0008nf46zp1gvl1z","category_id":"cjrp4v00m001cnf46azdspj2o","_id":"cjrp4v00s001qnf46zi49xxch"},{"post_id":"cjrp4uzzg0009nf463i8p1hwg","category_id":"cjrp4uzzt000knf46fy3x477g","_id":"cjrp4v00t001tnf46dv1tmqyk"},{"post_id":"cjrp4uzzg0009nf463i8p1hwg","category_id":"cjrp4v00m001cnf46azdspj2o","_id":"cjrp4v00u001vnf465f2h1lde"},{"post_id":"cjrp4uzzs000inf4619677e5o","category_id":"cjrp4uzzt000knf46fy3x477g","_id":"cjrp4v00v001xnf46o2qhbopt"},{"post_id":"cjrp4uzzs000inf4619677e5o","category_id":"cjrp4v00m001cnf46azdspj2o","_id":"cjrp4v00w001ynf465qk1f738"}],"PostTag":[{"post_id":"cjrp4uzyv0001nf46brxqheq9","tag_id":"cjrp4uzzc0006nf46adqb3v0a","_id":"cjrp4uzzq000hnf46aokiybqg"},{"post_id":"cjrp4uzyv0001nf46brxqheq9","tag_id":"cjrp4uzzi000bnf46kdrlj2lk","_id":"cjrp4uzzt000jnf461omj5zei"},{"post_id":"cjrp4uzz00003nf46z84s0gb2","tag_id":"cjrp4uzzo000fnf46b2no84z7","_id":"cjrp4v002000qnf46xok0zhfk"},{"post_id":"cjrp4uzz00003nf46z84s0gb2","tag_id":"cjrp4uzzu000lnf46a79z0e20","_id":"cjrp4v002000rnf46sjsoxowu"},{"post_id":"cjrp4uzzd0007nf469drbkewz","tag_id":"cjrp4v001000pnf46c5rftfuw","_id":"cjrp4v005000unf46dy789sou"},{"post_id":"cjrp4uzzf0008nf46zp1gvl1z","tag_id":"cjrp4v003000tnf4686qqm70t","_id":"cjrp4v0080011nf46p902xj1m"},{"post_id":"cjrp4uzzf0008nf46zp1gvl1z","tag_id":"cjrp4v006000xnf46vcggj996","_id":"cjrp4v0080013nf46psk4n5pw"},{"post_id":"cjrp4uzzg0009nf463i8p1hwg","tag_id":"cjrp4v0070010nf46uyh00hhh","_id":"cjrp4v00a0017nf467cxhfta8"},{"post_id":"cjrp4uzzj000cnf4686khwbho","tag_id":"cjrp4v0090015nf46p1n3qm2l","_id":"cjrp4v00r001mnf46ddn43mwi"},{"post_id":"cjrp4uzzj000cnf4686khwbho","tag_id":"cjrp4v00b001anf46fzhyhbeg","_id":"cjrp4v00s001pnf46fjmhdga0"},{"post_id":"cjrp4uzzj000cnf4686khwbho","tag_id":"cjrp4v00n001enf46lqa9dy5i","_id":"cjrp4v00t001snf46jmh7hn2a"},{"post_id":"cjrp4uzzj000cnf4686khwbho","tag_id":"cjrp4v00o001hnf465kqiat8f","_id":"cjrp4v00u001unf46e3wp36oe"},{"post_id":"cjrp4uzzk000dnf4637k16pb6","tag_id":"cjrp4v00q001lnf4618agls5o","_id":"cjrp4v00x0020nf46av7bob17"},{"post_id":"cjrp4uzzk000dnf4637k16pb6","tag_id":"cjrp4v00s001rnf46gdd59hjd","_id":"cjrp4v00y0021nf46xzukihaj"},{"post_id":"cjrp4uzzk000dnf4637k16pb6","tag_id":"cjrp4uzzo000fnf46b2no84z7","_id":"cjrp4v00y0023nf463anhajkf"},{"post_id":"cjrp4uzzs000inf4619677e5o","tag_id":"cjrp4v00w001znf46f32r4yt6","_id":"cjrp4v0100025nf46f0a68pvi"},{"post_id":"cjrp4uzzs000inf4619677e5o","tag_id":"cjrp4v00y0022nf46oiuteywt","_id":"cjrp4v0110026nf463wdwdr29"},{"post_id":"cjrp4uzzu000mnf46izvk0nu7","tag_id":"cjrp4v0070010nf46uyh00hhh","_id":"cjrp4v0120028nf4614tq53z1"},{"post_id":"cjrp4uzzu000mnf46izvk0nu7","tag_id":"cjrp4v0110027nf4619aic2m2","_id":"cjrp4v0120029nf469nplzz8x"}],"Tag":[{"name":"markup","_id":"cjrp4uzzc0006nf46adqb3v0a"},{"name":"markdown","_id":"cjrp4uzzi000bnf46kdrlj2lk"},{"name":"HL7","_id":"cjrp4uzzo000fnf46b2no84z7"},{"name":"cda","_id":"cjrp4uzzu000lnf46a79z0e20"},{"name":"잡다한","_id":"cjrp4v001000pnf46c5rftfuw"},{"name":"spring","_id":"cjrp4v003000tnf4686qqm70t"},{"name":"스프링","_id":"cjrp4v006000xnf46vcggj996"},{"name":"SPRING","_id":"cjrp4v0070010nf46uyh00hhh"},{"name":"hexo","_id":"cjrp4v0090015nf46p1n3qm2l"},{"name":"plugins","_id":"cjrp4v00b001anf46fzhyhbeg"},{"name":"헥소","_id":"cjrp4v00n001enf46lqa9dy5i"},{"name":"플러그인","_id":"cjrp4v00o001hnf465kqiat8f"},{"name":"CDA","_id":"cjrp4v00q001lnf4618agls5o"},{"name":"C-CDA","_id":"cjrp4v00s001rnf46gdd59hjd"},{"name":"FRAMEWORK","_id":"cjrp4v00w001znf46f32r4yt6"},{"name":"MODULES","_id":"cjrp4v00y0022nf46oiuteywt"},{"name":"POJO","_id":"cjrp4v0110027nf4619aic2m2"}]}}